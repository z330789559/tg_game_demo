{"version":3,"sources":["assets/scripts/AlljsonData.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/layer/BaseItem.ts","assets/scripts/layer/BaseLanguageLayer.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/Board.ts","assets/scripts/game/CarSingle.ts","assets/scripts/game/Car.ts","assets/scripts/Config.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/layer/ExitLevelLayer.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HeaderLayer.ts","assets/scripts/Index.ts","assets/scripts/Languages.ts","assets/scripts/layer/LevelSelectLayer.ts","assets/scripts/layer/LevelUILayer.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MainLevelLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/layer/MoreLayer.ts","assets/scripts/layer/OverLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/RankLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShareLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/layer/SkillSubmitLayer.ts","assets/scripts/manager/SpriteManager.ts","assets/scripts/StaticInstance.ts","assets/scripts/layer/TaskLayer.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/plugins/UITransitionControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/cocos-telegram-miniapps/telegram-ui.ts","assets/scripts/cocos-telegram-miniapps/telegram-web.ts","assets/scripts/cocos-telegram-miniapps/webton.ts"],"names":["exports","allJson","name","zh-CN","zh-TW","en","ru","ar","ja","Enum_1","require","DataManager_1","ResourceManager_1","AudioManager","this","audioSource","getInstance","_instance","init","Object","defineProperty","get","prototype","cc","AudioSource","loop","volume","playMusic","default","instance","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","_a","sent","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","Languages_1","AudioManager_1","EventManager_1","_decorator","ccclass","property","BaseItem","_super","__extends","_this","apply","arguments","allNodeClickEvent","allLabels","BaseItem_1","onLoad","node","walk","getComponent","Label","push","start","updateLanguage","setData","data","onEnable","on","EventType","UPDATE_LANGUAGE","onDisable","off","i","length","Languages","string","language","onTouch","cb","target","Button","addComponent","transition","Transition","SCALE","duration","zoomScale","callback","CLICK","call","onDestroy","item","CreateListItem","content","itemNode","Base","child","children","instantiate","addChild","active","__decorate","Component","Baselayer_1","BaseLanguageLayer","BaseLayer","show","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","then","zoomOut","Utils_1","PoolManager_1","Car_1","Board","mode","ENUM_GAME_MODE","TIMER","LEVEL_DATA","level","cars","carNum","LEVEL","CLEVEL_Data","clevel","crash","random","crashTotal","removeAllChildren","xn","width","unit","yn","height","outForTest","carPool","Map","x","y","has","dir","hn","carNode","getNode","carComponent","n","set","setPosition","setDir","setSprite","setCollider","wn","exitNode","exitCollider","BoxCollider","size","blockNode","blockCollider","StaticInstance_1","EffectManager_1","CAR_RESOUCE_PREFIX","Car","speedExit","touchPos","touchSlideDis","touchSlideDir","v2","isMoving","Node","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchOver","TOUCH_CANCEL","getChildByName","Sprite","spriteFrame","getSprite","collider","Size","setParticle","collect","ParticleSystem","resetSystem","e","currentCar","location","getLocation","parent","convertToNodeSpaceAR","isTimerStart","StaticInstance","uiManager","setMainTimer","dis","getDistance","angle","Math","abs","getAngle","BI","resetStatus","BIBI","update","dt","onCollisionEnter","other","self","isShaking","tag","ENUM_COLLIDER_TYPE","CAR","BLOCK","CRASH","shake","gameManager","stage","crashPos","pos","EXIT","Exit","_b","_c","winSize","swidth","sheight","offset","p","toXY","mtime","moveTo","carExitNum","onGameCheck","removeFromParent","scheduleOnce","type","Enum","up","right","down","left","tooltip","ToastManager_1","isOpacity","opacityCount","isExiting","isSkillRuning","isSkilling","carComponent_1","carNode_1","skillIndex","SKILL","to","setMainSkillTip","carOne","board","find","indexOf","opacity","gravity","bg_color","color","tip","zIndex","roads","crashCurrent","setMainLevelCrash","seconds","setMainTimerRendor","selfComponent","otherComponent","otherAabb","world","aabb","otherPreAabb","preAabb","clone","selfAabb","selfPreAabb","Intersection","rectRect","_self","_other","_d","onCollisionExit","otherNode","protool","host","config","backendUrl","URL_YOU_ASSIGNED_TO_YOUR_APP","STORAGE_KEY","DataManager","LanguageType","EN","status","ENUM_GAME_STATUS","UNRUNING","loadingRate","_isMusicOn","_isSoundOn","games","title","icon","appid","url","levelMax","levelData","clevelMax","power","powerCollectByVideo","lastPowerRefreshTime","powerRefreshTime","lastPowerUpdateTime","keys","keysCollectByVideo","secondsRecord","reset","save","sys","localStorage","setItem","JSON","stringify","restore","_data","getItem","parse","star","EffectManager","effect","options","effNode","Animation","anim","targetNode","once","onceNodeShake","nodeStartPos","getPosition","onceDuration","maxNum","minNum","Tween","stopAllByTarget","randomX","randomY","random1","round","random2","sequence","position","v3","repeatForever","Promise","resolve","reject","setTimeout","Array","tweens","all","forEach","ENUM_UI_TYPE","ENUM_GAME_EVENT","ENUM_RESOURCE_TYPE","AudioClip","path","ratio","Prefab","SpriteFrame","EventManager","[object Object]","eventMap","messageMap","event","context","eventArr","messages","params","delete","index","findIndex","splice","clear","SdkManager_1","ExitLayer","panel","btnSubmit","btnClose","onSubmitClick","onCloseClick","toggleBannerAd","toggle","MAIN","MENU","BaseLanguageLayer_1","ExitLevelLayer","btnRestart","onRestartClick","EXIT_LEVEL","MAIN_LEVEL","transitionsManager","onGameLevelStart","Board_1","GameManager","setGameManager","onGameStart","initGame","isActive","WIN","setMainLevelUpNotice","OVER","LOSE","PASS","min","boardComponent","RUNING","SKILL_SUBMIT","READY","setMainLevelTip","HeaderLayer","barPower","barKey","timerPower","rendorPower","num","btn","hasEventListener","getRewardByVideo","rendorKeys","showVideoAd","msg","getPlatform","GET_MONEY","rendorPowerTimer","unscheduleAllCallbacks","isSchedule","time_1","formatSeconds","callback_1","unschedule","Date","getTime","schedule","Config_1","telegram_web_1","telegram_ui_1","webton_1","Index","collisionManagerDebug","_bTonInit","view","setResizeCallback","responsive","TelegramWebApp","Instance","res","console","log","success","catch","err","error","loadWallet","_initTonUI","WebTon","colManager","director","getCollisionManager","enabled","enabledDebugDraw","TonConnectUi","_config","tonAddress","subscribeWallet","emit","CONNECT_COMPLETE","isConnected","disconnect","openModal","value","fetch","headers","Content-Type","Accept","ngrok-skip-browser-warning","method","response","json","addressConfig","tokenRecipient","jettonAddress","jettonMaster","amount","tonTransferReq","toNano","sendTransaction","userId","userData","getTelegramUser","id","share","body","tg_data","window","Telegram","WebApp","initData","payload","product","ok","openInvoice","invoiceLink","result","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","onPowerIncrease","LEVEL_UI","LEVEL_SELECT","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitWidth","Canvas","fitHeight","fitWidth","setFitHeight","setFitBoth","designRatio","viewRatio","now","floor","powers","RU","AR","JA","suoduan","touming","yichu","zhuanqv","renwu","shangdian","yaoqing","guankaxuanze","putongmoshi","tiaozhanmoshi","exitgame","exit","chongwan","meirirenwu","mubiaorenwu","libao","yaoshi","daibi","pifu","huasuanlibao","chaojilibao","pifulibao","jingqingqidai","chakanxinwen","jiarupindao","guanzhutuite","guankayouxi","tongguan10","tongguan20","leijitili100","leijitili200","leijiyichu20","fenxiangtips","leijiyaoqing","shouyaozhemingdan","chakanquanbu","lijiyaoqing","kelingqv","yilingqv","zanwugengduo","yinyue","yinxiao","youxishezhi","yuyanqiehuan","CH_J","CH_F","fenxiang","xiayiguan","zaiwanyici","SpriteManager_1","PanelType","LevelItemPuTong","levelLabel","sprite","nowData","unLock","onTouchClick","custemIcon","GOTO_LEVEL","Putong","LevelItemTiaoZhan","custemTZIcon","Tiaozhan","LevelSelectLayer","levelItemPuTong","levelItemTiaoZhan","btnPuTong","btnTiaoZhan","labelPuTong","labelTiaoZhan","panelType","onPuTongClick","onTiaoZhanClick","gotoLevel","initPanel","ModelSprite","removeItem","layer","putNode","LevelUILayer","btnPause","btnLevel","btnSkills","btnSuoduan","btnTouming","btnYichu","btnDown","btnZhuanQv","btnRenwu","btnShop","btnShare","btnWallet","btnSend","connectLabel","super","onPauseClick","onLevelClick","onSuoDuanClick","onTouMingClick","onYiChuClick","onRenWuClick","onShopClick","onShareClick","onZhuanQvClick","openWallet","sendTon","OPEN_LEVEL_BTN","openLevelBtn","subscribe","createMessagePayload","callBack","updateConnect","address","label","longAddress","parseAddress","substr","account","add","parseRaw","setWalletUi","SETTING","TASK","SHOP","SHARE","updateBtnState","taskIcon","shopIcon","shareIcon","LoadingLayer","loadfill","fillRange","HeaderLayer_1","LoseLayer","btnNext","onNextClick","MainLayer","levelUpNode","timerNum","skills","onSkillClick","skillTip","setLevelUpNotice","stopAllActions","act1","act2","delayTime","act3","setTimerRendor","onTimerStart","onTimerStop","setSkillTip","tips","MainLevelLayer","crashNum","nums","max","MenuLayer","btnStartTimer","btnStartLevel","btnSetting","btnGames","btnRank","onStartTimerClick","onStartLevelClick","onSettingClick","onGamesClick","onRankClick","MORE","activeShare","RANK","UIScrollControl_1","MoreLayer","scrollNode","scrollItem","rendor","toggleCustomRowAd","isScrollToTop","ScrollView","scrollToTop","game","onItemClick","scroll","turnToApp","OverLayer","scoreNode","noticeNode","particles","rendorScore","setRank","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","NodePool","prefab","tempPre","put","clearPool","setPrefab","getPrefab","RankLayer","showInterstitialAd","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","assets","asset","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","platform","WECHAT_GAME","BYTEDANCE_GAME","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","key","getLaunchOptionsSync","appId","turnToBrowser","navigateToMiniProgram","open","onAudioInterruptionEnd","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","top","windowWidth","onResize","realHeight","realWidth","onError","isShow","createInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomColAd","postMessage","YuYanItem","onTouchNode","SettingLayer","btnMusic","btnSound","btnLanguage","nowLanguage","yuyanItem","onMusicClick","onSoundClick","onLanguageClick","rendorMusic","rendorSound","updateNowLanguageLabel","settingBtn","ShareLayer","ShopLayer","SkillSubmitLayer","rendorPanel","SpriteManager","modelSpriteFrame","taskIconSprite","shopIconSprite","shareIconSprite","custemPuSprite","custemTZSprite","settingBtnSprite","setUIManager","setTransitionManager","TaskLayer","ToastManager","text","_e","canvas","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","fontSize","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","fill","callFunc","destroy","action","moveBy","fadeOut","UIManager","uiMap","getActiveTypes","types","setCrashRendor","setLevelTip","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","scrollTo","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","isAlignTop","isAlignBottom","bottom","getContentSize","setContentSize","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","UITransitionControl","transitionTime","mask","img","Mask","from","changed","act4","onStart","onEnd","lower","upper","shuffle","arr","randomIndex","temp","sort","flag","a","b","dateFormat","Number","obj","h","parseInt","String","s","rs","replace","end","sqrt","dx","dy","signAngle","degree","getXYFromPos","px","py","node1","node2","wpos","convertToWorldSpaceAR","TonConnectUi_1","_tgConnect","ton","parseFloat","toString","connected","raw","manifestUrl","tonWallet","script","document","createElement","src","async","onload","intervalId","setInterval","TON_CONNECT_UI","tonConnect","TonConnectUI","uiOptions","clearInterval","onerror","Error","head","appendChild","unsubscribeModal","onStatusChange","state","unsubscribeConnectUI","info","getWallets","args","transaction","validUntil","message","tgLoadPromise","_tgWebAppJS","TelegramWebApp_1","__awaiter","openTelegramLink","shareUrl","URLSearchParams","getTelegramWebApp","getTelegramWebAppInitData","initDataUnsafe","user","getTelegramInitData","alert","showAlert","WebTon_1","_webTon","TonWeb","hexAddress","Address","utils","userFriendlyAddress","cell","boc","Cell","bits","writeUint","writeString","cellBytes","toBoc","bytesToBase64"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACaA,QAAAC,UAAA,EACT;MACIC,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC,SAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;MACAC,IAAA;OAEJ;MACIN,MAAA;MACAC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","sourcesContent":["\nexport const allJson = [\n    {\n        \"name\": \"suoduan\",\n        \"zh-CN\": \"缩短\",\n        \"zh-TW\": \"縮短\",\n        \"en\": \"shorten\",\n        \"ru\": \"Сокращение\",\n        \"ar\": \"تقصير\",\n        \"ja\": \"短縮\"\n    },\n    {\n        \"name\": \"touming\",\n        \"zh-CN\": \"透明\",\n        \"zh-TW\": \"透明\",\n        \"en\": \"transparent\",\n        \"ru\": \"Прозрачность\",\n        \"ar\": \"شفافية\",\n        \"ja\": \"透過性\"\n    },\n    {\n        \"name\": \"yichu\",\n        \"zh-CN\": \"移除\",\n        \"zh-TW\": \"移除\",\n        \"en\": \"remove\",\n        \"ru\": \"Удалить\",\n        \"ar\": \"إزالة\",\n        \"ja\": \"除去じょきょ\"\n    },\n    {\n        \"name\": \"zhuanqv\",\n        \"zh-CN\": \"赚取\",\n        \"zh-TW\": \"賺取\",\n        \"en\": \"earn\",\n        \"ru\": \"Заработать\",\n        \"ar\": \"كسب\",\n        \"ja\": \"もうかる\"\n    },\n    {\n        \"name\": \"renwu\",\n        \"zh-CN\": \"任务\",\n        \"zh-TW\": \"任務\",\n        \"en\": \"task\",\n        \"ru\": \"Мандат\",\n        \"ar\": \"مهمة\",\n        \"ja\": \"タスク＃タスク＃\"\n    },\n    {\n        \"name\": \"shangdian\",\n        \"zh-CN\": \"商店\",\n        \"zh-TW\": \"商店\",\n        \"en\": \"store\",\n        \"ru\": \"Магазины\",\n        \"ar\": \"مخزن\",\n        \"ja\": \"店\"\n    },\n    {\n        \"name\": \"yaoqing\",\n        \"zh-CN\": \"邀请\",\n        \"zh-TW\": \"邀請\",\n        \"en\": \"invite\",\n        \"ru\": \"Приглашение\",\n        \"ar\": \"دعوة\",\n        \"ja\": \"に勧める\"\n    },\n    {\n        \"name\": \"guankaxuanze\",\n        \"zh-CN\": \"关卡选择\",\n        \"zh-TW\": \"關卡選擇\",\n        \"en\": \"Stage Select\",\n        \"ru\": \"Выбрать уровень\",\n        \"ar\": \"اختيار مستوى\",\n        \"ja\": \"レベル選択\"\n    },\n    {\n        \"name\": \"putongmoshi\",\n        \"zh-CN\": \"普通模式\",\n        \"zh-TW\": \"普通模式\",\n        \"en\": \"Normal mode\",\n        \"ru\": \"Обычная модель\",\n        \"ar\": \"الوضع العام\",\n        \"ja\": \"通常モード\"\n    },\n    {\n        \"name\": \"tiaozhanmoshi\",\n        \"zh-CN\": \"挑战模式\",\n        \"zh-TW\": \"挑戰模式\",\n        \"en\": \"Challenge Mode\",\n        \"ru\": \"Модель вызова\",\n        \"ar\": \"وضع التحدي\",\n        \"ja\": \"チャレンジモード\"\n    },\n    {\n        \"name\": \"exitgame\",\n        \"zh-CN\": \"退出游戏\",\n        \"zh-TW\": \"退出遊戲\",\n        \"en\": \"Exit the game\",\n        \"ru\": \"Выйти из игры\",\n        \"ar\": \"الخروج من اللعبة\",\n        \"ja\": \"ゲームを終了する\"\n    },\n    {\n        \"name\": \"exit\",\n        \"zh-CN\": \"退出\",\n        \"zh-TW\": \"退出\",\n        \"en\": \"exit\",\n        \"ru\": \"Выход\",\n        \"ar\": \"سحب\",\n        \"ja\": \"終了\"\n    },\n    {\n        \"name\": \"chongwan\",\n        \"zh-CN\": \"重玩\",\n        \"zh-TW\": \"重玩\",\n        \"en\": \"Play again\",\n        \"ru\": \"Повторить игру\",\n        \"ar\": \"إعادة اللعب\",\n        \"ja\": \"遊び直す\"\n    },\n    {\n        \"name\": \"meirirenwu\",\n        \"zh-CN\": \"每日任务\",\n        \"zh-TW\": \"每日任務\",\n        \"en\": \"Daily tasks\",\n        \"ru\": \"Ежедневные задания\",\n        \"ar\": \"المهام اليومية\",\n        \"ja\": \"毎日のタスク\"\n    },\n    {\n        \"name\": \"mubiaorenwu\",\n        \"zh-CN\": \"目标任务\",\n        \"zh-TW\": \"目標任務\",\n        \"en\": \"target task\",\n        \"ru\": \"Задачи\",\n        \"ar\": \"الهدف من المهمة\",\n        \"ja\": \"ターゲットタスク\"\n    },\n    {\n        \"name\": \"libao\",\n        \"zh-CN\": \"礼包\",\n        \"zh-TW\": \"禮包\",\n        \"en\": \"Gift Pack\",\n        \"ru\": \"Сумка\",\n        \"ar\": \"هدية\",\n        \"ja\": \"プレゼント\"\n    },\n    {\n        \"name\": \"yaoshi\",\n        \"zh-CN\": \"钥匙\",\n        \"zh-TW\": \"鑰匙\",\n        \"en\": \"key\",\n        \"ru\": \"Ключ.\",\n        \"ar\": \"مفتاح .\",\n        \"ja\": \"かぎ本\"\n    },\n    {\n        \"name\": \"daibi\",\n        \"zh-CN\": \"代币\",\n        \"zh-TW\": \"代幣\",\n        \"en\": \"Token\",\n        \"ru\": \"Токены\",\n        \"ar\": \"رمز العملة\",\n        \"ja\": \"トークン\"\n    },\n    {\n        \"name\": \"pifu\",\n        \"zh-CN\": \"皮肤\",\n        \"zh-TW\": \"皮膚\",\n        \"en\": \"skin\",\n        \"ru\": \"Кожа\",\n        \"ar\": \"الجلد .\",\n        \"ja\": \"スキン\"\n    },\n    {\n        \"name\": \"huasuanlibao\",\n        \"zh-CN\": \"划算礼包\",\n        \"zh-TW\": \"划算禮包\",\n        \"en\": \"Cost effective gift package\",\n        \"ru\": \"Экономия сумок\",\n        \"ar\": \"صفقة\",\n        \"ja\": \"お得なギフトバッグ\"\n    },\n    {\n        \"name\": \"chaojilibao\",\n        \"zh-CN\": \"超级礼包\",\n        \"zh-TW\": \"超級禮包\",\n        \"en\": \"Super Gift Pack\",\n        \"ru\": \"Суперсумка\",\n        \"ar\": \"سوبر حقيبة\",\n        \"ja\": \"スーパーギフト\"\n    },\n    {\n        \"name\": \"pifulibao\",\n        \"zh-CN\": \"皮肤礼包\",\n        \"zh-TW\": \"皮膚禮包\",\n        \"en\": \"Skin Gift Pack\",\n        \"ru\": \"Кожные сумки\",\n        \"ar\": \"حقيبة جلدية\",\n        \"ja\": \"スキンポーチ\"\n    },\n    {\n        \"name\": \"jingqingqidai\",\n        \"zh-CN\": \"敬请期待\",\n        \"zh-TW\": \"敬請期待\",\n        \"en\": \"Coming soon\",\n        \"ru\": \"С нетерпением жду\",\n        \"ar\": \"يرجى نتطلع إلى\",\n        \"ja\": \"お楽しみに\"\n    },\n    {\n        \"name\": \"chakanxinwen\",\n        \"zh-CN\": \"查看官方新闻\",\n        \"zh-TW\": \"查看官方新聞\",\n        \"en\": \"View official news\",\n        \"ru\": \"Смотреть официальные новости\",\n        \"ar\": \"عرض الأخبار الرسمية\",\n        \"ja\": \"公式ニュースを見る\"\n    },\n    {\n        \"name\": \"jiarupindao\",\n        \"zh-CN\": \"加入官方频道\",\n        \"zh-TW\": \"加入官方頻道\",\n        \"en\": \"Join the official channel\",\n        \"ru\": \"Присоединяйтесь к официальному каналу\",\n        \"ar\": \"الانضمام إلى القناة الرسمية\",\n        \"ja\": \"公式チャンネルに参加する\"\n    },\n    {\n        \"name\": \"guanzhutuite\",\n        \"zh-CN\": \"关注官方推特\",\n        \"zh-TW\": \"關注官方推特\",\n        \"en\": \"Follow the official Twitter account\",\n        \"ru\": \"Следите за официальным Твиттером\",\n        \"ar\": \"تويتر الرسمي\",\n        \"ja\": \"公式ツイッターをフォロー\"\n    },\n    {\n        \"name\": \"guankayouxi\",\n        \"zh-CN\": \"观看TON的游戏\",\n        \"zh-TW\": \"觀看TON的遊戲\",\n        \"en\": \"Watch TON's games\",\n        \"ru\": \"Смотреть игру TON\",\n        \"ar\": \"مشاهدة لعبة تون\",\n        \"ja\": \"TONのゲームを見る\"\n    },\n    {\n        \"name\": \"tongguan10\",\n        \"zh-CN\": \"通关10次游戏关卡\",\n        \"zh-TW\": \"通關10次遊戲關卡\",\n        \"en\": \"Complete 10 game levels\",\n        \"ru\": \"Скачать игру 10 раз\",\n        \"ar\": \"لعبة 10 مستويات التخليص الجمركي\",\n        \"ja\": \"ゲームステージを10回クリアする\"\n    },\n    {\n        \"name\": \"tongguan20\",\n        \"zh-CN\": \"通关20次游戏关卡\",\n        \"zh-TW\": \"通關20次遊戲關卡\",\n        \"en\": \"Complete 20 game levels\",\n        \"ru\": \"Прохождение 20 игр.\",\n        \"ar\": \"إزالة 20 مستويات اللعبة\",\n        \"ja\": \"ゲームステージを20回クリアする\"\n    },\n    {\n        \"name\": \"leijitili100\",\n        \"zh-CN\": \"累计使用100体力\",\n        \"zh-TW\": \"累計使用100體力\",\n        \"en\": \"Accumulated use of 100 stamina\",\n        \"ru\": \"Используйте 100 физических сил.\",\n        \"ar\": \"استخدام القوة المتراكمة 100\",\n        \"ja\": \"累計100体力使用\"\n    },\n    {\n        \"name\": \"leijitili200\",\n        \"zh-CN\": \"累计使用200体力\",\n        \"zh-TW\": \"累計使用200體力\",\n        \"en\": \"Accumulated use of 200 stamina\",\n        \"ru\": \"Используйте 200 физических сил.\",\n        \"ar\": \"استخدام القوة البدنية المتراكمة 200\",\n        \"ja\": \"累計200体力使用\"\n    },\n    {\n        \"name\": \"leijiyichu20\",\n        \"zh-CN\": \"累计使用20次移除道具\",\n        \"zh-TW\": \"累計使用20次移除道具\",\n        \"en\": \"Accumulated use of 20 times to remove props\",\n        \"ru\": \"Всего было использовано 20 удалений.\",\n        \"ar\": \"استخدام 20 إزالة الدعائم\",\n        \"ja\": \"削除アイテムを累計20回使用\"\n    },\n    {\n        \"name\": \"fenxiangtips\",\n        \"zh-CN\": \"分享邀请朋友共享链接并获得奖励\",\n        \"zh-TW\": \"分享邀請朋友共用連結並獲得獎勵\",\n        \"en\": \"Share Inviting Friends to Share Links and Get Rewards\",\n        \"ru\": \"Поделиться Приглашение друзей Поделиться ссылками и получить награду\",\n        \"ar\": \"دعوة الأصدقاء للمشاركة في الروابط والحصول على مكافآت\",\n        \"ja\": \"友人を招待してリンクを共有し、奨励金を得る\"\n    },\n    {\n        \"name\": \"leijiyaoqing\",\n        \"zh-CN\": \"累计邀请\",\n        \"zh-TW\": \"累計邀請\",\n        \"en\": \"Accumulated invitations\",\n        \"ru\": \"Совокупные приглашения\",\n        \"ar\": \"دعوة تراكمية\",\n        \"ja\": \"累計招待\"\n    },\n    {\n        \"name\": \"shouyaozhemingdan\",\n        \"zh-CN\": \"受邀者名单\",\n        \"zh-TW\": \"受邀者名單\",\n        \"en\": \"List of invitees\",\n        \"ru\": \"Список приглашенных\",\n        \"ar\": \"قائمة المدعوين\",\n        \"ja\": \"招待者リスト\"\n    },\n    {\n        \"name\": \"chakanquanbu\",\n        \"zh-CN\": \"查看全部\",\n        \"zh-TW\": \"查看全部\",\n        \"en\": \"ALL\",\n        \"ru\": \"Смотреть все\",\n        \"ar\": \"عرض جميع\",\n        \"ja\": \"すべて表示\"\n    },\n    {\n        \"name\": \"lijiyaoqing\",\n        \"zh-CN\": \"立即邀请\",\n        \"zh-TW\": \"立即邀請\",\n        \"en\": \"Invite Now\",\n        \"ru\": \"Немедленное приглашение\",\n        \"ar\": \"دعوة فورية\",\n        \"ja\": \"今すぐ招待\"\n    },\n    {\n        \"name\": \"kelingqv\",\n        \"zh-CN\": \"可领取\",\n        \"zh-TW\": \"可領取\",\n        \"en\": \"Can be claimed\",\n        \"ru\": \"Можно получить\",\n        \"ar\": \"الحصول على\",\n        \"ja\": \"受領可能\"\n    },\n    {\n        \"name\": \"yilingqv\",\n        \"zh-CN\": \"已领取\",\n        \"zh-TW\": \"已領取\",\n        \"en\": \"Received already\",\n        \"ru\": \"Получено\",\n        \"ar\": \"تلقى\",\n        \"ja\": \"受領済\"\n    },\n    {\n        \"name\": \"zanwugengduo\",\n        \"zh-CN\": \"暂无更多\",\n        \"zh-TW\": \"暫無更多\",\n        \"en\": \"No more available at the moment\",\n        \"ru\": \"Больше нет\",\n        \"ar\": \"لا أكثر\",\n        \"ja\": \"これ以上はありません\"\n    },\n    {\n        \"name\": \"yinyue\",\n        \"zh-CN\": \"音乐\",\n        \"zh-TW\": \"音樂\",\n        \"en\": \"music\",\n        \"ru\": \"Музыка\",\n        \"ar\": \"موسيقي .\",\n        \"ja\": \"音楽\"\n    },\n    {\n        \"name\": \"yinxiao\",\n        \"zh-CN\": \"音效\",\n        \"zh-TW\": \"音效\",\n        \"en\": \"sound effects\",\n        \"ru\": \"Звуковые эффекты\",\n        \"ar\": \"المؤثرات الصوتية\",\n        \"ja\": \"サウンドエフェクト\"\n    },\n    {\n        \"name\": \"youxishezhi\",\n        \"zh-CN\": \"游戏设置\",\n        \"zh-TW\": \"遊戲設定\",\n        \"en\": \"GAME SETTINGS\",\n        \"ru\": \"Настройки игры\",\n        \"ar\": \"إعدادات اللعبة\",\n        \"ja\": \"ゲーム設定\"\n    },\n    {\n        \"name\": \"yuyanqiehuan\",\n        \"zh-CN\": \"语言切换\",\n        \"zh-TW\": \"語言切換\",\n        \"en\": \"Language switching\",\n        \"ru\": \"Переключение языка\",\n        \"ar\": \"لغة التبديل\",\n        \"ja\": \"言語切り替え\"\n    },\n    {\n        \"name\": \"zhongwenjianti\",\n        \"zh-CN\": \"中文简体\",\n        \"zh-TW\": \"中文簡體\",\n        \"en\": \"Simplified Chinese\",\n        \"ru\": \"Китайский упрощенный\",\n        \"ar\": \"الصينية المبسطة\",\n        \"ja\": \"中国語の簡体字\"\n    },\n    {\n        \"name\": \"zhongwenfanti\",\n        \"zh-CN\": \"中文繁体\",\n        \"zh-TW\": \"中文繁體\",\n        \"en\": \"chinese traditional\",\n        \"ru\": \"Китайский стиль\",\n        \"ar\": \"الصينية التقليدية\",\n        \"ja\": \"中国語繁体字\"\n    },\n    {\n        \"name\": \"yingyu\",\n        \"zh-CN\": \"英语\",\n        \"zh-TW\": \"英語\",\n        \"en\": \"English\",\n        \"ru\": \"Английский язык\",\n        \"ar\": \"إنجليزي\",\n        \"ja\": \"英語\"\n    },\n    {\n        \"name\": \"fenxiang\",\n        \"zh-CN\": \"分享\",\n        \"zh-TW\": \"分享\",\n        \"en\": \"share\",\n        \"ru\": \"Поделиться\",\n        \"ar\": \"شارك\",\n        \"ja\": \"分かち合う\"\n    },\n    {\n        \"name\": \"xiayiguan\",\n        \"zh-CN\": \"下一关\",\n        \"zh-TW\": \"下一關\",\n        \"en\": \"Next level\",\n        \"ru\": \"Следующий уровень\",\n        \"ar\": \"المستوى التالي\",\n        \"ja\": \"次の関門\"\n    },\n    {\n        \"name\": \"zaiwanyici\",\n        \"zh-CN\": \"再玩一次\",\n        \"zh-TW\": \"再玩一次\",\n        \"en\": \"play again\",\n        \"ru\": \"Еще раз.\",\n        \"ar\": \"اللعب مرة أخرى\",\n        \"ja\": \"もう一度遊んで\"\n    }\n]\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP } from './../Enum';\nimport DataManager from './DataManager';\nimport ResourceManager from \"./ResourceManager\"\n\nexport default class AudioManager {\n    private audioSource: cc.AudioSource = null\n    private static _instance: any = null\n\n    static getInstance<T>(): T {\n        if (this._instance === null) {\n            this._instance = new this()\n            this._instance.init()\n        }\n\n        return this._instance\n    }\n\n    static get instance() {\n        return this.getInstance<AudioManager>()\n    }\n\n    init(){\n        this.audioSource = new cc.AudioSource()\n        this.audioSource.loop = true\n        this.audioSource.volume = 0.3\n    }\n\n    async playMusic(){\n        if(!DataManager.instance.isMusicOn) return\n        if(this.audioSource.clip){\n            this.audioSource.play()\n            return\n        }\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\n        this.audioSource.clip = clip\n        this.audioSource.play()\n    }\n\n    stopMusic(){\n        this.audioSource.stop()\n    }\n\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\n        if(!DataManager.instance.isSoundOn) return\n        const clip = await ResourceManager.instance.getClip(name)\n        return cc.audioEngine.playEffect(clip, isLoop)\n    }\n\n    stopSound(audioId: number){\n        cc.audioEngine.stopEffect(audioId)\n    }\n}\n","import { ENUM_AUDIO_CLIP } from \"../Enum\";\nimport { Languages } from \"../Languages\";\nimport AudioManager from \"../manager/AudioManager\";\nimport DataManager from \"../manager/DataManager\";\nimport EventManager, { EventType } from \"../manager/EventManager\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BaseItem extends cc.Component {\n\n    /**保存当前所有的注册的节点点击事件 */\n    allNodeClickEvent: Array<any> = [];\n    allLabels: Array<any> = [];\n    protected onLoad(): void {\n        this.allNodeClickEvent = [];\n        this.allLabels = [];\n        this.node.walk((node) => {\n            if (node.getComponent(cc.Label)) {\n                this.allLabels.push(node.getComponent(cc.Label))\n            }\n        }, null)\n    }\n\n    start() {\n        this.updateLanguage();\n    }\n    init() {\n\n    }\n    setData(data: any) {\n\n    }\n\n    protected onEnable(): void {\n        EventManager.instance.on(EventType.UPDATE_LANGUAGE, this.updateLanguage, this);\n    }\n    protected onDisable(): void {\n        EventManager.instance.off(EventType.UPDATE_LANGUAGE, this.updateLanguage, this);\n    }\n    updateLanguage() {\n        for (let i = 0; i < this.allLabels.length; i++) {\n            let name = this.allLabels[i].node.name;\n            if (Languages[name]) {\n                this.allLabels[i].string = Languages[name][DataManager.instance.language]\n            }\n        }\n    }\n\n    onTouch(node: cc.Node, cb: any, target?: any) {\n        if (!node.getComponent(cc.Button)) {\n            node.addComponent(cc.Button);\n            node.getComponent(cc.Button).transition = cc.Button.Transition.SCALE;\n            node.getComponent(cc.Button).duration = 0.1;\n            node.getComponent(cc.Button).zoomScale = 0.9;\n        }\n        let callback = () => {\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n            cb && cb.call(target)\n        }\n        node.on('click', callback, this);\n        this.allNodeClickEvent.push({\n            node: node,\n            callback: callback,\n            target: this\n        })\n    }\n    protected onDestroy(): void {\n        for (let i = 0; i < this.allNodeClickEvent.length; i++) {\n            let item = this.allNodeClickEvent[i];\n            item.node.off('click', item.callback, item.target);\n        }\n        this.allNodeClickEvent = [];\n    }\n    protected CreateListItem(content: cc.Node, itemNode: any, data: Array<any>, Base: typeof BaseItem) {\n        let child = content.children;\n        for (let i = 0; i < data.length; i++) {\n            if (!child[i]) {\n                let item = cc.instantiate(itemNode);\n                content.addChild(item);\n            }\n            child[i].active = true;\n            if (!child[i].getComponent(Base)) {\n                child[i].addComponent(Base);\n                child[i].getComponent(Base).init();\n            }\n            child[i].getComponent(Base).setData(data[i]);\n        }\n        if (child.length > data.length) {\n            for (let i = data.length; i < child.length; i++) {\n                child[i].active = false;\n            }\n        }\n    }\n\n    // update (dt) {}\n}\n","import { Languages } from \"../Languages\";\nimport DataManager from \"../manager/DataManager\";\nimport BaseLayer from \"./Baselayer\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BaseLanguageLayer extends BaseLayer {\n\n    allLabels: Array<any> = [];\n\n    onLoad() {\n        super.onLoad();\n        this.allLabels = [];\n        this.node.walk((node) => {\n            if (node.getComponent(cc.Label)) {\n                this.allLabels.push(node.getComponent(cc.Label))\n            }\n        }, null)\n    }\n\n    updateLanguage(): void {\n        for (let i = 0; i < this.allLabels.length; i++) {\n            let name = this.allLabels[i].node.name;\n            if (Languages[name]) {\n                this.allLabels[i].string = Languages[name][DataManager.instance.language]\n            }\n        }\n    }\n\n    start() {\n\n    }\n    // update (dt) {}\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP } from \"../Enum\";\nimport AudioManager from \"../manager/AudioManager\";\nimport EventManager, { EventType } from \"../manager/EventManager\";\nimport BaseItem from \"./BaseItem\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BaseLayer extends cc.Component {\n\n    /**保存当前所有的注册的节点点击事件 */\n    allNodeClickEvent: Array<any> = [];\n    protected onLoad(): void {\n        this.allNodeClickEvent = [];\n    }\n    show() {\n        this.node.active = true;\n        EventManager.instance.on(EventType.UPDATE_LANGUAGE, this.updateLanguage, this);\n        this.updateLanguage();\n    }\n\n    hide() {\n        this.node.active = false;\n        EventManager.instance.off(EventType.UPDATE_LANGUAGE, this.updateLanguage, this);\n    }\n    /**语言更新 */\n    protected updateLanguage() { }\n\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\n        node.setScale(scale)\n        const act = cc.scaleTo(speed, 1)\n        cc.tween(node).then(act).start()\n    }\n\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\n        node.setScale(scale)\n        const act = cc.scaleTo(speed, 1)\n        cc.tween(node).then(act).start()\n    }\n    onTouch(node: cc.Node, cb: any, target?: any) {\n        if (!node.getComponent(cc.Button)) {\n            node.addComponent(cc.Button);\n            node.getComponent(cc.Button).transition = cc.Button.Transition.SCALE;\n            node.getComponent(cc.Button).duration = 0.1;\n            node.getComponent(cc.Button).zoomScale = 0.9;\n        }\n        let callback = () => {\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n            cb && cb.call(target)\n        }\n        node.on('click', callback, this);\n        this.allNodeClickEvent.push({\n            node: node,\n            callback: callback,\n            target: this\n        })\n    }\n    protected onDestroy(): void {\n        for (let i = 0; i < this.allNodeClickEvent.length; i++) {\n            let item = this.allNodeClickEvent[i];\n            item.node.off('click', item.callback, item.target);\n        }\n        this.allNodeClickEvent = [];\n    }\n    protected CreateListItem(content: cc.Node, itemNode: any, data: Array<any>, Base: typeof BaseItem) {\n        let child = content.children;\n        for (let i = 0; i < data.length; i++) {\n            if (!child[i]) {\n                let item = cc.instantiate(itemNode);\n                content.addChild(item);\n            }\n            child[i].active = true;\n            if (!child[i].getComponent(Base)) {\n                child[i].addComponent(Base);\n                child[i].getComponent(Base).init();\n            }\n            child[i].getComponent(Base).setData(data[i]);\n        }\n        if (child.length > data.length) {\n            for (let i = data.length; i < child.length; i++) {\n                child[i].active = false;\n            }\n        }\n    }\n}\n","/*\n * @Author: carolsail \n * @Date: 2023-07-20 09:13:31 \n * @Last Modified by: carolsail\n * @Last Modified time: 2023-07-25 16:24:53\n */\n\nimport { ENUM_GAME_MODE } from \"../Enum\";\nimport { random } from \"../Utils\";\nimport DataManager, { CLEVEL_Data, LEVEL_DATA } from \"../manager/DataManager\";\nimport PoolManager from \"../manager/PoolManager\";\nimport Car from \"./Car\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Board extends cc.Component {\n\n    init() {\n        let data = null\n        if (DataManager.instance.mode == ENUM_GAME_MODE.TIMER) {\n            data = LEVEL_DATA[DataManager.instance.level - 1]\n            if (data.cars > 0) {\n                DataManager.instance.carNum = data.cars\n                return\n            }\n        } else if (DataManager.instance.mode == ENUM_GAME_MODE.LEVEL) {\n            data = CLEVEL_Data[DataManager.instance.clevel - 1]\n            let crash = random(2, 8)\n            if (data.crash > 0) {\n                crash = data.crash\n            }\n            DataManager.instance.crashTotal = crash\n            if (data.cars > 0) {\n                DataManager.instance.carNum = data.cars\n                return\n            }\n        }\n        this.node.removeAllChildren()\n        const xn = data.width / data.unit\n        const yn = data.height / data.unit\n        // 设置汽车\n        let outForTest = 0\n        const carPool = new Map<string, boolean>()\n        for (let x = 0; x < xn; x++) {\n            outForTest += 1\n            for (let y = 0; y < yn; y++) {\n                if (!carPool.has(`${x}_${y}`)) {\n                    const dir = random(0, 3)\n                    // const dir = 1\n                    if (dir == 0 || dir == 2) {\n                        // 垂直\n                        let hn = 0\n                        if (y < yn - 1 && !carPool.has(`${x}_${y + 1}`)) {\n                            hn = 2\n                            if (y < yn - 2 && !carPool.has(`${x}_${y + 2}`)) hn = random(2, 3)\n                        }\n                        if (hn) {\n                            DataManager.instance.carNum += 1\n                            const carNode = PoolManager.instance.getNode(`Car${dir}`, this.node)\n                            const carComponent = carNode.getComponent(Car)\n                            carNode.width = data.unit\n                            carNode.height = data.unit * hn\n                            for (let n = 0; n < hn; n++) {\n                                carPool.set(`${x}_${y + n}`, true)\n                            }\n                            carNode.setPosition(carNode.width * (0.5 + x), y * data.unit + carNode.height * 0.5)\n                            carComponent.setDir(dir)\n                            carComponent.setSprite(dir)\n                            carComponent.setCollider()\n                        } else {\n                            // console.log(`${x}_${y}摆不下，只能水平方向`)\n                            // let wn = 0\n                            // if (x < xn - 1 && !carPool.has(`${x + 1}_${y}`)) {\n                            //     wn = 2\n                            //     if (x < xn - 2 && !carPool.has(`${x + 2}_${y}`)) wn = random(2, 3)\n                            // }\n                            // if (wn) {\n                            //     const carNode = PoolManager.instance.getNode(`Car${dir}`, this.node)\n                            //     carNode.width = data.unit * wn\n                            //     carNode.height = data.unit\n                            //     for (let n = 0; n < wn; n++) {\n                            //         carPool.set(`${x + n}_${y}`, true)\n                            //     }\n                            //     carNode.setPosition(x * data.unit + carNode.width * 0.5, carNode.height * (0.5 + y))\n                            //     const carComponent = carNode.getComponent(Car)\n                            //     carComponent.setDir(dir)\n                            // }\n                        }\n                    } else {\n                        // 水平\n                        let wn = 0\n                        if (x < xn - 1 && !carPool.has(`${x + 1}_${y}`)) {\n                            wn = 2\n                            if (x < xn - 2 && !carPool.has(`${x + 2}_${y}`)) wn = random(2, 3)\n                        }\n                        if (wn) {\n                            DataManager.instance.carNum += 1\n                            const carNode = PoolManager.instance.getNode(`Car${dir}`, this.node)\n                            const carComponent = carNode.getComponent(Car)\n                            carNode.width = data.unit * wn\n                            carNode.height = data.unit\n                            for (let n = 0; n < wn; n++) {\n                                carPool.set(`${x + n}_${y}`, true)\n                            }\n                            carNode.setPosition(x * data.unit + carNode.width * 0.5, carNode.height * (0.5 + y))\n                            carComponent.setDir(dir)\n                            carComponent.setSprite(dir)\n                            carComponent.setCollider()\n                        } else {\n                            // console.log(`${x}_${y}摆不下，只能垂直方向`)\n                            // let hn = 0\n                            // if (y < yn - 1 && !carPool.has(`${x}_${y + 1}`)) {\n                            //     hn = 2\n                            //     if (y < yn - 2 && !carPool.has(`${x}_${y + 2}`)) hn = random(2, 3)\n                            // }\n                            // if (hn) {\n                            //     const carNode = PoolManager.instance.getNode(`Car${dir}`, this.node)\n                            //     carNode.width = data.unit\n                            //     carNode.height = data.unit * hn\n                            //     for (let n = 0; n < hn; n++) {\n                            //         carPool.set(`${x}_${y + n}`, true)\n                            //     }\n                            //     carNode.setPosition(carNode.width * (0.5 + x), y * data.unit + carNode.height * 0.5)\n                            //     const carComponent = carNode.getComponent(Car)\n                            //     carComponent.setDir(dir)\n                            // }\n                        }\n                    }\n                } else {\n                    // console.log(`${x}_${y}已摆放，无需摆放`)\n                }\n                // if (outForTest >= 1) break\n            }\n            // if (outForTest >= 1) break\n        }\n        // 设置障碍和出口\n        for (let x = 0; x < xn; x++) {\n            if (random(0, 1)) {\n                // 上出口\n                const exitNode = PoolManager.instance.getNode('Exit', this.node)\n                const exitCollider = exitNode.getComponent(cc.BoxCollider)\n                exitNode.width = data.unit\n                exitNode.setPosition(x * data.unit + data.unit / 2, data.height + 5)\n                exitCollider.size.width = data.unit\n                // 下障碍\n                const blockNode = PoolManager.instance.getNode('Block2', this.node)\n                const blockCollider = blockNode.getComponent(cc.BoxCollider)\n                blockNode.width = data.unit\n                blockNode.setPosition(x * data.unit + data.unit / 2, -5)\n                blockCollider.size.width = data.unit\n            } else {\n                // 下出口\n                const exitNode = PoolManager.instance.getNode('Exit', this.node)\n                const exitCollider = exitNode.getComponent(cc.BoxCollider)\n                exitNode.width = data.unit\n                exitNode.setPosition(x * data.unit + data.unit / 2, -5)\n                exitCollider.size.width = data.unit\n                // 上障碍\n                const blockNode = PoolManager.instance.getNode('Block0', this.node)\n                const blockCollider = blockNode.getComponent(cc.BoxCollider)\n                blockNode.width = data.unit\n                blockNode.setPosition(x * data.unit + data.unit / 2, data.height + 5)\n                blockCollider.size.width = data.unit\n            }\n        }\n        for (let y = 0; y < yn; y++) {\n            if (random(0, 1)) {\n                // 左出口\n                const exitNode = PoolManager.instance.getNode('Exit', this.node)\n                const exitCollider = exitNode.getComponent(cc.BoxCollider)\n                exitNode.height = data.unit\n                exitNode.setPosition(-5, y * data.unit + data.unit / 2)\n                exitCollider.size.height = data.unit\n                // 右障碍\n                const blockNode = PoolManager.instance.getNode('Block3', this.node)\n                const blockCollider = blockNode.getComponent(cc.BoxCollider)\n                blockNode.height = data.unit\n                blockNode.setPosition(data.width + 5, y * data.unit + data.unit / 2)\n                blockCollider.size.height = data.unit\n            } else {\n                // 右出口\n                const exitNode = PoolManager.instance.getNode('Exit', this.node)\n                const exitCollider = exitNode.getComponent(cc.BoxCollider)\n                exitNode.height = data.unit\n                exitNode.setPosition(data.width + 5, y * data.unit + data.unit / 2)\n                exitCollider.size.height = data.unit\n                // 左障碍\n                const blockNode = PoolManager.instance.getNode('Block1', this.node)\n                const blockCollider = blockNode.getComponent(cc.BoxCollider)\n                blockNode.height = data.unit\n                blockNode.setPosition(-5, y * data.unit + data.unit / 2)\n                blockCollider.size.height = data.unit\n            }\n        }\n    }\n}\n","/*\n * @Author: carolsail \n * @Date: 2023-07-18 08:46:38 \n * @Last Modified by: carolsail\n * @Last Modified time: 2023-07-19 11:55:30\n */\n\nimport { ENUM_AUDIO_CLIP, ENUM_COLLIDER_TYPE } from \"../Enum\";\nimport { StaticInstance } from \"../StaticInstance\";\nimport { getAngle, getDistance, random, toXY } from \"../Utils\";\nimport AudioManager from \"../manager/AudioManager\";\nimport DataManager from \"../manager/DataManager\";\nimport EffectManager from \"../manager/EffectManager\";\nimport ResourceManager from \"../manager/ResourceManager\";\n\nconst { ccclass, property } = cc._decorator;\n\nconst CAR_RESOUCE_PREFIX = ['car_black_', 'car_blue_', 'car_green_', 'car_yellow_', 'car_red_']\n\n\n// 目前同时只能一辆车在移动，后续改进\n@ccclass\nexport default class Car extends cc.Component {\n\n    @property({ type: cc.Enum({ up: 0, right: 1, down: 2, left: 3 }), tooltip: '朝向' })\n    dir: number = 0\n    speed: number = 1200\n    speedExit: number = 600\n\n\n    touchPos: cc.Vec2 = null\n    touchSlideDis: number = 5\n    touchSlideDir: cc.Vec2 = cc.v2(0, 0)\n\n    isMoving: boolean = false\n\n    protected onLoad(): void {\n        // 注册事件\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchOver, this)\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchOver, this)\n    }\n\n    setDir(dir: number) {\n        this.dir = dir\n    }\n\n    setSprite(dir: number) {\n        const name = `${CAR_RESOUCE_PREFIX[random(0, 4)] + dir}`\n        this.node.getChildByName('body').getComponent(cc.Sprite).spriteFrame = ResourceManager.instance.getSprite(name)\n    }\n\n    setCollider() {\n        const collider: cc.BoxCollider = this.node.getComponent(cc.BoxCollider)\n        const size = new cc.Size(this.node.width - 10, this.node.height - 10)\n        collider.size = size\n    }\n\n    setParticle() {\n        const collect = this.node.getChildByName('collect')\n        if (collect) collect.getComponent(cc.ParticleSystem).resetSystem()\n    }\n\n    onTouchStart(e: cc.Event.EventTouch) {\n        if (this.isMoving || DataManager.instance.currentCar) return\n        DataManager.instance.currentCar = this\n        const location = e.getLocation()\n        const touchPos = this.node.parent.convertToNodeSpaceAR(location)\n        this.touchPos = touchPos\n        if (!DataManager.instance.isTimerStart) StaticInstance.uiManager.setMainTimer()\n    }\n\n    onTouchMove(e: cc.Event.EventTouch) {\n        if (this.isMoving || DataManager.instance.currentCar != this) return\n        // 判断移动方向\n        if (this.touchPos) {\n            const location = e.getLocation()\n            const touchPos = this.node.parent.convertToNodeSpaceAR(location)\n            const dis = getDistance(this.touchPos, touchPos)\n            if (dis >= this.touchSlideDis) {\n                const angle = Math.abs(getAngle(this.touchPos, touchPos))\n                if (angle > 45 && angle < 135) {\n                    this.touchSlideDir.x = 0\n                    if (this.touchPos.y - touchPos.y > 0) {\n                        this.touchSlideDir.y = -1\n                    } else {\n                        this.touchSlideDir.y = 1\n                    }\n                } else {\n                    this.touchSlideDir.y = 0\n                    if (this.touchPos.x - touchPos.x < 0) {\n                        this.touchSlideDir.x = 1\n                    } else {\n                        this.touchSlideDir.x = -1\n                    }\n                }\n            }\n        }\n    }\n\n    onTouchOver() {\n        if (this.isMoving || DataManager.instance.currentCar != this) return\n        if ((this.touchSlideDir.x || this.touchSlideDir.y)) {\n            if ((this.touchSlideDir.x && (this.dir == 1 || this.dir == 3)) || (this.touchSlideDir.y && (this.dir == 0 || this.dir == 2))) {\n                this.isMoving = true\n            } else {\n                // console.log(\"滑动方向错误，不移动\")\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BI)\n                this.resetStatus()\n            }\n        } else {\n            // console.log('没有滑动或滑动距离不够，不移动')\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BIBI)\n            this.resetStatus()\n        }\n    }\n\n    protected update(dt: number): void {\n        if (this.isMoving) {\n            this.node.x += this.speed * this.touchSlideDir.x * dt\n            this.node.y += this.speed * this.touchSlideDir.y * dt\n        }\n    }\n\n    onCollisionEnter(other: any, self: any) {\n        if (DataManager.instance.isShaking) return\n        if (this.touchSlideDir.x || this.touchSlideDir.y) {\n            if (other.tag == ENUM_COLLIDER_TYPE.CAR || other.tag == ENUM_COLLIDER_TYPE.BLOCK) {\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CRASH)\n                DataManager.instance.isShaking = true\n                EffectManager.instance.shake(StaticInstance.gameManager.stage, 0.1, () => {\n                    DataManager.instance.isShaking = false\n                }, false)\n\n                const { x, y } = this.touchSlideDir\n                let crashPos = cc.v2(0, 0)\n                if (x) {\n                    // 水平碰撞\n                    this.touchSlideDir.x = 0\n                    this.node.x = other.node.x + ((other.node.width + self.node.width) / 2) * -x\n                    crashPos = cc.v2(this.node.width / 2 * x, 0)\n                } else {\n                    // 垂直碰撞\n                    this.touchSlideDir.y = 0\n                    this.node.y = other.node.y + ((other.node.height + self.node.height) / 2) * -y\n                    crashPos = cc.v2(0, this.node.height / 2 * y)\n                }\n                EffectManager.instance.play('Bomb', this.node, { pos: crashPos })\n\n                this.isMoving = false\n                this.resetStatus()\n            } else if (other.tag == ENUM_COLLIDER_TYPE.EXIT) {\n                // console.log('成功出库')\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.Exit)\n                const { x, y } = this.touchSlideDir\n                const { width: swidth, height: sheight } = cc.winSize\n                let act = null\n                if (x) {\n                    let angle = -90\n                    if ((this.dir == 1 && x == 1) || (this.dir == 3 && x == -1)) angle = 90\n                    // 水平碰撞\n                    this.node.angle += angle\n                    this.touchSlideDir.x = 0\n                    this.node.x = other.node.x + ((other.node.width + self.node.height) / 2) * x + other.offset.x\n                    // 计算移动距离\n                    const p = toXY(this.node, StaticInstance.gameManager.stage)\n                    let dis = 0\n                    if (x > 0) {\n                        dis = Math.abs(sheight / 2 - p.y) + this.node.height / 2\n                    } else {\n                        dis = Math.abs(-sheight / 2 - p.y) + this.node.height / 2\n                    }\n                    const mtime = dis / this.speedExit\n                    act = cc.moveTo(mtime, this.node.x, this.node.y + dis * x)\n                } else {\n                    // 垂直碰撞\n                    let angle = -90\n                    if ((this.dir == 2 && y == 1) || (this.dir == 0 && y == -1)) angle = 90\n                    this.node.angle += angle\n                    this.touchSlideDir.y = 0\n                    this.node.y = other.node.y + ((other.node.height + self.node.width) / 2) * y + other.offset.y\n                    // 计算移动距离\n                    const p = toXY(this.node, StaticInstance.gameManager.stage)\n                    let dis = 0\n                    if (y > 0) {\n                        dis = Math.abs(swidth / 2 - p.x) + this.node.width / 2\n                    } else {\n                        dis = Math.abs(-swidth / 2 - p.x) + this.node.width / 2\n                    }\n                    const mtime = dis / this.speedExit\n                    act = cc.moveTo(mtime, this.node.x + dis * y, this.node.y)\n                }\n                this.setParticle()\n                this.isMoving = false\n                // 离场动画\n                if (act) {\n                    cc.tween(this.node).then(act).call(() => {\n                        DataManager.instance.carExitNum += 1\n                        StaticInstance.gameManager.onGameCheck()\n                        this.node.removeFromParent()\n                    }).start()\n                }\n\n                this.scheduleOnce(() => {\n                    this.resetStatus()\n                })\n            }\n\n        }\n    }\n\n    resetStatus() {\n        DataManager.instance.currentCar = null\n        this.touchPos = null\n        this.touchSlideDir = cc.v2(0, 0)\n    }\n}\n","/*\n * @Author: carolsail \n * @Date: 2023-07-18 08:46:38 \n * @Last Modified by: carolsail\n * @Last Modified time: 2023-07-25 14:47:40\n */\n\nimport { ENUM_AUDIO_CLIP, ENUM_COLLIDER_TYPE, ENUM_GAME_MODE } from \"../Enum\";\nimport { StaticInstance } from \"../StaticInstance\";\nimport { getAngle, getDistance, random, toXY } from \"../Utils\";\nimport AudioManager from \"../manager/AudioManager\";\nimport DataManager, { LEVEL_DATA } from \"../manager/DataManager\";\nimport EffectManager from \"../manager/EffectManager\";\nimport ResourceManager from \"../manager/ResourceManager\";\nimport ToastManager from \"../manager/ToastManager\";\n\nconst { ccclass, property } = cc._decorator;\n\nconst CAR_RESOUCE_PREFIX = ['car_black_', 'car_blue_', 'car_green_', 'car_yellow_', 'car_red_']\n\n\n// 目前同时只能一辆车在移动，后续改进\n@ccclass\nexport default class Car extends cc.Component {\n\n    @property({ type: cc.Enum({ up: 0, right: 1, down: 2, left: 3 }), tooltip: '朝向' })\n    dir: number = 0\n    speed: number = 1000\n    speedExit: number = 600\n\n\n    touchPos: cc.Vec2 = null\n    touchSlideDis: number = 3\n    touchSlideDir: cc.Vec2 = cc.v2(0, 0)\n\n    isMoving: boolean = false\n    isOpacity: boolean = false\n    opacityCount: number = 0\n\n    isExiting: boolean = false\n\n    protected onLoad(): void {\n        // 注册事件\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchOver, this)\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchOver, this)\n    }\n\n    setDir(dir: number) {\n        this.dir = dir\n    }\n\n    setSprite(dir: number) {\n        const name = `${CAR_RESOUCE_PREFIX[random(0, 4)] + dir}`\n        this.node.getChildByName('body').getComponent(cc.Sprite).spriteFrame = ResourceManager.instance.getSprite(name)\n    }\n\n    setCollider() {\n        const collider: cc.BoxCollider = this.node.getComponent(cc.BoxCollider)\n        const size = new cc.Size(this.node.width - 10, this.node.height - 10)\n        collider.size = size\n    }\n\n    setParticle() {\n        const collect = this.node.getChildByName('collect')\n        if (collect) collect.getComponent(cc.ParticleSystem).resetSystem()\n    }\n\n    onTouchStart(e: cc.Event.EventTouch) {\n        if (DataManager.instance.isSkillRuning) return\n        const location = e.getLocation()\n        const touchPos = this.node.parent.convertToNodeSpaceAR(location)\n        if (DataManager.instance.isSkilling) {\n            const carComponent = this\n            const carNode = this.node\n            if (DataManager.instance.skillIndex == 0 && !this.isMoving) {\n                const { unit } = LEVEL_DATA[DataManager.instance.level - 1]\n                let size = carNode.width\n                if (carComponent.dir == 0 || carComponent.dir == 2) size = carNode.height\n                if (size <= unit * 2) {\n                    ToastManager.instance.show('车辆已经是最短状态！！！', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n                } else {\n                    AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL)\n                    DataManager.instance.isSkillRuning = true\n                    if (carComponent.dir == 0 || carComponent.dir == 2) {\n                        cc.tween(carNode).to(0.3, { height: carNode.height - unit }).call(() => {\n                            carComponent.setCollider()\n                            DataManager.instance.isSkillRuning = false\n                            DataManager.instance.isSkilling = false\n                            StaticInstance.uiManager.setMainSkillTip()\n                        }).start()\n                    } else {\n                        cc.tween(carNode).to(0.3, { width: carNode.width - unit }).call(() => {\n                            carComponent.setCollider()\n                            DataManager.instance.isSkillRuning = false\n                            DataManager.instance.isSkilling = false\n                            StaticInstance.uiManager.setMainSkillTip()\n                        }).start()\n                    }\n                }\n            } else if (DataManager.instance.skillIndex == 1 && !this.isMoving && !this.isOpacity && this.opacityCount == 0) {\n                if (DataManager.instance.carNum - DataManager.instance.carExitNum == 1) {\n                    ToastManager.instance.show('车辆已经剩下最后一辆了！！！', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n                    return\n                }\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL)\n                cc.tween(carNode).to(0.3, { opacity: 100 }).call(() => {\n                    carComponent.isOpacity = true\n                    DataManager.instance.isSkillRuning = false\n                    DataManager.instance.isSkilling = false\n                    StaticInstance.uiManager.setMainSkillTip()\n                }).start()\n            } else if (DataManager.instance.skillIndex == 2 && !this.isMoving) {\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL)\n                cc.tween(carNode).to(0.3, { scale: 0.1 }).call(() => {\n                    carNode.removeFromParent()\n                    DataManager.instance.isSkillRuning = false\n                    DataManager.instance.isSkilling = false\n                    StaticInstance.uiManager.setMainSkillTip()\n                    DataManager.instance.carExitNum += 1\n                    if (DataManager.instance.carNum - DataManager.instance.carExitNum == 1) {\n                        const carOne = StaticInstance.gameManager.board.children.find(node => node.name.indexOf('Car') >= 0)\n                        if (carOne && carOne.getComponent(Car).isOpacity) {\n                            carOne.getComponent(Car).isOpacity = false\n                            carOne.getComponent(Car).opacityCount = 0\n                            cc.tween(carOne).to(0.1, { opacity: 255 }).start()\n                        }\n                    }\n                    StaticInstance.gameManager.onGameCheck()\n                }).start()\n            }\n            return\n        }\n        if (this.isMoving || this.touchPos || this.isOpacity) return\n        this.touchPos = touchPos\n        if (DataManager.instance.mode == ENUM_GAME_MODE.TIMER) {\n            if (!DataManager.instance.isTimerStart) StaticInstance.uiManager.setMainTimer()\n        }\n    }\n\n    onTouchMove(e: cc.Event.EventTouch) {\n        if (this.isMoving) return\n        // 判断移动方向\n        if (this.touchPos) {\n            const location = e.getLocation()\n            const touchPos = this.node.parent.convertToNodeSpaceAR(location)\n            const dis = getDistance(this.touchPos, touchPos)\n            if (dis >= this.touchSlideDis) {\n                const angle = Math.abs(getAngle(this.touchPos, touchPos))\n                if (angle > 45 && angle < 135) {\n                    this.touchSlideDir.x = 0\n                    if (this.touchPos.y - touchPos.y > 0) {\n                        this.touchSlideDir.y = -1\n                    } else {\n                        this.touchSlideDir.y = 1\n                    }\n                } else {\n                    this.touchSlideDir.y = 0\n                    if (this.touchPos.x - touchPos.x < 0) {\n                        this.touchSlideDir.x = 1\n                    } else {\n                        this.touchSlideDir.x = -1\n                    }\n                }\n            }\n        }\n    }\n\n    onTouchOver() {\n        if (this.isMoving || !this.touchPos) return\n        if ((this.touchSlideDir.x || this.touchSlideDir.y)) {\n            if ((this.touchSlideDir.x && (this.dir == 1 || this.dir == 3)) || (this.touchSlideDir.y && (this.dir == 0 || this.dir == 2))) {\n                this.isMoving = true\n                const tip = this.node.getChildByName('tip')\n                if (tip) tip.active = false\n                DataManager.instance.zIndex += 1\n                this.node.zIndex = DataManager.instance.zIndex\n            } else {\n                // console.log(\"滑动方向错误，不移动\")\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BI)\n                this.resetStatus()\n            }\n        } else {\n            // console.log('没有滑动或滑动距离不够，不移动')\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BIBI)\n            this.resetStatus()\n        }\n    }\n\n    protected update(dt: number): void {\n        if (this.isMoving) {\n            this.node.x += this.speed * this.touchSlideDir.x * dt\n            this.node.y += this.speed * this.touchSlideDir.y * dt\n        }\n    }\n\n    onCollisionEnter(other: any, self: any) {\n        if (other.tag == ENUM_COLLIDER_TYPE.EXIT) {\n            this.isExiting = true\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.Exit)\n            const { x, y } = this.touchSlideDir\n            const { width: swidth, height: sheight } = cc.winSize\n            let act = null\n            if (x) {\n                let angle = -90\n                if ((this.dir == 1 && x == 1) || (this.dir == 3 && x == -1)) angle = 90\n                // 水平碰撞\n                this.node.angle += angle\n                this.touchSlideDir.x = 0\n                this.node.x = other.node.x + ((other.node.width + self.node.height) / 2) * x + other.offset.x\n                // 计算移动距离\n                const p = toXY(this.node, StaticInstance.gameManager.stage)\n                let dis = 0\n                if (x > 0) {\n                    dis = Math.abs(sheight / 2 - p.y) + this.node.height / 2\n                } else {\n                    dis = Math.abs(-sheight / 2 - p.y) + this.node.height / 2\n                }\n                const mtime = dis / this.speedExit\n                act = cc.moveTo(mtime, this.node.x, this.node.y + dis * x)\n            } else {\n                // 垂直碰撞\n                let angle = -90\n                if ((this.dir == 2 && y == 1) || (this.dir == 0 && y == -1)) angle = 90\n                this.node.angle += angle\n                this.touchSlideDir.y = 0\n                this.node.y = other.node.y + ((other.node.height + self.node.width) / 2) * y + other.offset.y\n                // 计算移动距离\n                const p = toXY(this.node, StaticInstance.gameManager.stage)\n                let dis = 0\n                if (y > 0) {\n                    dis = Math.abs(swidth / 2 - p.x) + this.node.width / 2\n                } else {\n                    dis = Math.abs(-swidth / 2 - p.x) + this.node.width / 2\n                }\n                const mtime = dis / this.speedExit\n                act = cc.moveTo(mtime, this.node.x + dis * y, this.node.y)\n            }\n            this.setParticle()\n            // 离场动画\n            if (act) {\n                cc.tween(this.node).then(act).call(() => {\n                    DataManager.instance.carExitNum += 1\n                    if (DataManager.instance.carNum - DataManager.instance.carExitNum == 1) {\n                        const carOne = StaticInstance.gameManager.board.children.find(node => node.name.indexOf('Car') >= 0)\n                        if (carOne && carOne.getComponent(Car).isOpacity) {\n                            carOne.getComponent(Car).isOpacity = false\n                            carOne.getComponent(Car).opacityCount = 0\n                            cc.tween(carOne).to(0.1, { opacity: 255 }).start()\n                        }\n                    }\n                    StaticInstance.gameManager.onGameCheck()\n                    this.node.removeFromParent()\n                }).start()\n            }\n        } else if (other.tag == ENUM_COLLIDER_TYPE.BLOCK) {\n            this.isMoving = false\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CRASH)\n            if (!DataManager.instance.isShaking) {\n                DataManager.instance.isShaking = true\n                EffectManager.instance.shake(StaticInstance.gameManager.roads, 0.1, () => {\n                    DataManager.instance.isShaking = false\n                }, false)\n            }\n            // 撞击数\n            if (DataManager.instance.mode == ENUM_GAME_MODE.LEVEL) {\n                DataManager.instance.crashCurrent += 1\n                StaticInstance.uiManager.setMainLevelCrash()\n                StaticInstance.gameManager.onGameCheck()\n            }\n            const { x, y } = this.touchSlideDir\n            let crashPos = cc.v2(0, 0)\n            if (x) {\n                // 水平碰撞\n                this.touchSlideDir.x = 0\n                this.node.x = other.node.x + ((other.node.width + self.node.width) / 2) * -x\n                crashPos = cc.v2(this.node.width / 2 * x, 0)\n            } else {\n                // 垂直碰撞\n                this.touchSlideDir.y = 0\n                this.node.y = other.node.y + ((other.node.height + self.node.height) / 2) * -y\n                crashPos = cc.v2(0, this.node.height / 2 * y)\n            }\n            EffectManager.instance.play('Bomb', this.node, { pos: crashPos })\n            if (DataManager.instance.mode == ENUM_GAME_MODE.TIMER) {\n                // 碰撞累加时间\n                EffectManager.instance.play('TimeTip', this.node)\n                DataManager.instance.seconds += 5\n                StaticInstance.uiManager.setMainTimerRendor()\n            }\n            this.resetStatus()\n        } else if (other.tag == ENUM_COLLIDER_TYPE.CAR) {\n            const selfComponent = self.node.getComponent(Car)\n            const otherComponent = other.node.getComponent(Car)\n            if (selfComponent.isExiting || otherComponent.isExiting) return\n            if (selfComponent.isMoving && otherComponent.isMoving) {\n                selfComponent.isMoving = false\n                otherComponent.isMoving = false\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CRASH)\n                if (!DataManager.instance.isShaking) {\n                    DataManager.instance.isShaking = true\n                    EffectManager.instance.shake(StaticInstance.gameManager.roads, 0.1, () => {\n                        DataManager.instance.isShaking = false\n                    }, false)\n                }\n                // 撞击数\n                if (DataManager.instance.mode == ENUM_GAME_MODE.LEVEL) {\n                    DataManager.instance.crashCurrent += 1\n                    StaticInstance.uiManager.setMainLevelCrash()\n                    StaticInstance.gameManager.onGameCheck()\n                }\n                // 碰撞框\n                const otherAabb = other.world.aabb\n                const otherPreAabb = other.world.preAabb.clone()\n                const selfAabb = self.world.aabb\n                const selfPreAabb = self.world.preAabb.clone()\n                // 水平碰撞\n                otherPreAabb.x = otherAabb.x\n                selfPreAabb.x = selfAabb.x\n                if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n                    let _self = null, _other = null\n                    if (selfComponent.dir == 1 || selfComponent.dir == 3) {\n                        _self = selfComponent\n                        _other = otherComponent\n                    } else {\n                        _self = otherComponent\n                        _other = selfComponent\n                    }\n                    const { x } = _self.touchSlideDir\n                    let crashPos = cc.v2(0, 0)\n                    _self.touchSlideDir.x = 0\n                    _self.node.x = _other.node.x + ((_other.node.width + _self.node.width) / 2) * -x\n                    crashPos = cc.v2(_self.node.width / 2 * x, 0)\n                    EffectManager.instance.play('Bomb', _self.node, { pos: crashPos })\n                    if (DataManager.instance.mode == ENUM_GAME_MODE.TIMER) {\n                        // 碰撞累加时间\n                        EffectManager.instance.play('TimeTip', _self.node)\n                        DataManager.instance.seconds += 5\n                        StaticInstance.uiManager.setMainTimerRendor()\n                    }\n                    selfComponent.resetStatus()\n                    otherComponent.resetStatus()\n                    return\n                }\n                // 垂直碰撞\n                selfPreAabb.y = selfAabb.y\n                otherPreAabb.y = otherAabb.y\n                if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n                    let _self = null, _other = null\n                    if (selfComponent.dir == 0 || selfComponent.dir == 2) {\n                        _self = selfComponent\n                        _other = otherComponent\n                    } else {\n                        _self = otherComponent\n                        _other = selfComponent\n                    }\n                    const { y } = _self.touchSlideDir\n                    let crashPos = cc.v2(0, 0)\n                    _self.touchSlideDir.y = 0\n                    _self.node.y = _other.node.y + ((_other.node.height + _self.node.height) / 2) * -y\n                    crashPos = cc.v2(0, _self.node.height / 2 * y)\n                    EffectManager.instance.play('Bomb', _self.node, { pos: crashPos })\n                    if (DataManager.instance.mode == ENUM_GAME_MODE.TIMER) {\n                        // 碰撞累加时间\n                        EffectManager.instance.play('TimeTip', _self.node)\n                        DataManager.instance.seconds += 5\n                        StaticInstance.uiManager.setMainTimerRendor()\n                    }\n                    selfComponent.resetStatus()\n                    otherComponent.resetStatus()\n                }\n            } else {\n                if (this.isMoving) {\n                    if (otherComponent.isOpacity) {\n                        // 透明化\n                        selfComponent.opacityCount += 1\n                        otherComponent.opacityCount += 1\n                    } else {\n                        this.isMoving = false\n                        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CRASH)\n                        if (!DataManager.instance.isShaking) {\n                            DataManager.instance.isShaking = true\n                            EffectManager.instance.shake(StaticInstance.gameManager.roads, 0.1, () => {\n                                DataManager.instance.isShaking = false\n                            }, false)\n                        }\n                        // 撞击数\n                        if (DataManager.instance.mode == ENUM_GAME_MODE.LEVEL) {\n                            DataManager.instance.crashCurrent += 1\n                            StaticInstance.uiManager.setMainLevelCrash()\n                            StaticInstance.gameManager.onGameCheck()\n                        }\n                        const { x, y } = this.touchSlideDir\n                        let crashPos = cc.v2(0, 0)\n                        if (x) {\n                            // 水平碰撞\n                            this.touchSlideDir.x = 0\n                            this.node.x = other.node.x + ((other.node.width + self.node.width) / 2) * -x\n                            crashPos = cc.v2(this.node.width / 2 * x, 0)\n                        } else {\n                            // 垂直碰撞\n                            this.touchSlideDir.y = 0\n                            this.node.y = other.node.y + ((other.node.height + self.node.height) / 2) * -y\n                            crashPos = cc.v2(0, this.node.height / 2 * y)\n                        }\n                        EffectManager.instance.play('Bomb', this.node, { pos: crashPos })\n                        if (DataManager.instance.mode == ENUM_GAME_MODE.TIMER) {\n                            // 碰撞累加时间\n                            EffectManager.instance.play('TimeTip', this.node)\n                            DataManager.instance.seconds += 5\n                            StaticInstance.uiManager.setMainTimerRendor()\n                        }\n                        this.resetStatus()\n                    }\n                }\n            }\n        }\n        return\n        // if (DataManager.instance.isShaking) return\n        // if (this.touchSlideDir.x || this.touchSlideDir.y) {\n        //     if (other.tag == ENUM_COLLIDER_TYPE.STOP) {\n        //         AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CRASH)\n        //         DataManager.instance.isShaking = true\n        //         EffectManager.instance.shake(StaticInstance.gameManager.stage, 0.1, () => {\n        //             DataManager.instance.isShaking = false\n        //         }, false)\n\n        //         const { x, y } = this.touchSlideDir\n        //         let crashPos = cc.v2(0, 0)\n        //         if (x) {\n        //             // 水平碰撞\n        //             this.touchSlideDir.x = 0\n        //             this.node.x = other.node.x + ((other.node.width + self.node.width) / 2) * -x\n        //             crashPos = cc.v2(this.node.width / 2 * x, 0)\n        //         } else {\n        //             // 垂直碰撞\n        //             this.touchSlideDir.y = 0\n        //             this.node.y = other.node.y + ((other.node.height + self.node.height) / 2) * -y\n        //             crashPos = cc.v2(0, this.node.height / 2 * y)\n        //         }\n        //         EffectManager.instance.play('Bomb', this.node, { pos: crashPos })\n\n        //         this.isMoving = false\n        //         this.resetStatus()\n        //     } else if (other.tag == ENUM_COLLIDER_TYPE.UNSTOP) {\n        //         // console.log('成功出库')\n        //         AudioManager.instance.playSound(ENUM_AUDIO_CLIP.Exit)\n        //         const { x, y } = this.touchSlideDir\n        //         const { width: swidth, height: sheight } = cc.winSize\n        //         let act = null\n        //         if (x) {\n        //             let angle = -90\n        //             if ((this.dir == 1 && x == 1) || (this.dir == 3 && x == -1)) angle = 90\n        //             // 水平碰撞\n        //             this.node.angle += angle\n        //             this.touchSlideDir.x = 0\n        //             this.node.x = other.node.x + ((other.node.width + self.node.height) / 2) * x + other.offset.x\n        //             // 计算移动距离\n        //             const p = toXY(this.node, StaticInstance.gameManager.stage)\n        //             let dis = 0\n        //             if (x > 0) {\n        //                 dis = Math.abs(sheight / 2 - p.y) + this.node.height / 2\n        //             } else {\n        //                 dis = Math.abs(-sheight / 2 - p.y) + this.node.height / 2\n        //             }\n        //             const mtime = dis / this.speedExit\n        //             act = cc.moveTo(mtime, this.node.x, this.node.y + dis * x)\n        //         } else {\n        //             // 垂直碰撞\n        //             let angle = -90\n        //             if ((this.dir == 2 && y == 1) || (this.dir == 0 && y == -1)) angle = 90\n        //             this.node.angle += angle\n        //             this.touchSlideDir.y = 0\n        //             this.node.y = other.node.y + ((other.node.height + self.node.width) / 2) * y + other.offset.y\n        //             // 计算移动距离\n        //             const p = toXY(this.node, StaticInstance.gameManager.stage)\n        //             let dis = 0\n        //             if (y > 0) {\n        //                 dis = Math.abs(swidth / 2 - p.x) + this.node.width / 2\n        //             } else {\n        //                 dis = Math.abs(-swidth / 2 - p.x) + this.node.width / 2\n        //             }\n        //             const mtime = dis / this.speedExit\n        //             act = cc.moveTo(mtime, this.node.x + dis * y, this.node.y)\n        //         }\n        //         this.setParticle()\n        //         this.isMoving = false\n        //         // 离场动画\n        //         if (act) {\n        //             cc.tween(this.node).then(act).call(() => {\n        //                 DataManager.instance.carExitNum += 1\n        //                 StaticInstance.gameManager.onGameCheck()\n        //                 this.node.removeFromParent()\n        //             }).start()\n        //         }\n\n        //         this.scheduleOnce(() => {\n        //             this.resetStatus()\n        //         })\n        //     }\n\n        // }\n    }\n\n    onCollisionExit(other: any, self: any) {\n        const selfComponent = self.node.getComponent(Car)\n        const otherComponent = other.node.getComponent(Car)\n        const otherNode = other.node\n        if (otherComponent && otherComponent.isOpacity) {\n            selfComponent.opacityCount -= 1\n            otherComponent.opacityCount -= 1\n            if (otherComponent.opacityCount <= 0) {\n                otherComponent.isOpacity = false\n                otherComponent.opacityCount = 0\n                cc.tween(otherNode).to(0.1, { opacity: 255 }).start()\n            }\n        }\n    }\n\n    resetStatus() {\n        this.touchPos = null\n        this.touchSlideDir = cc.v2(0, 0)\n    }\n}\n","\nconst protool = \"https:\";\nconst host = \"t.me/birds_li_bot?game=ggg\";\nexport const config:{\n    backendUrl: string,\n    URL_YOU_ASSIGNED_TO_YOUR_APP: `${string}://${string}`\n} ={\n    backendUrl:\"http://18.136.79.134:3000\",\n   URL_YOU_ASSIGNED_TO_YOUR_APP: `${protool}://${host}`\n\n}\n\nexport interface TonAddressConfig {\n    tonAddress: string,\n    jettonAddress?: string;\n}","/*\n * @Author: carolsail \n * @Date: 2023-07-18 08:46:54 \n * @Last Modified by: carolsail\n * @Last Modified time: 2023-07-25 17:08:49\n */\n\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\nimport Car from '../game/Car';\nimport { LanguageType } from '../Languages';\n\nconst STORAGE_KEY = 'CC_CAR_MOVE'\n\nexport const LEVEL_DATA = [\n    {\n        level: 1,\n        width: 490, // 摆放场景宽\n        height: 490, // 摆放场景高\n        unit: 70, // 摆放最小单位\n        cars: 4 // 设置数量则按预制体直接摆放\n    },\n    {\n        level: 2,\n        width: 550,\n        height: 600,\n        unit: 50,\n        cars: -1\n    },\n    {\n        level: 3,\n        width: 600,\n        height: 900,\n        unit: 50,\n        cars: -1\n    }\n]\n\nexport const CLEVEL_Data = [\n    {\n        level: 1,\n        width: 490,\n        height: 490,\n        unit: 70,\n        cars: 1,\n        crash: 3\n    },\n    {\n        level: 2,\n        width: 490,\n        height: 490,\n        unit: 70,\n        cars: 1,\n        crash: 4\n    },\n    {\n        level: 3,\n        width: 490,\n        height: 490,\n        unit: 70,\n        cars: 1,\n        crash: 4\n    },\n    {\n        level: 4,\n        width: 490,\n        height: 490,\n        unit: 70,\n        cars: 1,\n        crash: 5\n    },\n    {\n        level: 5,\n        width: 550,\n        height: 600,\n        unit: 50,\n        cars: -1,\n        crash: 8\n    },\n    {\n        level: 6,\n        width: 490,\n        height: 490,\n        unit: 70,\n        cars: 1,\n        crash: 7\n    },\n    {\n        level: 7,\n        width: 550,\n        height: 600,\n        unit: 50,\n        cars: -1,\n        crash: 5\n    },\n    {\n        level: 8,\n        width: 490,\n        height: 490,\n        unit: 70,\n        cars: 1,\n        crash: 9\n    },\n    {\n        level: 9,\n        width: 490,\n        height: 490,\n        unit: 70,\n        cars: 1,\n        crash: 7\n    },\n    {\n        level: 10,\n        width: 600,\n        height: 900,\n        unit: 50,\n        cars: -1,\n        crash: -1\n    }\n]\n\nexport default class DataManager {\n\n    private static _instance: any = null\n\n    static getInstance<T>(): T {\n        if (this._instance === null) {\n            this._instance = new this()\n        }\n\n        return this._instance\n    }\n\n    static get instance() {\n        return this.getInstance<DataManager>()\n    }\n    /**语言 */\n    language: LanguageType = LanguageType.EN\n    // 游戏模式\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.TIMER\n    // 游戏状态\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\n    // 加载进度\n    loadingRate: number = 0\n    // 声音开启\n    _isMusicOn: boolean = true\n    _isSoundOn: boolean = true\n    // 更多游戏\n    games: any[] = [\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\n    ]\n    // 关卡\n    level: number = 1\n    levelMax: number = 1\n    levelData: Array<any> = null;\n    // 挑战关卡\n    clevel: number = 1\n    clevelMax: number = 1\n    // 体力\n    power: number = 5\n    powerCollectByVideo: number = 1\n    // 体力回复间隔(60秒)\n    lastPowerRefreshTime: number = 0 // 每次刷新纪录点\n    powerRefreshTime: number = 60 // 间隔刷新\n    lastPowerUpdateTime: number = 0 // 后续离开游戏返回补充能量\n    // 金币\n    keys: number = 5\n    keysCollectByVideo: number = 1\n    // 当前选中car\n    currentCar: Car = null\n    // 屏幕震动\n    isShaking: boolean = false\n    // 场景中车辆数\n    carNum: number = 0\n    carExitNum: number = 0\n    // 游戏游玩时间\n    seconds: number = 0\n    secondsRecord: number = 604800\n    // 控制timer\n    isTimerStart: boolean = false\n    // 技能\n    skillIndex: number = -1\n    isSkilling: boolean = false\n    isSkillRuning: boolean = false\n    // 层级\n    zIndex: number = 0\n    // 撞击次数\n    crashTotal: number = 0\n    crashCurrent: number = 0\n\n    get isMusicOn() {\n        return this._isMusicOn\n    }\n\n    set isMusicOn(data: boolean) {\n        this._isMusicOn = data\n    }\n\n    get isSoundOn() {\n        return this._isSoundOn\n    }\n\n    set isSoundOn(data: boolean) {\n        this._isSoundOn = data\n    }\n\n    reset() {\n        this.status = ENUM_GAME_STATUS.UNRUNING\n        this.currentCar = null\n        this.carNum = 0\n        this.carExitNum = 0\n        this.skillIndex = -1\n        this.isSkilling = false\n        this.isSkillRuning = false\n        this.zIndex = 0\n        this.crashTotal = 0\n        this.crashCurrent = 0\n    }\n\n    save() {\n        cc.sys.localStorage.setItem(STORAGE_KEY, JSON.stringify({\n            isSoundOn: this.isSoundOn,\n            isMusicOn: this.isMusicOn,\n            keys: this.keys,\n            power: this.power,\n            lastPowerRefreshTime: this.lastPowerRefreshTime,\n            lastPowerUpdateTime: this.lastPowerUpdateTime,\n            secondsRecord: this.secondsRecord,\n            clevel: this.clevel,\n            clevelMax: this.clevelMax,\n            levelData: this.levelData,\n        }))\n    }\n\n    restore() {\n        const _data = cc.sys.localStorage.getItem(STORAGE_KEY) as any\n        try {\n            const data = JSON.parse(_data)\n            this.isMusicOn = data?.isMusicOn === false ? false : true\n            this.isSoundOn = data?.isSoundOn === false ? false : true\n            this.keys = typeof data.keys == 'number' ? data.keys : 5\n            this.power = typeof data.power == 'number' ? data.power : 5\n            this.lastPowerRefreshTime = typeof data.lastPowerRefreshTime == 'number' ? data.lastPowerRefreshTime : 0\n            this.lastPowerUpdateTime = typeof data.lastPowerUpdateTime == 'number' ? data.lastPowerUpdateTime : 0\n            this.secondsRecord = typeof data.secondsRecord == 'number' ? data.secondsRecord : 604800\n            this.clevel = typeof data.clevel == 'number' ? data.clevel : 1\n            this.clevelMax = typeof data.clevelMax == 'number' ? data.clevelMax : 1\n            if (data.levelData) {\n                this.levelData = data.levelData;\n            } else {\n                this.levelData = [];\n                for (let i = 0; i < LEVEL_DATA.length; i++) {\n                    this.levelData.push({ level: i + 1, star: 0 })\n                }\n            }\n        } catch {\n            this.isMusicOn = true\n            this.isSoundOn = true\n            this.keys = 5\n            this.power = 5\n            this.lastPowerRefreshTime = 0\n            this.lastPowerUpdateTime = 0\n            this.secondsRecord = 604800\n            this.clevel = 1\n            this.clevelMax = 1\n            this.levelData = [];\n            for (let i = 0; i < LEVEL_DATA.length; i++) {\n                this.levelData.push({ level: i + 1, star: 0 })\n            }\n        }\n    }\n}\n","/*\n * @Author: carolsail \n * @Date: 2023-07-19 11:53:28 \n * @Last Modified by:   carolsail \n * @Last Modified time: 2023-07-19 11:53:28 \n */\n\nimport PoolManager from \"./PoolManager\";\n\nexport default class EffectManager {\n    public static _instance: EffectManager = null\n\n    public static get instance() {\n        if (null == this._instance) {\n            this._instance = new EffectManager();\n        }\n        return this._instance\n    }\n\n    play(effect: string, parent: cc.Node, options?: any) {\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\n        if (options) {\n            options.pos && effNode.setPosition(options.pos)\n        }\n        if (effNode.getComponent(cc.Animation)) {\n            const anim = effNode.getComponent(cc.Animation)\n            anim.on('finished', () => {\n                effNode.removeFromParent()\n            })\n            anim.play()\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\n        }\n    }\n\n    /**\n     * 震动节点\n     * @param targetNode 目标节点\n     * @param duration 震动时间\n     * @param cb 震动结束回调\n     * @param once 多节点是否只回调一次\n     */\n    shake(targetNode: cc.Node | cc.Node[], duration: number, cb?: Function, once: boolean = true) {\n        /** 单个节点震动 */\n        const onceNodeShake = function (targetNode: cc.Node, duration: number, cb: Function, once: boolean) {\n            // 获取目标节点的初始位置\n            const nodeStartPos = targetNode.getPosition();\n            // 单次震动的时间\n            const onceDuration = 0.02;\n            // 最大值和最小值之间的坐标\n            const maxNum = 10;\n            const minNum = -10;\n            // 停止目标动画\n            cc.Tween.stopAllByTarget(targetNode);\n            // 每次震动频率随机位置\n            let randomX: number[] = [];\n            let randomY: number[] = [];\n            // 基于初始位置，随机生成8个坐标\n            for (let i = 0; i < 8; i++) {\n                let random1 = Math.round(Math.random() * (minNum - maxNum)) + maxNum;\n                randomX.push(random1 + nodeStartPos.x);\n                let random2 = Math.round(Math.random() * (minNum - maxNum)) + maxNum;\n                randomY.push(random2 + nodeStartPos.y);\n            }\n            // 播放动画\n            cc.tween(targetNode)\n                .sequence(\n                    cc.tween().to(onceDuration, { position: cc.v3(randomX[0], randomY[0], 0) }),\n                    cc.tween().to(onceDuration, { position: cc.v3(randomX[1], randomY[1], 0) }),\n                    cc.tween().to(onceDuration, { position: cc.v3(randomX[2], randomY[2], 0) }),\n                    cc.tween().to(onceDuration, { position: cc.v3(randomX[3], randomY[3], 0) }),\n                    cc.tween().to(onceDuration, { position: cc.v3(randomX[4], randomY[4], 0) }),\n                    cc.tween().to(onceDuration, { position: cc.v3(randomX[5], randomY[5], 0) }),\n                    cc.tween().to(onceDuration, { position: cc.v3(randomX[6], randomY[6], 0) }),\n                    cc.tween().to(onceDuration, { position: cc.v3(randomX[7], randomY[7], 0) }),\n                )\n                .repeatForever()\n                .start();\n\n            return new Promise<void>((resolve, reject) => {\n                setTimeout(() => {\n                    cc.Tween.stopAllByTarget(targetNode);\n                    targetNode.setPosition(nodeStartPos.x, nodeStartPos.y);\n                    if (!once) {\n                        cb && cb();\n                    } else {\n                        resolve();\n                    }\n                }, duration * 1000)\n            })\n        }\n\n        if (targetNode instanceof Array) {\n            if (once) {\n                let tweens: Promise<void>[] = [];\n                for (let i = 0; i < targetNode.length; i++) {\n                    let tween = onceNodeShake(targetNode[i], duration, cb, once);\n                    tweens.push(tween);\n                }\n                Promise.all(tweens).then(() => cb && cb());\n            } else {\n                // 注：这里每个节点震动后都会回调一次\n                targetNode.forEach(node => onceNodeShake(node, duration, cb, once));\n            }\n        } else {\n            onceNodeShake(targetNode, duration, cb, once);\n        }\n    }\n}","/*\n * @Author: carolsail \n * @Date: 2023-07-25 11:43:51 \n * @Last Modified by: carolsail\n * @Last Modified time: 2023-07-25 15:09:37\n */\n\n// 模式\nexport enum ENUM_GAME_MODE {\n    TIMER = 'TIMER',\n    LEVEL = 'LEVEL'\n}\n\n// 状态\nexport enum ENUM_GAME_STATUS {\n    UNRUNING = 'UNRUNING',\n    RUNING = 'RUNING'\n}\n\n// 音效\nexport enum ENUM_AUDIO_CLIP {\n    BGM = 'bgm',\n    CLICK = 'click',\n    Exit = 'exit',\n    CRASH = 'crash',\n    BIBI = 'bibi',\n    BI = 'bi',\n    READY = 'ready',\n    LOSE = 'lose',\n    WIN = 'win',\n    GET_COIN = 'get_coin',\n    GET_MONEY = 'get_money',\n    SKILL = 'skill',\n    PASS = 'pass'\n}\n\n// ui层\nexport enum ENUM_UI_TYPE {\n    MENU = 'MenuLayer',\n    MAIN = 'MainLayer',\n    EXIT = 'ExitLayer',\n    OVER = 'OverLayer',\n    MORE = 'MoreLayer',\n    RANK = 'RankLayer',\n    SKILL_SUBMIT = 'SkillSubmitLayer',\n    MAIN_LEVEL = 'MainLevelLayer',\n    TASK = \"TaskLayer\",//任务页面\n    SHOP = \"ShopLayer\",//商店页面\n    SHARE = \"ShareLayer\",//邀请页面\n    LEVEL_UI = \"LevelUILayer\",//通用关卡ui\n    LEVEL_SELECT = \"LevelSelectLayer\",//选择关卡页面\n    EXIT_LEVEL = 'ExitLevelLayer',\n    SETTING = 'SettingLayer',\n    LOSE = 'LoseLayer',\n    WIN = 'WinLayer'\n}\n\n// 碰撞体\nexport enum ENUM_COLLIDER_TYPE {\n    CAR = 0,\n    BLOCK = 1,\n    EXIT = 2\n}\n\n// 事件\nexport enum ENUM_GAME_EVENT { }\n\n// 资源\nexport const ENUM_RESOURCE_TYPE = ([\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\n])","// Created by carolsail\n\ninterface IEventItem {\n    event: Function\n    context: unknown\n}\n\nexport enum EventType {\n    OPEN_LEVEL_BTN = \"OPEN_LEVEL_BTN\",\n    UPDATE_LANGUAGE = \"UPDATE_LANGUAGE\",\n    GOTO_LEVEL = \"GOTO_LEVEL\",\n    CONNECT_COMPLETE = \"CONNECT_COMPLETE\",\n}\n\nexport default class EventManager {\n    private static _instance: any = null\n\n    static getInstance<T>(): T {\n        if (this._instance === null) {\n            this._instance = new this()\n        }\n\n        return this._instance\n    }\n\n    eventMap: Map<String, Array<IEventItem>> = new Map()\n\n    messageMap: Map<String, Array<unknown[]>> = new Map()\n\n    static get instance() {\n        return this.getInstance<EventManager>()\n    }\n\n    on(name: string, event: Function, context?: unknown) {\n        if (this.eventMap.has(name)) {\n            const eventArr = this.eventMap.get(name)\n            eventArr.push({ event, context })\n        } else {\n            this.eventMap.set(name, [{ event, context }])\n        }\n        if(this.messageMap.has(name)){\n            const messages = this.messageMap.get(name)\n            messages.forEach(params => {\n                context ? event.apply(context, params) : event(params)\n            })\n            this.messageMap.delete(name)\n        }\n    }\n\n    off(name: string, event: Function, context?: unknown) {\n        // if (this.eventMap.has(name)) {\n        //     const eventArr = this.eventMap.get(name)\n        //     const index = eventArr.findIndex(item => item.event == event)\n        //     if (index > -1) eventArr.splice(index, 1)\n        // }\n        if (this.eventMap.has(name)) {\n            const eventArr = this.eventMap.get(name);\n            const index = eventArr.findIndex(item =>\n                item.event === event && item.context === context\n            );\n            if (index > -1) eventArr.splice(index, 1);\n        }\n    }\n\n    emit(name: string, ...params: unknown[]) {\n        if (this.eventMap.has(name)) {\n            const eventArr = this.eventMap.get(name)\n            eventArr.forEach(({ event, context }) => {\n                context ? event.apply(context, params) : event(params)\n            })\n        }else{\n           const messages = this.messageMap.get(name)\n              if(messages){\n                messages.push(params)\n              }else{\n                this.messageMap.set(name, [params])\n              }\n        }\n    }\n\n    clear() {\n        this.eventMap.clear()\n    }\n}","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport BaseLayer from \"./Baselayer\";\nimport SdkManager from \"../manager/SdkManager\";\nimport DataManager from \"../manager/DataManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ExitLayer extends BaseLayer {\n\n    panel: cc.Node = null\n    btnSubmit: cc.Node = null\n    btnClose: cc.Node = null\n\n    onLoad() {\n        this.panel = cc.find('style/panel', this.node)\n        this.btnSubmit = cc.find('btn_submit', this.panel)\n        this.btnClose = cc.find('btn_close', this.panel)\n        this.btnSubmit.on('click', this.onSubmitClick, this)\n        this.btnClose.on('click', this.onCloseClick, this)\n    }\n\n    onDestroy() {\n        this.btnSubmit.off('click', this.onSubmitClick, this)\n        this.btnClose.off('click', this.onCloseClick, this)\n    }\n\n    onEnable() {\n        this.zoomIn(this.panel)\n        SdkManager.instance.toggleBannerAd(true)\n    }\n\n    onDisable() {\n        SdkManager.instance.toggleBannerAd(false)\n    }\n\n    onCloseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\n    }\n\n    onSubmitClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.setMainTimer(false)\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport BaseLayer from \"./Baselayer\";\nimport SdkManager from \"../manager/SdkManager\";\nimport DataManager from \"../manager/DataManager\";\nimport BaseLanguageLayer from \"./BaseLanguageLayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ExitLevelLayer extends BaseLanguageLayer {\n\n    panel: cc.Node = null\n    btnClose: cc.Node = null\n    btnSubmit: cc.Node = null\n    btnRestart: cc.Node = null\n\n    onLoad() {\n        super.onLoad()\n        this.panel = cc.find('style/panel', this.node)\n        this.btnSubmit = cc.find('btn_submit', this.panel)\n        this.btnRestart = cc.find('btn_restart', this.panel)\n        this.btnClose = cc.find('btn_close', this.panel)\n        this.btnSubmit.on('click', this.onSubmitClick, this)\n        this.btnRestart.on('click', this.onRestartClick, this)\n        this.btnClose.on('click', this.onCloseClick, this)\n    }\n\n    onDestroy() {\n        this.btnSubmit.off('click', this.onSubmitClick, this)\n        this.btnRestart.off('click', this.onRestartClick, this)\n        this.btnClose.off('click', this.onCloseClick, this)\n    }\n\n    onEnable() {\n        this.zoomIn(this.panel)\n        SdkManager.instance.toggleBannerAd(true)\n    }\n\n    onDisable() {\n        SdkManager.instance.toggleBannerAd(false)\n    }\n\n    onCloseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT_LEVEL, false)\n    }\n\n    onSubmitClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN_LEVEL, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT_LEVEL, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\n    }\n\n    onRestartClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.transitionsManager.play(ENUM_UI_TYPE.EXIT_LEVEL, null, () => {\n            StaticInstance.gameManager.onGameLevelStart()\n        })\n    }\n}\n","/*\n * @Author: carolsail \n * @Date: 2023-07-18 08:46:46 \n * @Last Modified by: carolsail\n * @Last Modified time: 2023-07-25 16:14:36\n */\n\nconst { ccclass, property } = cc._decorator;\n\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from \"../StaticInstance\";\nimport Board from \"../game/Board\";\nimport AudioManager from \"./AudioManager\";\nimport DataManager, { CLEVEL_Data } from \"./DataManager\";\nimport PoolManager from \"./PoolManager\";\n\n@ccclass\nexport default class GameManager extends cc.Component {\n\n    stage: cc.Node = null\n    roads: cc.Node = null\n    board: cc.Node = null\n\n    onLoad() {\n        StaticInstance.setGameManager(this)\n        this.stage = cc.find('Stage', this.node)\n    }\n\n    onDestroy() { }\n\n    // 开始游戏\n    onGameStart() {\n        DataManager.instance.reset()\n        DataManager.instance.level = 1\n        DataManager.instance.seconds = 0\n        this.initGame()\n    }\n\n    onGameLevelStart() {\n        DataManager.instance.reset()\n        this.initGame()\n    }\n\n    onGameCheck() {\n        if (StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU)) return\n        if (DataManager.instance.mode == ENUM_GAME_MODE.TIMER) {\n            if (DataManager.instance.carNum <= DataManager.instance.carExitNum) {\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.WIN)\n                if (DataManager.instance.level < DataManager.instance.levelMax) {\n                    DataManager.instance.reset()\n                    DataManager.instance.level += 1\n                    this.initGame()\n                    StaticInstance.uiManager.setMainTimer(false)\n                    // 提示难度加大\n                    StaticInstance.uiManager.setMainLevelUpNotice()\n                } else {\n                    // 完成所有关卡进入结算\n                    DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OVER)\n                }\n            }\n        } else if (DataManager.instance.mode == ENUM_GAME_MODE.LEVEL) {\n            if (DataManager.instance.crashTotal <= DataManager.instance.crashCurrent) {\n                if (StaticInstance.uiManager.isActive(ENUM_UI_TYPE.WIN)) return\n                DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE)\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE)\n            } else {\n                if (DataManager.instance.carNum <= DataManager.instance.carExitNum) {\n                    if (StaticInstance.uiManager.isActive(ENUM_UI_TYPE.LOSE)) return\n                    DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\n                    AudioManager.instance.playSound(ENUM_AUDIO_CLIP.PASS)\n                    let clevel = DataManager.instance.clevel + 1\n                    clevel = Math.min(clevel, CLEVEL_Data.length)\n                    DataManager.instance.clevel = clevel\n                    if (clevel > DataManager.instance.clevelMax) DataManager.instance.clevelMax = clevel\n                    DataManager.instance.save()\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN)\n                }\n            }\n        }\n    }\n\n    // 初始化游戏\n    initGame() {\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\n        this.stage.removeAllChildren()\n        if (DataManager.instance.mode == ENUM_GAME_MODE.TIMER) {\n            const level = PoolManager.instance.getNode(`Level${DataManager.instance.level}`, this.stage)\n            this.roads = level.getChildByName('roads')\n            this.board = level.getChildByName('board')\n            const boardComponent: Board = this.board.getComponent(Board)\n            boardComponent.init()\n            DataManager.instance.status = ENUM_GAME_STATUS.RUNING\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SKILL_SUBMIT, false)\n            StaticInstance.uiManager.setMainSkillTip()\n            if (DataManager.instance.level == 1) {\n                StaticInstance.uiManager.setMainTimerRendor()\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.READY)\n            }\n        } else if (DataManager.instance.mode == ENUM_GAME_MODE.LEVEL) {\n            const level = PoolManager.instance.getNode(`CLevel${DataManager.instance.clevel}`, this.stage)\n            this.roads = level.getChildByName('roads')\n            this.board = level.getChildByName('board')\n            const boardComponent: Board = this.board.getComponent(Board)\n            boardComponent.init()\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.READY)\n            StaticInstance.uiManager.setMainLevelCrash()\n            StaticInstance.uiManager.setMainLevelTip()\n            DataManager.instance.status = ENUM_GAME_STATUS.RUNING\n        }\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP } from \"../Enum\";\nimport { formatSeconds } from \"../Utils\";\nimport AudioManager from \"../manager/AudioManager\";\nimport DataManager from \"../manager/DataManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport ToastManager from \"../manager/ToastManager\";\nimport BaseLanguageLayer from \"./BaseLanguageLayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class HeaderLayer extends BaseLanguageLayer {\n\n    barPower: cc.Node = null\n    barKey: cc.Node = null\n    timerPower: cc.Node = null\n\n    onLoad() {\n        super.onLoad();\n        this.barPower = cc.find('bar/power', this.node)\n        this.barKey = cc.find('bar/key', this.node)\n        this.timerPower = cc.find('timer', this.barPower)\n    }\n\n    rendorPower() {\n        if (!this.barPower) return\n        const num = this.barPower.getChildByName('nums')\n        const btn = this.barPower.getChildByName('icon')\n        if (num) num.getComponent(cc.Label).string = `${DataManager.instance.power}`\n        if (btn && !btn.hasEventListener('click')) {\n            btn.on('click', () => {\n                this.getRewardByVideo('power')\n            })\n        }\n    }\n\n    rendorKeys() {\n        if (!this.barKey) return\n        const num = this.barKey.getChildByName('nums')\n        const btn = this.barKey.getChildByName('icon')\n        if (num) num.getComponent(cc.Label).string = `${DataManager.instance.keys}`\n        if (btn && !btn.hasEventListener('click')) {\n            btn.on('click', () => {\n                this.getRewardByVideo('keys')\n            })\n        }\n    }\n\n    getRewardByVideo(type: string = 'keys') {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        SdkManager.instance.showVideoAd((msg: string) => {\n            if (!SdkManager.instance.getPlatform()) {\n                ToastManager.instance.show(msg, { gravity: 'BOTTOM', bg_color: cc.color(102, 202, 28, 255) })\n            }\n            if (type == 'keys') {\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.GET_MONEY)\n                DataManager.instance.keys += DataManager.instance.keysCollectByVideo\n                DataManager.instance.save()\n                this.rendorKeys()\n            } else {\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.GET_MONEY)\n                DataManager.instance.power += DataManager.instance.powerCollectByVideo\n                DataManager.instance.save()\n                this.rendorPower()\n            }\n        }, (msg: string) => {\n            ToastManager.instance.show(msg, { gravity: 'BOTTOM', bg_color: cc.color(226, 69, 109, 255) })\n        })\n    }\n\n    rendorPowerTimer() {\n        if (!this.timerPower) return\n        this.unscheduleAllCallbacks()\n        let isSchedule: boolean = true\n        if (DataManager.instance.power >= 5) isSchedule = false\n        if (DataManager.instance.lastPowerRefreshTime > 0) isSchedule = true\n        if (isSchedule) {\n            let time = DataManager.instance.powerRefreshTime - DataManager.instance.lastPowerRefreshTime\n            this.timerPower.getComponent(cc.Label).string = formatSeconds(time, 'i:s')\n            const callback = () => {\n                time -= 1\n                if (time <= 0) {\n                    DataManager.instance.power += 1\n                    this.rendorPower()\n                    if (DataManager.instance.power >= 5) {\n                        this.unschedule(callback)\n                        this.timerPower.getComponent(cc.Label).string = ''\n                        DataManager.instance.lastPowerRefreshTime = 0\n                    } else {\n                        time = DataManager.instance.powerRefreshTime\n                        DataManager.instance.lastPowerRefreshTime = 0\n                        this.timerPower.getComponent(cc.Label).string = formatSeconds(time, 'i:s')\n                    }\n                } else {\n                    this.timerPower.getComponent(cc.Label).string = formatSeconds(time, 'i:s')\n                    DataManager.instance.lastPowerRefreshTime = DataManager.instance.powerRefreshTime - time\n                }\n                DataManager.instance.lastPowerUpdateTime = new Date().getTime()\n                DataManager.instance.save()\n            }\n            this.schedule(callback, 1)\n        }\n    }\n}\n","// Created by carolsail\n\nimport { StaticInstance } from './StaticInstance';\nimport { ENUM_GAME_MODE, ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\nimport AudioManager from \"./manager/AudioManager\";\nimport DataManager from './manager/DataManager';\nimport ResourceManager from \"./manager/ResourceManager\";\nimport SdkManager from './manager/SdkManager';\nimport  EventManager , {EventType} from \"./manager/EventManager\"\nimport { allJson } from './AlljsonData';\nimport { config, type TonAddressConfig } from './Config';\n// import  * as cocosSdk  from './cocos-ton';\nimport { TelegramWebApp,  } from './cocos-telegram-miniapps/telegram-web';\nimport {TonConnectUi , type Transaction} from './cocos-telegram-miniapps/telegram-ui';\nimport { WebTon } from './cocos-telegram-miniapps/webton';\n\n//const TelegramWebApp = window['Telegram'].WebApp\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Index extends cc.Component {\n    @property\n    collisionManagerDebug: boolean = false;\n\n\n\n    private _bTonInit: boolean = false;\n    private _connectUI;\n    //ton 和jetton地址， ton是买东西付款到的地址\n    private _config: TonAddressConfig;\n\n    onLoad() {\n        this.node.getChildByName('UI').opacity = 255\n        cc.view.setResizeCallback(() => this.responsive())\n        this.responsive()\n        TelegramWebApp.Instance.init().then(res => {\n            console.log(\"telegram web app init : \", res.success);\n        }).catch(err => { console.error(err); });\n       \n        this.loadWallet().then(res => {\n            if (!res) {\n                console.error('load wallet failed!')\n                return;\n            }\n            this._initTonUI();\n        }).catch(err => { console.error(err); });\n        WebTon.Instance.init().then(res => {\n            console.log(\"web ton init : \", res.success);\n        })\n        DataManager.instance.loadingRate = 0\n        // 碰撞系统\n        const colManager = cc.director.getCollisionManager();\n        colManager.enabled = true;\n        if (this.collisionManagerDebug) colManager.enabledDebugDraw = true;\n    }\n\n    async _initTonUI() {\n        TonConnectUi.Instance.init('https://ton-connect.github.io/demo-dapp-with-wallet/tonconnect-manifest.json',this._config.tonAddress, 'en').then(res => {\n            console.log(\"ton connect ui init : \", res.success);\n            TonConnectUi.Instance.subscribeWallet(()=>{\n                console.log(\"wallet change\");\n                EventManager.instance.emit(EventType.CONNECT_COMPLETE, res.success);\n            })\n        })\n    }\n\n    public isConnected(): boolean {\n        if (!TonConnectUi.Instance) {\n            console.error(\"ton ui not inited!\");\n            return false;\n        }\n        return TonConnectUi.Instance.isConnected();\n    }\n\n \n\n\n    public async openModal() {\n        if (!TonConnectUi.Instance) return;\n        console.log(\"open modal\", this.isConnected());\n\n        if (TonConnectUi.Instance.isConnected()) {\n            TonConnectUi.Instance.disconnect();\n        } else {\n            TonConnectUi.Instance.openModal();\n        }\n    }\n     //open the wallet\n    async loadWallet():Promise<boolean>{\n        try{\n      const value =await   fetch(`${config.backendUrl}/config`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                \"ngrok-skip-browser-warning\":\"1\"\n            },\n            method: 'GET'}).then(response => {\n            return response.json();\n        })\n        const addressConfig = {\n            tonAddress: value.tokenRecipient,\n            jettonAddress: value.jettonMaster\n        } as TonAddressConfig;\n          this._config = addressConfig;\n        return true;\n    }catch(e){\n\n        console.error('request config failed!',e);\n        return false;\n    }\n       \n    }\n    public onBuyWithTon(amount: string) {\n        const tonTransferReq: Transaction= {\n            amount: TonConnectUi.Instance.toNano(amount),\n        };\n         TonConnectUi.Instance.sendTransaction(tonTransferReq);\n    }\n    public onShare() {\n        let userId = '';\n        const userData = TelegramWebApp.Instance.getTelegramUser();\n        console.log(\"userData : \", userData);\n        if (userData) {\n            userId = userData.id + '';\n        }\n        TelegramWebApp.Instance.share(`${config.URL_YOU_ASSIGNED_TO_YOUR_APP}&user=${userId}`, \"Invite you to play a very interesting game\");\n    }\n    /*      tg_data: z.string(),\n        payload:z.string(), order id\n        amount: z.number(), amount \n        title: z.string(), //order title\n        product: z.string(),  product name\n        buy star\n    */\n    public onBuyWithStars(params:{tg_data:any,payload:string,amount:number,title:string,product:string}){ \n        fetch(`${config.backendUrl}/create-stars-invoice`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                \"ngrok-skip-browser-warning\":\"1\"\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                tg_data:  (window as any).Telegram.WebApp.initData,\n                title: params.title,\n                payload: params.payload,\n                amount: params.amount,\n                product: params.product\n            }),\n        }).then(response => {\n            return  response.json();\n        }).then(value => {\n            console.log(\"starts invoice : \", value);\n            if (value.ok) {\n                TelegramWebApp.Instance.openInvoice(value.invoiceLink, (result) => {\n                    console.log(\"buy stars : \", result);\n                }).catch((error) => {\n                    console.error(\"open invoice error : \", error);\n                })\n            } else {\n                console.error('request config failed!');\n            }\n        });\n    }\n\n    async start() {\n\n        // 加载资源\n        for (const index in ENUM_RESOURCE_TYPE) {\n            const resource = ENUM_RESOURCE_TYPE[index]\n            await ResourceManager.instance.loadRes(resource)\n        }\n        // 读档\n        DataManager.instance.restore()\n        // 加载ui\n        StaticInstance.uiManager.init()\n        // 播放音乐\n        AudioManager.instance.playMusic()\n        // 加载sdk\n        SdkManager.instance.initAudioEndListener()\n        SdkManager.instance.passiveShare()\n        SdkManager.instance.getRank()\n        SdkManager.instance.initBannerAd()\n        SdkManager.instance.initInterstitialAd()\n        SdkManager.instance.initVideoAd()\n        SdkManager.instance.initCustomRowAd()\n        SdkManager.instance.initCustomColAd()\n        // 离开后体力恢复逻辑\n        this.onPowerIncrease()\n        // 操作ui\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEVEL_UI, true);\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEVEL_SELECT, true);\n        // StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true, () => {\n        //     DataManager.instance.loadingRate = 1\n        // })\n    }\n\n    // 屏幕响应式\n    responsive() {\n        const designSize = cc.view.getDesignResolutionSize();\n        const viewSize = cc.view.getFrameSize();\n\n        const setFitWidth = () => {\n            cc.Canvas.instance.fitHeight = false;\n            cc.Canvas.instance.fitWidth = true;\n        }\n\n        const setFitHeight = () => {\n            cc.Canvas.instance.fitHeight = true;\n            cc.Canvas.instance.fitWidth = false;\n        }\n\n        const setFitBoth = () => {\n            cc.Canvas.instance.fitHeight = true;\n            cc.Canvas.instance.fitWidth = true;\n        }\n\n        const designRatio = designSize.width / designSize.height\n        const viewRatio = viewSize.width / viewSize.height\n        if (designRatio < 1) {\n            // console.error('--竖屏游戏')\n            if (viewRatio < 1) {\n                if (viewRatio > designRatio) {\n                    setFitBoth()\n                } else {\n                    setFitWidth()\n                }\n            } else {\n                setFitBoth()\n            }\n        } else {\n            // console.error('--宽屏游戏')\n            if (viewRatio > 1) {\n                if (viewRatio < designRatio) {\n                    setFitBoth()\n                } else {\n                    setFitHeight()\n                }\n            } else {\n                setFitBoth()\n            }\n        }\n    }\n\n    onPowerIncrease() {\n        // 体力小于5的时候需要补充\n        if (DataManager.instance.power < 5) {\n            const now = new Date().getTime()\n            const seconds = Math.floor((now - DataManager.instance.lastPowerUpdateTime) / 1000)\n            const powers = Math.floor(seconds / DataManager.instance.powerRefreshTime)\n            if (DataManager.instance.power + powers >= 5) {\n                DataManager.instance.power = 5\n                DataManager.instance.lastPowerRefreshTime = 0\n            } else {\n                DataManager.instance.power += powers\n            }\n            // console.log('自动补充体力', powers)\n            DataManager.instance.save()\n        }\n    }\n}\n","\nexport enum LanguageType {\n    CH_J = \"zh-CN\",//中文简体\n    CH_F = \"zh-TW\",//中文繁体\n    EN = \"en\",//英文\n    RU = \"ru\",\n    AR = \"ar\",\n    JA = \"ja\",//日\n}\n\n// export const Languages = {\n//     /**LevelUILayer */\n// suoduan: { CH_J: \"缩短\", CH_F: \"缩短\", EN: \"suoduan\" },\n// touming: { CH_J: \"透明\", CH_F: \"透明\", EN: \"touming\" },\n// yichu: { CH_J: \"移除\", CH_F: \"移除\", EN: \"yichu\" },\n// zhuanqv: { CH_J: \"赚取\", CH_F: \"赚取\", EN: \"zhuanqv\" },\n// renwu: { CH_J: \"任务\", CH_F: \"任务\", EN: \"renwu\" },\n// shangdian: { CH_J: \"商店\", CH_F: \"商店\", EN: \"shangdian\" },\n// yaoqing: { CH_J: \"邀请\", CH_F: \"邀请\", EN: \"yaoqing\" },\n// /**LevelSelectLayer */\n// guankaxuanze: { CH_J: \"关卡选择\", CH_F: \"关卡选择\", EN: \"guankaxuanze\" },\n// putongmoshi: { CH_J: \"普通模式\", CH_F: \"普通模式\", EN: \"putongmoshi\" },\n// tiaozhanmoshi: { CH_J: \"挑战模式\", CH_F: \"挑战模式\", EN: \"tiaozhanmoshi\" },\n// /**ExitLevelLayer*/\n// exitgame: { CH_J: \"退出游戏\", CH_F: \"退出游戏\", EN: \"exitgame\" },\n// exit: { CH_J: \"退出\", CH_F: \"退出\", EN: \"exit\" },\n// chongwan: { CH_J: \"重玩\", CH_F: \"重玩\", EN: \"chongwan\" },\n// /**TaskLayer */\n// meirirenwu: { CH_J: \"每日任务\", CH_F: \"每日任务\", EN: \"meirirenwu\" },\n// mubiaorenwu: { CH_J: \"目标任务\", CH_F: \"目标任务\", EN: \"mubiaorenwu\" },\n// /**ShopLayer */\n// libao: { CH_J: \"礼包\", CH_F: \"礼包\", EN: \"libao\" },\n// yaoshi: { CH_J: \"钥匙\", CH_F: \"钥匙\", EN: \"yaoshi\" },\n// daibi: { CH_J: \"代币\", CH_F: \"代币\", EN: \"daibi\" },\n// pifu: { CH_J: \"皮肤\", CH_F: \"皮肤\", EN: \"pifu\" },\n// huasuanlibao: { CH_J: \"划算礼包\", CH_F: \"划算礼包\", EN: \"huasuanlibao\" },\n// chaojilibao: { CH_J: \"超级礼包\", CH_F: \"超级礼包\", EN: \"chaojilibao\" },\n// pifulibao: { CH_J: \"皮肤礼包\", CH_F: \"皮肤礼包\", EN: \"pifulibao\" },\n// jingqingqidai: { CH_J: \"敬请期待\", CH_F: \"敬请期待\", EN: \"jingqingqidai\" },\n// /**TaskLayer */\n// chakanxinwen: { CH_J: \"查看官方新闻\", CH_F: \"查看官方新闻\", EN: \"chakanxinwen\" },\n// jiarupindao: { CH_J: \"加入官方频道\", CH_F: \"加入官方频道\", EN: \"jiarupindao\" },\n// guanzhutuite: { CH_J: \"关注官方推特\", CH_F: \"关注官方推特\", EN: \"guanzhutuite\" },\n// guankayouxi: { CH_J: \"观看TON的游戏\", CH_F: \"观看TON的游戏\", EN: \"guankayouxi\" },\n// tongguan10: { CH_J: \"通关10次游戏关卡\", CH_F: \"通关10次游戏关卡\", EN: \"tongguan10\" },\n// tongguan20: { CH_J: \"通关20次游戏关卡\", CH_F: \"通关20次游戏关卡\", EN: \"tongguan20\" },\n// leijitili100: { CH_J: \"累计使用100体力\", CH_F: \"累计使用100体力\", EN: \"leijitili100\" },\n// leijitili200: { CH_J: \"累计使用200体力\", CH_F: \"累计使用200体力\", EN: \"leijitili200\" },\n// leijiyichu20: { CH_J: \"累计使用20次移除道具\", CH_F: \"累计使用20次移除道具\", EN: \"leijiyichu20\" },\n// /**ShareLayer */\n// fenxiangtips: { CH_J: \"分享邀请朋友共享链接并获得奖励\", CH_F: \"分享邀请朋友共享链接并获得奖励\", EN: \"fenxiangtips\" },\n// leijiyaoqing: { CH_J: \"累计邀请\", CH_F: \"累计邀请\", EN: \"leijiyaoqing\" },\n// shouyaozhemingdan: { CH_J: \"受邀者名单\", CH_F: \"受邀者名单\", EN: \"shouyaozhemingdan\" },\n// chakanquanbu: { CH_J: \"查看全部\", CH_F: \"查看全部\", EN: \"chakanquanbu\" },\n// lijiyaoqing: { CH_J: \"立即邀请\", CH_F: \"立即邀请\", EN: \"lijiyaoqing\" },\n// kelingqv: { CH_J: \"可领取\", CH_F: \"可领取\", EN: \"kelingqv\" },\n// yilingqv: { CH_J: \"已领取\", CH_F: \"已领取\", EN: \"yilingqv\" },\n// zanwugengduo: { CH_J: \"暂无更多\", CH_F: \"暂无更多\", EN: \"zanwugengduo\" },\n// /**SettingLayer */\n// yinyue: { CH_J: \"音乐\", CH_F: \"音乐\", EN: \"yinyue\" },\n// yinxiao: { CH_J: \"音效\", CH_F: \"音效\", EN: \"yinxiao\" },\n// youxishezhi: { CH_J: \"游戏设置\", CH_F: \"游戏设置\", EN: \"youxishezhi\" },\n// yuyanqiehuan: { CH_J: \"语言切换\", CH_F: \"语言切换\", EN: \"yuyanqiehuan\" },\n// zhongwenjianti: { CH_J: \"中文简体\", CH_F: \"中文简体\", EN: \"zhongwenjianti\" },\n// zhongwenfanti: { CH_J: \"中文繁体\", CH_F: \"中文繁体\", EN: \"zhongwenfanti\" },\n// yingyu: { CH_J: \"英语\", CH_F: \"英语\", EN: \"yingyu\" },\n// /**WinLayer */\n// fenxiang: { CH_J: \"分享\", CH_F: \"分享\", EN: \"fenxiang\" },\n// xiayiguan: { CH_J: \"下一关\", CH_F: \"下一关\", EN: \"xiayiguan\" },\n// zaiwanyici: { CH_J: \"再玩一次\", CH_F: \"再玩一次\", EN: \"zaiwanyici\" },\n\n// }\nexport const Languages = {\n    \"RU\": {\n        \"name\": \"RU\",\n        \"zh-CN\": \"Русский язык\",\n        \"zh-TW\": \"Русский язык\",\n        \"en\": \"Русский язык\",\n        \"ru\": \"Русский язык\",\n        \"ar\": \"Русский язык\",\n        \"ja\": \"Русский язык\"\n    },\n    \"AR\": {\n        \"name\": \"AR\",\n        \"zh-CN\": \"بالعربية\",\n        \"zh-TW\": \"بالعربية\",\n        \"en\": \"بالعربية\",\n        \"ru\": \"بالعربية\",\n        \"ar\": \"بالعربية\",\n        \"ja\": \"بالعربية\"\n    },\n    \"JA\": {\n        \"name\": \"JA\",\n        \"zh-CN\": \"日本語\",\n        \"zh-TW\": \"日本語\",\n        \"en\": \"日本語\",\n        \"ru\": \"日本語\",\n        \"ar\": \"日本語\",\n        \"ja\": \"日本語\"\n    },\n    \"suoduan\": {\n        \"name\": \"suoduan\", \"zh-CN\": \"缩短\", \"zh-TW\": \"縮短\", \"en\": \"shorten\", \"ru\": \"Сокращение\", \"ar\": \"تقصير\", \"ja\": \"短縮\"\n    }, \"touming\": { \"name\": \"touming\", \"zh-CN\": \"透明\", \"zh-TW\": \"透明\", \"en\": \"transparent\", \"ru\": \"Прозрачность\", \"ar\": \"شفافية\", \"ja\": \"透過性\" }, \"yichu\": { \"name\": \"yichu\", \"zh-CN\": \"移除\", \"zh-TW\": \"移除\", \"en\": \"remove\", \"ru\": \"Удалить\", \"ar\": \"إزالة\", \"ja\": \"除去じょきょ\" }, \"zhuanqv\": { \"name\": \"zhuanqv\", \"zh-CN\": \"赚取\", \"zh-TW\": \"賺取\", \"en\": \"earn\", \"ru\": \"Заработать\", \"ar\": \"كسب\", \"ja\": \"もうかる\" }, \"renwu\": { \"name\": \"renwu\", \"zh-CN\": \"任务\", \"zh-TW\": \"任務\", \"en\": \"task\", \"ru\": \"Мандат\", \"ar\": \"مهمة\", \"ja\": \"タスク＃タスク＃\" }, \"shangdian\": { \"name\": \"shangdian\", \"zh-CN\": \"商店\", \"zh-TW\": \"商店\", \"en\": \"store\", \"ru\": \"Магазины\", \"ar\": \"مخزن\", \"ja\": \"店\" }, \"yaoqing\": { \"name\": \"yaoqing\", \"zh-CN\": \"邀请\", \"zh-TW\": \"邀請\", \"en\": \"invite\", \"ru\": \"Приглашение\", \"ar\": \"دعوة\", \"ja\": \"に勧める\" }, \"guankaxuanze\": { \"name\": \"guankaxuanze\", \"zh-CN\": \"关卡选择\", \"zh-TW\": \"關卡選擇\", \"en\": \"Stage Select\", \"ru\": \"Выбрать уровень\", \"ar\": \"اختيار مستوى\", \"ja\": \"レベル選択\" }, \"putongmoshi\": { \"name\": \"putongmoshi\", \"zh-CN\": \"普通模式\", \"zh-TW\": \"普通模式\", \"en\": \"Normal mode\", \"ru\": \"Обычная модель\", \"ar\": \"الوضع العام\", \"ja\": \"通常モード\" }, \"tiaozhanmoshi\": { \"name\": \"tiaozhanmoshi\", \"zh-CN\": \"挑战模式\", \"zh-TW\": \"挑戰模式\", \"en\": \"Challenge Mode\", \"ru\": \"Модель вызова\", \"ar\": \"وضع التحدي\", \"ja\": \"チャレンジモード\" }, \"exitgame\": { \"name\": \"exitgame\", \"zh-CN\": \"退出游戏\", \"zh-TW\": \"退出遊戲\", \"en\": \"Exit the game\", \"ru\": \"Выйти из игры\", \"ar\": \"الخروج من اللعبة\", \"ja\": \"ゲームを終了する\" }, \"exit\": { \"name\": \"exit\", \"zh-CN\": \"退出\", \"zh-TW\": \"退出\", \"en\": \"exit\", \"ru\": \"Выход\", \"ar\": \"سحب\", \"ja\": \"終了\" }, \"chongwan\": { \"name\": \"chongwan\", \"zh-CN\": \"重玩\", \"zh-TW\": \"重玩\", \"en\": \"Play again\", \"ru\": \"Повторить игру\", \"ar\": \"إعادة اللعب\", \"ja\": \"遊び直す\" }, \"meirirenwu\": { \"name\": \"meirirenwu\", \"zh-CN\": \"每日任务\", \"zh-TW\": \"每日任務\", \"en\": \"Daily tasks\", \"ru\": \"Ежедневные задания\", \"ar\": \"المهام اليومية\", \"ja\": \"毎日のタスク\" }, \"mubiaorenwu\": { \"name\": \"mubiaorenwu\", \"zh-CN\": \"目标任务\", \"zh-TW\": \"目標任務\", \"en\": \"target task\", \"ru\": \"Задачи\", \"ar\": \"الهدف من المهمة\", \"ja\": \"ターゲットタスク\" }, \"libao\": { \"name\": \"libao\", \"zh-CN\": \"礼包\", \"zh-TW\": \"禮包\", \"en\": \"Gift Pack\", \"ru\": \"Сумка\", \"ar\": \"هدية\", \"ja\": \"プレゼント\" }, \"yaoshi\": { \"name\": \"yaoshi\", \"zh-CN\": \"钥匙\", \"zh-TW\": \"鑰匙\", \"en\": \"key\", \"ru\": \"Ключ.\", \"ar\": \"مفتاح .\", \"ja\": \"かぎ本\" }, \"daibi\": { \"name\": \"daibi\", \"zh-CN\": \"代币\", \"zh-TW\": \"代幣\", \"en\": \"Token\", \"ru\": \"Токены\", \"ar\": \"رمز العملة\", \"ja\": \"トークン\" }, \"pifu\": { \"name\": \"pifu\", \"zh-CN\": \"皮肤\", \"zh-TW\": \"皮膚\", \"en\": \"skin\", \"ru\": \"Кожа\", \"ar\": \"الجلد .\", \"ja\": \"スキン\" }, \"huasuanlibao\": { \"name\": \"huasuanlibao\", \"zh-CN\": \"划算礼包\", \"zh-TW\": \"划算禮包\", \"en\": \"Cost effective gift package\", \"ru\": \"Экономия сумок\", \"ar\": \"صفقة\", \"ja\": \"お得なギフトバッグ\" }, \"chaojilibao\": { \"name\": \"chaojilibao\", \"zh-CN\": \"超级礼包\", \"zh-TW\": \"超級禮包\", \"en\": \"Super Gift Pack\", \"ru\": \"Суперсумка\", \"ar\": \"سوبر حقيبة\", \"ja\": \"スーパーギフト\" }, \"pifulibao\": { \"name\": \"pifulibao\", \"zh-CN\": \"皮肤礼包\", \"zh-TW\": \"皮膚禮包\", \"en\": \"Skin Gift Pack\", \"ru\": \"Кожные сумки\", \"ar\": \"حقيبة جلدية\", \"ja\": \"スキンポーチ\" }, \"jingqingqidai\": { \"name\": \"jingqingqidai\", \"zh-CN\": \"敬请期待\", \"zh-TW\": \"敬請期待\", \"en\": \"Coming soon\", \"ru\": \"С нетерпением жду\", \"ar\": \"يرجى نتطلع إلى\", \"ja\": \"お楽しみに\" }, \"chakanxinwen\": { \"name\": \"chakanxinwen\", \"zh-CN\": \"查看官方新闻\", \"zh-TW\": \"查看官方新聞\", \"en\": \"View official news\", \"ru\": \"Смотреть официальные новости\", \"ar\": \"عرض الأخبار الرسمية\", \"ja\": \"公式ニュースを見る\" }, \"jiarupindao\": { \"name\": \"jiarupindao\", \"zh-CN\": \"加入官方频道\", \"zh-TW\": \"加入官方頻道\", \"en\": \"Join the official channel\", \"ru\": \"Присоединяйтесь к официальному каналу\", \"ar\": \"الانضمام إلى القناة الرسمية\", \"ja\": \"公式チャンネルに参加する\" }, \"guanzhutuite\": { \"name\": \"guanzhutuite\", \"zh-CN\": \"关注官方推特\", \"zh-TW\": \"關注官方推特\", \"en\": \"Follow the official Twitter account\", \"ru\": \"Следите за официальным Твиттером\", \"ar\": \"تويتر الرسمي\", \"ja\": \"公式ツイッターをフォロー\" }, \"guankayouxi\": { \"name\": \"guankayouxi\", \"zh-CN\": \"观看TON的游戏\", \"zh-TW\": \"觀看TON的遊戲\", \"en\": \"Watch TON's games\", \"ru\": \"Смотреть игру TON\", \"ar\": \"مشاهدة لعبة تون\", \"ja\": \"TONのゲームを見る\" }, \"tongguan10\": { \"name\": \"tongguan10\", \"zh-CN\": \"通关10次游戏关卡\", \"zh-TW\": \"通關10次遊戲關卡\", \"en\": \"Complete 10 game levels\", \"ru\": \"Скачать игру 10 раз\", \"ar\": \"لعبة 10 مستويات التخليص الجمركي\", \"ja\": \"ゲームステージを10回クリアする\" }, \"tongguan20\": { \"name\": \"tongguan20\", \"zh-CN\": \"通关20次游戏关卡\", \"zh-TW\": \"通關20次遊戲關卡\", \"en\": \"Complete 20 game levels\", \"ru\": \"Прохождение 20 игр.\", \"ar\": \"إزالة 20 مستويات اللعبة\", \"ja\": \"ゲームステージを20回クリアする\" }, \"leijitili100\": { \"name\": \"leijitili100\", \"zh-CN\": \"累计使用100体力\", \"zh-TW\": \"累計使用100體力\", \"en\": \"Accumulated use of 100 stamina\", \"ru\": \"Используйте 100 физических сил.\", \"ar\": \"استخدام القوة المتراكمة 100\", \"ja\": \"累計100体力使用\" }, \"leijitili200\": { \"name\": \"leijitili200\", \"zh-CN\": \"累计使用200体力\", \"zh-TW\": \"累計使用200體力\", \"en\": \"Accumulated use of 200 stamina\", \"ru\": \"Используйте 200 физических сил.\", \"ar\": \"استخدام القوة البدنية المتراكمة 200\", \"ja\": \"累計200体力使用\" }, \"leijiyichu20\": { \"name\": \"leijiyichu20\", \"zh-CN\": \"累计使用20次移除道具\", \"zh-TW\": \"累計使用20次移除道具\", \"en\": \"Accumulated use of 20 times to remove props\", \"ru\": \"Всего было использовано 20 удалений.\", \"ar\": \"استخدام 20 إزالة الدعائم\", \"ja\": \"削除アイテムを累計20回使用\" }, \"fenxiangtips\": { \"name\": \"fenxiangtips\", \"zh-CN\": \"分享邀请朋友共享链接并获得奖励\", \"zh-TW\": \"分享邀請朋友共用連結並獲得獎勵\", \"en\": \"Share Inviting Friends to Share Links and Get Rewards\", \"ru\": \"Поделиться Приглашение друзей Поделиться ссылками и получить награду\", \"ar\": \"دعوة الأصدقاء للمشاركة في الروابط والحصول على مكافآت\", \"ja\": \"友人を招待してリンクを共有し、奨励金を得る\" }, \"leijiyaoqing\": { \"name\": \"leijiyaoqing\", \"zh-CN\": \"累计邀请\", \"zh-TW\": \"累計邀請\", \"en\": \"Accumulated invitations\", \"ru\": \"Совокупные приглашения\", \"ar\": \"دعوة تراكمية\", \"ja\": \"累計招待\" }, \"shouyaozhemingdan\": { \"name\": \"shouyaozhemingdan\", \"zh-CN\": \"受邀者名单\", \"zh-TW\": \"受邀者名單\", \"en\": \"List of invitees\", \"ru\": \"Список приглашенных\", \"ar\": \"قائمة المدعوين\", \"ja\": \"招待者リスト\" }, \"chakanquanbu\": { \"name\": \"chakanquanbu\", \"zh-CN\": \"查看全部\", \"zh-TW\": \"查看全部\", \"en\": \"ALL\", \"ru\": \"Смотреть все\", \"ar\": \"عرض جميع\", \"ja\": \"すべて表示\" }, \"lijiyaoqing\": { \"name\": \"lijiyaoqing\", \"zh-CN\": \"立即邀请\", \"zh-TW\": \"立即邀請\", \"en\": \"Invite Now\", \"ru\": \"Немедленное приглашение\", \"ar\": \"دعوة فورية\", \"ja\": \"今すぐ招待\" }, \"kelingqv\": { \"name\": \"kelingqv\", \"zh-CN\": \"可领取\", \"zh-TW\": \"可領取\", \"en\": \"Can be claimed\", \"ru\": \"Можно получить\", \"ar\": \"الحصول على\", \"ja\": \"受領可能\" }, \"yilingqv\": { \"name\": \"yilingqv\", \"zh-CN\": \"已领取\", \"zh-TW\": \"已領取\", \"en\": \"Received already\", \"ru\": \"Получено\", \"ar\": \"تلقى\", \"ja\": \"受領済\" }, \"zanwugengduo\": { \"name\": \"zanwugengduo\", \"zh-CN\": \"暂无更多\", \"zh-TW\": \"暫無更多\", \"en\": \"No more available at the moment\", \"ru\": \"Больше нет\", \"ar\": \"لا أكثر\", \"ja\": \"これ以上はありません\" }, \"yinyue\": { \"name\": \"yinyue\", \"zh-CN\": \"音乐\", \"zh-TW\": \"音樂\", \"en\": \"music\", \"ru\": \"Музыка\", \"ar\": \"موسيقي .\", \"ja\": \"音楽\" }, \"yinxiao\": { \"name\": \"yinxiao\", \"zh-CN\": \"音效\", \"zh-TW\": \"音效\", \"en\": \"sound effects\", \"ru\": \"Звуковые эффекты\", \"ar\": \"المؤثرات الصوتية\", \"ja\": \"サウンドエフェクト\" }, \"youxishezhi\": { \"name\": \"youxishezhi\", \"zh-CN\": \"游戏设置\", \"zh-TW\": \"遊戲設定\", \"en\": \"GAME SETTINGS\", \"ru\": \"Настройки игры\", \"ar\": \"إعدادات اللعبة\", \"ja\": \"ゲーム設定\" }, \"yuyanqiehuan\": { \"name\": \"yuyanqiehuan\", \"zh-CN\": \"语言切换\", \"zh-TW\": \"語言切換\", \"en\": \"Language switching\", \"ru\": \"Переключение языка\", \"ar\": \"لغة التبديل\", \"ja\": \"言語切り替え\" },\n    \"CH_J\": {\n        \"name\": \"CH_J\",\n        \"zh-CN\": \"中文简体\",\n        \"zh-TW\": \"中文简体\",\n        \"en\": \"中文简体\",\n        \"ru\": \"中文简体\",\n        \"ar\": \"中文简体\",\n        \"ja\": \"中文简体\"\n    },\n    \"CH_F\": {\n        \"name\": \"CH_F\",\n        \"zh-CN\": \"中文繁體\",\n        \"zh-TW\": \"中文繁體\",\n        \"en\": \"中文繁體\",\n        \"ru\": \"中文繁體\",\n        \"ar\": \"中文繁體\",\n        \"ja\": \"中文繁體\"\n    },\n    \"EN\": {\n        \"name\": \"EN\",\n        \"zh-CN\": \"English\",\n        \"zh-TW\": \"English\",\n        \"en\": \"English\",\n        \"ru\": \"English\",\n        \"ar\": \"English\",\n        \"ja\": \"English\"\n    },\n    \"fenxiang\": {\n        \"name\": \"fenxiang\", \"zh-CN\": \"分享\", \"zh-TW\": \"分享\", \"en\": \"share\", \"ru\": \"Поделиться\", \"ar\": \"شارك\", \"ja\": \"分かち合う\"\n    }, \"xiayiguan\": { \"name\": \"xiayiguan\", \"zh-CN\": \"下一关\", \"zh-TW\": \"下一關\", \"en\": \"Next level\", \"ru\": \"Следующий уровень\", \"ar\": \"المستوى التالي\", \"ja\": \"次の関門\" }, \"zaiwanyici\": { \"name\": \"zaiwanyici\", \"zh-CN\": \"再玩一次\", \"zh-TW\": \"再玩一次\", \"en\": \"play again\", \"ru\": \"Еще раз.\", \"ar\": \"اللعب مرة أخرى\", \"ja\": \"もう一度遊んで\" }\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\nimport AudioManager from \"../manager/AudioManager\";\nimport DataManager, { CLEVEL_Data, LEVEL_DATA } from \"../manager/DataManager\";\nimport EventManager, { EventType } from \"../manager/EventManager\";\nimport PoolManager from \"../manager/PoolManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport SpriteManager from \"../manager/SpriteManager\";\nimport ToastManager from \"../manager/ToastManager\";\nimport { StaticInstance } from \"../StaticInstance\";\nimport BaseItem from \"./BaseItem\";\nimport BaseLanguageLayer from \"./BaseLanguageLayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n\n/**普通关卡数据 */\ninterface ILevelData {\n    star: number//完成星级，0代表已开启，-1代表未开启\n}\nenum PanelType {\n    Putong = 1,\n    Tiaozhan,\n}\n\n/**普通关卡 */\nclass LevelItemPuTong extends BaseItem {\n    levelLabel: cc.Label = null;\n    sprite: cc.Sprite = null;\n    nowData: any = null;\n    unLock: cc.Node = null;\n    init(): void {\n        this.levelLabel = this.node.getChildByName('label').getComponent(cc.Label);\n        this.unLock = this.node.getChildByName(\"unlock\");\n        this.sprite = this.node.getComponent(cc.Sprite);\n        this.onTouch(this.node, this.onTouchClick, this);\n    }\n    setData(data: any): void {\n        this.nowData = data;\n        this.levelLabel.string = data.level;\n        if (this.nowData.level < DataManager.instance.clevelMax) {//已完成\n            this.sprite.spriteFrame = SpriteManager.custemIcon[1];\n            this.unLock.active = false;\n        } else if (this.nowData.level == DataManager.instance.clevelMax) {//已开启\n            this.sprite.spriteFrame = SpriteManager.custemIcon[0];\n            this.unLock.active = false;\n        } else {//未解锁\n            this.sprite.spriteFrame = SpriteManager.custemIcon[0];\n            this.unLock.active = true;\n        }\n    }\n    private onTouchClick() {\n        if (this.nowData.level > DataManager.instance.clevelMax) {\n            ToastManager.instance.show('关卡未解锁，请继续努力', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n            return;\n        }\n        EventManager.instance.emit(EventType.GOTO_LEVEL, PanelType.Putong, this.nowData.level)\n    }\n}\n/**挑战关卡 */\nclass LevelItemTiaoZhan extends BaseItem {\n    levelLabel: cc.Label = null;\n    sprite: cc.Sprite = null;\n    nowData: any = null;\n    unLock: cc.Node = null;\n    init(): void {\n        this.levelLabel = this.node.getChildByName('label').getComponent(cc.Label);\n        this.unLock = this.node.getChildByName('unlock');\n        this.sprite = this.node.getComponent(cc.Sprite);\n        this.onTouch(this.node, this.onTouchClick, this);\n    }\n    setData(data: any): void {\n        this.nowData = data;\n        this.levelLabel.string = data.level;\n        if (this.nowData.level < DataManager.instance.levelMax) {//已完成\n            this.sprite.spriteFrame = SpriteManager.custemTZIcon[this.nowData.star + 1];\n            this.unLock.active = false;\n        } else if (this.nowData.level == DataManager.instance.levelMax) {//已开启\n            this.sprite.spriteFrame = SpriteManager.custemTZIcon[1];\n            this.unLock.active = false;\n        } else {//未解锁\n            this.sprite.spriteFrame = SpriteManager.custemTZIcon[0];\n            this.unLock.active = true;\n        }\n    }\n    private onTouchClick() {\n        if (this.nowData.level > DataManager.instance.levelMax) {\n            ToastManager.instance.show('关卡未解锁，请继续努力', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n            return;\n        }\n        EventManager.instance.emit(EventType.GOTO_LEVEL, PanelType.Tiaozhan, this.nowData.level);\n    }\n}\n\n@ccclass\nexport default class LevelSelectLayer extends BaseLanguageLayer {\n    panel: cc.Node = null;\n    btnClose: cc.Node = null;\n    levelItemPuTong: cc.Node = null;\n    levelItemTiaoZhan: cc.Node = null;\n    content: cc.Node = null;\n    btnPuTong: cc.Node = null;\n    btnTiaoZhan: cc.Node = null;\n    labelPuTong: cc.Node = null;\n    labelTiaoZhan: cc.Node = null;\n    panelType: PanelType = null;\n    mode: cc.Sprite = null;\n\n    onLoad() {\n        super.onLoad()\n        this.panel = cc.find('style/panel', this.node);\n        this.btnClose = cc.find('close', this.panel);\n        this.levelItemPuTong = cc.find('levelItemPuTong', this.node);\n        this.levelItemTiaoZhan = cc.find('levelItemTiaoZhan', this.node);\n        this.mode = cc.find('moshi', this.panel).getComponent(cc.Sprite);\n        this.btnPuTong = cc.find('moshi/btnputong', this.panel);\n        this.btnTiaoZhan = cc.find('moshi/btntiaozhan', this.panel);\n        this.labelPuTong = cc.find('moshi/label1', this.panel);\n        this.labelTiaoZhan = cc.find('moshi/label2', this.panel);\n        this.content = cc.find('content', this.panel);\n        this.onTouch(this.btnClose, this.onCloseClick, this);\n        this.onTouch(this.btnPuTong, this.onPuTongClick, this);\n        this.onTouch(this.btnTiaoZhan, this.onTiaoZhanClick, this);\n        EventManager.instance.on(EventType.GOTO_LEVEL, this.gotoLevel, this);\n    }\n    show(): void {\n        super.show();\n        this.initPanel();\n    }\n    initPanel() {\n        if (this.panelType == null) {\n            this.panelType = PanelType.Putong\n        }\n        if (this.panelType == PanelType.Putong) {\n            this.labelPuTong.active = true;\n            this.labelTiaoZhan.active = false;\n            this.mode.spriteFrame = SpriteManager.ModelSprite[0];\n            this.removeItem();\n            this.CreateListItem(this.content, this.levelItemPuTong, CLEVEL_Data, LevelItemPuTong)\n        } else {\n            this.labelPuTong.active = false;\n            this.labelTiaoZhan.active = true;\n            this.mode.spriteFrame = SpriteManager.ModelSprite[1];\n            this.removeItem();\n            this.CreateListItem(this.content, this.levelItemTiaoZhan, DataManager.instance.levelData, LevelItemTiaoZhan)\n        }\n    }\n    onCloseClick() {\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEVEL_SELECT, false)\n    }\n    /**点击普通模式 */\n    onPuTongClick() {\n        if (this.panelType == PanelType.Putong) {\n            return;\n        }\n        this.panelType = PanelType.Putong;\n        this.initPanel();\n    }\n    /**点击挑战模式 */\n    onTiaoZhanClick() {\n        if (this.panelType == PanelType.Tiaozhan) {\n            return;\n        }\n        this.panelType = PanelType.Tiaozhan;\n        this.initPanel();\n    }\n    /**进入游戏 */\n    gotoLevel(type, level) {\n        if (DataManager.instance.power <= 0) {\n            ToastManager.instance.show('能量已用完, 请先补充能量', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n            return\n        }\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEVEL_SELECT, false)\n        let layer = ENUM_UI_TYPE.MAIN_LEVEL\n        if (type == PanelType.Putong) {\n            DataManager.instance.mode = ENUM_GAME_MODE.LEVEL\n        } else {\n            layer = ENUM_UI_TYPE.MAIN;\n            DataManager.instance.mode = ENUM_GAME_MODE.TIMER\n        }\n        DataManager.instance.power -= 1\n        DataManager.instance.save()\n        console.log(layer, \"-------------------\")\n        StaticInstance.transitionsManager.play(null, layer, () => {\n            StaticInstance.gameManager.onGameStart()\n        })\n    }\n    onEnable() {\n        this.zoomIn(this.panel)\n        SdkManager.instance.toggleBannerAd(true)\n    }\n\n    onDisable() {\n        SdkManager.instance.toggleBannerAd(false)\n    }\n    private removeItem() {\n        let child = this.content.children;\n        for (let i = child.length - 1; i >= 0; i--) {\n            PoolManager.instance.putNode(child[i]);\n        }\n    }\n\n    start() {\n\n    }\n\n    // update (dt) {}\n}\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\nimport { Languages } from \"../Languages\";\nimport AudioManager from \"../manager/AudioManager\";\nimport DataManager from \"../manager/DataManager\";\nimport EventManager, { EventType } from \"../manager/EventManager\";\nimport SpriteManager from \"../manager/SpriteManager\";\nimport { StaticInstance } from \"../StaticInstance\";\nimport BaseLanguageLayer from \"./BaseLanguageLayer\";\nimport BaseLayer from \"./Baselayer\";\n\nimport {TonConnectUi , type Transaction} from '../cocos-telegram-miniapps/telegram-ui';\nimport { WebTon } from \"../cocos-telegram-miniapps/webton\";\n\n// import * as TonWeb from \"tonweb\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LevelUILayer extends BaseLanguageLayer {\n    btnPause: cc.Node = null\n    btnLevel: cc.Node = null;\n    btnSkills: cc.Node = null;\n    btnSuoduan: cc.Node = null;\n    btnTouming: cc.Node = null;\n    btnYichu: cc.Node = null;\n    btnDown: cc.Node = null;\n    btnZhuanQv: cc.Node = null;\n    btnRenwu: cc.Node = null;\n    btnShop: cc.Node = null;\n    btnShare: cc.Node = null;\n    btnWallet: cc.Node = null;\n    btnSend: cc.Node = null;\n    connectLabel: cc.Label = null;\n\n    onLoad() {\n   \n        super.onLoad();\n        this.btnPause = cc.find('btn_pause', this.node)\n        this.btnLevel = cc.find('btn_level', this.node)\n        this.btnSkills = cc.find('skills', this.node);\n        this.btnSuoduan = cc.find('btn_shuffle', this.btnSkills);\n        this.btnTouming = cc.find('btn_opacity', this.btnSkills);\n        this.btnYichu = cc.find('btn_delete', this.btnSkills);\n        this.btnDown = cc.find('btndown', this.node);\n        this.btnZhuanQv = cc.find('btnzhuanqv', this.btnDown);\n        this.btnRenwu = cc.find('btnrenwu', this.btnDown);\n        this.btnShop = cc.find('btnshop', this.btnDown);\n        this.btnShare = cc.find('btnshare', this.btnDown);\n        this.btnWallet = cc.find('btn_wallet', this.node);\n        this.btnSend = cc.find('btn_send', this.node);\n        this.connectLabel = cc.find('btn_wallet/connect', this.node);\n        this.onTouch(this.btnPause, this.onPauseClick, this);\n        this.onTouch(this.btnLevel, this.onLevelClick, this);\n        this.onTouch(this.btnSuoduan, this.onSuoDuanClick, this);\n        this.onTouch(this.btnTouming, this.onTouMingClick, this);\n        this.onTouch(this.btnYichu, this.onYiChuClick, this);\n        this.onTouch(this.btnRenwu, this.onRenWuClick, this);\n        this.onTouch(this.btnShop, this.onShopClick, this);\n        this.onTouch(this.btnShare, this.onShareClick, this);\n        this.onTouch(this.btnZhuanQv, this.onZhuanQvClick, this);\n        this.onTouch(this.btnWallet, this.openWallet, this);\n        this.onTouch(this.btnSend, this.sendTon, this);\n        EventManager.instance.on(EventType.OPEN_LEVEL_BTN, this.openLevelBtn, this);\n        EventManager.instance.on(EventType.CONNECT_COMPLETE, this.subscribe, this);\n\n    }\n\n\n\n\n  private async sendTon() {\n   await  TonConnectUi.Instance.sendTransaction({\n        amount: \"100000\",\n        payload: await WebTon.Instance.createMessagePayload(\"hello\"),\n        callBack: (result) => {\n            console.log('sendTon',result);\n        }\n    });\n\n  }\n    private subscribe(success: boolean) {\n         console.log('subscribe success');\n         this.updateConnect();\n    }\n    private async setWalletUi(address:string){\n        console.log('setWalletUi',address);\n\n        if(this.connectLabel){\n          const label =  this.connectLabel.getComponent(cc.Label); ;\n            if(label){\n                if(address==\"Connect\"){\n                label.string = address;\n                }else{\n                    const longAddress = await WebTon.Instance.parseAddress(address);\n                  \n                    label.string =  longAddress.length>10?longAddress.substr(0,10)+'...':longAddress;\n                }\n        }\n    }\n    }\n\n     private async  openWallet() {\n\n       await TonConnectUi.Instance.openModal();\n\n     }\n    start() {\n        this.btnSkills.active = false;\n    }\n    private openLevelBtn() {\n        this.btnSkills.active = true;\n    }\n\n    public updateConnect() {\n        console.log('updateConnect');\n        debugger\n        if (TonConnectUi.Instance.isConnected()) {\n            const address = TonConnectUi.Instance.account().address;\n            const add=TonConnectUi.Instance.parseRaw(address);\n\n            this.setWalletUi(add);\n                \n        } else {\n            this.setWalletUi(\"Connect\");\n        }\n    }\n    onPauseClick() {\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\n    }\n    onLevelClick() {\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEVEL_SELECT)\n    }\n    onSuoDuanClick() {//缩短\n\n    }\n    onTouMingClick() {//透明\n\n    }\n    onYiChuClick() {//移除\n\n    }\n    onZhuanQvClick() {//赚取\n\n    }\n    onRenWuClick() {//任务\n        if (StaticInstance.uiManager.isActive(ENUM_UI_TYPE.TASK)) {\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASK, false)\n        } else {\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASK, true)\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHARE, false)\n        }\n        this.updateBtnState();\n    }\n    onShopClick() {//商店\n        if (StaticInstance.uiManager.isActive(ENUM_UI_TYPE.SHOP)) {\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\n        } else {\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, true)\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASK, false)\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHARE, false)\n        }\n        this.updateBtnState();\n    }\n    onShareClick() {//邀请\n        if (StaticInstance.uiManager.isActive(ENUM_UI_TYPE.SHARE)) {\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHARE, false)\n        } else {\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHARE, true)\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASK, false)\n        }\n        this.updateBtnState();\n    }\n\n    private updateBtnState() {\n        let index = StaticInstance.uiManager.isActive(ENUM_UI_TYPE.TASK) ? 1 : 0;\n        this.btnRenwu.getComponent(cc.Sprite).spriteFrame = SpriteManager.taskIcon[index];\n        index = StaticInstance.uiManager.isActive(ENUM_UI_TYPE.SHOP) ? 1 : 0;\n        this.btnShop.getComponent(cc.Sprite).spriteFrame = SpriteManager.shopIcon[index];\n        index = StaticInstance.uiManager.isActive(ENUM_UI_TYPE.SHARE) ? 1 : 0;\n        this.btnShare.getComponent(cc.Sprite).spriteFrame = SpriteManager.shareIcon[index];\n    }\n\n    // update (dt) {}\n}\n","// Created by carolsail \n\nimport { ENUM_UI_TYPE } from \"../Enum\";\nimport DataManager from \"../manager/DataManager\";\nimport BaseLayer from \"./Baselayer\";\nimport { StaticInstance } from \"../StaticInstance\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoadingLayer extends BaseLayer {\n\n    @property(cc.Sprite)\n    loadfill: cc.Sprite = null\n\n    onEnable() { }\n\n    onDisable() { }\n\n    update(dt: number) {\n        if (this.loadfill && this.node.active) {\n            this.loadfill.fillRange = DataManager.instance.loadingRate\n            if (DataManager.instance.loadingRate >= 1) {\n                // menu已加载完毕\n                // if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU)){\n                this.hide()\n                // }\n            }\n        }\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport ToastManager from \"../manager/ToastManager\";\nimport DataManager, { CLEVEL_Data } from \"../manager/DataManager\";\nimport HeaderLayer from \"./HeaderLayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoseLayer extends HeaderLayer {\n\n    panel: cc.Node = null\n    btnRestart: cc.Node = null\n    btnNext: cc.Node = null\n    btnClose: cc.Node = null\n\n    onLoad() {\n        super.onLoad()\n        this.panel = cc.find('style/panel', this.node)\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\n        this.btnRestart.on('click', this.onRestartClick, this)\n        this.btnNext.on('click', this.onNextClick, this)\n        this.btnClose = cc.find('btn_close', this.panel)\n        this.btnClose.on('click', this.onCloseClick, this)\n    }\n\n    onDestroy() {\n        this.btnRestart.off('click', this.onRestartClick, this)\n        this.btnNext.off('click', this.onNextClick, this)\n        this.btnClose.off('click', this.onCloseClick, this)\n    }\n\n    onEnable() {\n        this.zoomIn(this.panel)\n        SdkManager.instance.toggleBannerAd(true)\n        StaticInstance.uiManager.setMainTimer(false)\n        this.rendorKeys()\n        this.rendorPower()\n        this.rendorPowerTimer()\n    }\n\n    onDisable() {\n        SdkManager.instance.toggleBannerAd(false)\n    }\n\n    onRestartClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        if (DataManager.instance.power <= 0) {\n            ToastManager.instance.show('能量已用完, 请先补充能量', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n            return\n        }\n        DataManager.instance.power -= 1\n        DataManager.instance.save()\n        StaticInstance.transitionsManager.play(ENUM_UI_TYPE.LOSE, null, () => {\n            StaticInstance.gameManager.onGameLevelStart()\n        })\n    }\n\n    onNextClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        SdkManager.instance.showVideoAd((msg: string) => {\n            if (!SdkManager.instance.getPlatform()) {\n                ToastManager.instance.show(msg, { gravity: 'BOTTOM', bg_color: cc.color(102, 202, 28, 255) })\n            }\n            let clevel = DataManager.instance.clevel + 1\n            clevel = Math.min(clevel, CLEVEL_Data.length)\n            DataManager.instance.clevel = clevel\n            if (clevel > DataManager.instance.clevelMax) DataManager.instance.clevelMax = clevel\n            DataManager.instance.save()\n            StaticInstance.transitionsManager.play(ENUM_UI_TYPE.LOSE, null, () => {\n                StaticInstance.gameManager.onGameLevelStart()\n            })\n        }, (msg: string) => {\n            ToastManager.instance.show(msg, { gravity: 'BOTTOM', bg_color: cc.color(226, 69, 109, 255) })\n        })\n    }\n\n    onCloseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN_LEVEL, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\nimport AudioManager from \"../manager/AudioManager\";\nimport DataManager from \"../manager/DataManager\";\nimport EventManager, { EventType } from \"../manager/EventManager\";\nimport { StaticInstance } from \"../StaticInstance\";\nimport { formatSeconds } from \"../Utils\";\nimport BaseLayer from \"./Baselayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class MainLayer extends BaseLayer {\n\n    // btnPause: cc.Node = null\n    levelUpNode: cc.Node = null\n    timerNum: cc.Node = null\n    skills: cc.Node\n    skillTip: cc.Node\n\n\n    show(): void {\n        super.show()\n        EventManager.instance.emit(EventType.OPEN_LEVEL_BTN)\n    }\n    onLoad() {\n        // this.btnPause = cc.find('btn_pause', this.node)\n        // this.btnPause.on('click', this.onPauseClick, this)\n        this.levelUpNode = cc.find('level_up', this.node)\n        this.timerNum = cc.find('bar_seconds/nums', this.node)\n        this.skills = cc.find('skills', this.node)\n        this.skills.children.forEach((node, index) => {\n            node.on('click', () => this.onSkillClick(index), this)\n        })\n        this.skillTip = cc.find('skill_tip', this.node)\n    }\n\n    onDestroy() {\n        // this.btnPause.off('click', this.onPauseClick, this)\n    }\n\n    onEnable() { }\n\n    onDisable() { }\n\n    onPauseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\n    }\n\n    setLevelUpNotice() {\n        this.levelUpNode.stopAllActions()\n        this.levelUpNode.x = 600\n        const act1 = cc.moveTo(0.5, 0, this.levelUpNode.y)\n        const act2 = cc.delayTime(1)\n        const act3 = cc.moveTo(0.5, -600, this.levelUpNode.y)\n        const act = cc.sequence(act1, act2, act3)\n        cc.tween(this.levelUpNode).then(act).start()\n    }\n\n    setTimerRendor() {\n        const label = this.timerNum.getComponent(cc.Label)\n        label.string = formatSeconds(`${DataManager.instance.seconds}`, 'h:i:s')\n    }\n\n    onTimerStart() {\n        const label = this.timerNum.getComponent(cc.Label)\n        this.unscheduleAllCallbacks()\n        this.schedule(() => {\n            DataManager.instance.seconds++\n            label.string = formatSeconds(`${DataManager.instance.seconds}`, 'h:i:s')\n        }, 1)\n    }\n\n    onTimerStop() {\n        this.unscheduleAllCallbacks()\n    }\n\n    onSkillClick(index: number) {\n        if (DataManager.instance.isSkilling) return\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        DataManager.instance.skillIndex = index\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SKILL_SUBMIT)\n        StaticInstance.uiManager.setMainTimer(false)\n    }\n\n    setSkillTip() {\n        this.skillTip.active = DataManager.instance.isSkilling\n        if (DataManager.instance.isSkilling) {\n            const tips = cc.find('content/tips', this.skillTip)\n            tips.children.forEach((tip, index) => {\n                tip.active = DataManager.instance.skillIndex == index\n            })\n            const btnClose = cc.find('content/btn_close', this.skillTip)\n            if (!btnClose.hasEventListener('click')) {\n                btnClose.on('click', () => {\n                    AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n                    this.skillTip.active = false\n                    DataManager.instance.skillIndex = -1\n                    DataManager.instance.isSkilling = false\n                }, this)\n            }\n        }\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\nimport AudioManager from \"../manager/AudioManager\";\nimport DataManager, { CLEVEL_Data } from \"../manager/DataManager\";\nimport EventManager, { EventType } from \"../manager/EventManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport ToastManager from \"../manager/ToastManager\";\nimport { StaticInstance } from \"../StaticInstance\";\nimport BaseLayer from \"./Baselayer\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class MainLevelLayer extends BaseLayer {\n\n    // btnPause: cc.Node = null\n    // btnPass: cc.Node = null\n    crashNum: cc.Node = null\n    tip: cc.Node = null\n\n    show(): void {\n        super.show();\n        EventManager.instance.emit(EventType.OPEN_LEVEL_BTN)\n    }\n\n    onLoad() {\n        // this.btnPause = cc.find('btn_pause', this.node)\n        // this.btnPause.on('click', this.onPauseClick, this)\n        // this.btnPass = cc.find('btn_pass', this.node)\n        // this.btnPass.on('click', this.onPassClick, this)\n        this.crashNum = cc.find('bar_crash/nums', this.node)\n        this.tip = cc.find('bar_crash/tip', this.node)\n    }\n\n    onDestroy() {\n        // this.btnPause.off('click', this.onPauseClick, this)\n        // this.btnPass.off('click', this.onPassClick, this)\n    }\n\n    onEnable() { }\n\n    onDisable() { }\n\n    setCrashRendor() {\n        let nums = DataManager.instance.crashTotal - DataManager.instance.crashCurrent\n        nums = Math.max(0, nums)\n        this.crashNum.getComponent(cc.Label).string = `${nums}`\n    }\n\n    setLevelTip() {\n        let tip = '请将红色小车挪出车库'\n        if (DataManager.instance.carNum > 1) tip = '请将所有车辆挪出车库'\n        this.tip.getComponent(cc.Label).string = `${tip}`\n    }\n\n    onPauseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT_LEVEL)\n    }\n\n    onPassClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        SdkManager.instance.showVideoAd((msg: string) => {\n            if (!SdkManager.instance.getPlatform()) {\n                ToastManager.instance.show(msg, { gravity: 'BOTTOM', bg_color: cc.color(102, 202, 28, 255) })\n            }\n            if (DataManager.instance.status == ENUM_GAME_STATUS.RUNING) {\n                DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\n                let clevel = DataManager.instance.clevel + 1\n                clevel = Math.min(clevel, CLEVEL_Data.length)\n                DataManager.instance.clevel = clevel\n                if (clevel > DataManager.instance.clevelMax) DataManager.instance.clevelMax = clevel\n                DataManager.instance.save()\n                StaticInstance.transitionsManager.play(null, null, () => {\n                    StaticInstance.gameManager.onGameLevelStart()\n                })\n            }\n        }, (msg: string) => {\n            ToastManager.instance.show(msg, { gravity: 'BOTTOM', bg_color: cc.color(226, 69, 109, 255) })\n        })\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport ToastManager from \"../manager/ToastManager\";\nimport HeaderLayer from \"./HeaderLayer\";\nimport DataManager from \"../manager/DataManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class MenuLayer extends HeaderLayer {\n\n    btnStartTimer: cc.Node = null\n    btnStartLevel: cc.Node = null\n    btnSetting: cc.Node = null\n    btnGames: cc.Node = null\n    btnShare: cc.Node = null\n    btnRank: cc.Node = null\n\n    onLoad() {\n        super.onLoad()\n        this.btnStartTimer = cc.find('buttons/btn_start_timer', this.node)\n        this.btnStartLevel = cc.find('buttons/btn_start_level', this.node)\n        this.btnSetting = cc.find('right/btn_setting', this.node)\n        this.btnShare = cc.find('right/btn_share', this.node)\n        this.btnGames = cc.find('btn_more', this.node)\n        this.btnStartTimer.on('click', this.onStartTimerClick, this)\n        this.btnStartLevel.on('click', this.onStartLevelClick, this)\n        this.btnSetting.on('click', this.onSettingClick, this)\n        this.btnGames.on('click', this.onGamesClick, this)\n        this.btnShare.on('click', this.onShareClick, this)\n        this.btnRank = cc.find('buttons/btn_rank', this.node)\n        this.btnRank.on('click', this.onRankClick, this)\n    }\n\n    onDestroy() {\n        this.btnStartTimer.off('click', this.onStartTimerClick, this)\n        this.btnStartLevel.off('click', this.onStartLevelClick, this)\n        this.btnSetting.off('click', this.onSettingClick, this)\n        this.btnGames.off('click', this.onGamesClick, this)\n        this.btnShare.off('click', this.onShareClick, this)\n        this.btnRank.off('click', this.onRankClick, this)\n    }\n\n    onEnable() {\n        this.rendorKeys()\n        this.rendorPower()\n        this.rendorPowerTimer()\n    }\n\n    onDisable() { }\n\n    onStartTimerClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        if (DataManager.instance.power <= 0) {\n            ToastManager.instance.show('能量已用完, 请先补充能量', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n            return\n        }\n        DataManager.instance.mode = ENUM_GAME_MODE.TIMER\n        DataManager.instance.power -= 1\n        DataManager.instance.save()\n        StaticInstance.transitionsManager.play(ENUM_UI_TYPE.MENU, ENUM_UI_TYPE.MAIN, () => {\n            StaticInstance.gameManager.onGameStart()\n        })\n    }\n\n    onStartLevelClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        if (DataManager.instance.power <= 0) {\n            ToastManager.instance.show('能量已用完, 请先补充能量', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n            return\n        }\n        DataManager.instance.mode = ENUM_GAME_MODE.LEVEL\n        DataManager.instance.power -= 1\n        DataManager.instance.save()\n        StaticInstance.transitionsManager.play(ENUM_UI_TYPE.MENU, ENUM_UI_TYPE.MAIN_LEVEL, () => {\n            StaticInstance.gameManager.onGameLevelStart()\n        })\n    }\n\n    onSettingClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\n    }\n\n    onGamesClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MORE)\n    }\n\n    onShareClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        if (SdkManager.instance.getPlatform()) {\n            SdkManager.instance.activeShare()\n        } else {\n            ToastManager.instance.show('仅支持小游戏平台', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n        }\n    }\n\n    onRankClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.RANK)\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport BaseLayer from \"./Baselayer\";\nimport DataManager from \"../manager/DataManager\";\nimport PoolManager from \"../manager/PoolManager\";\nimport UIScrollControl from \"../plugins/UIScrollControl\";\nimport ResourceManager from \"../manager/ResourceManager\";\nimport SdkManager from \"../manager/SdkManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class MoreLayer extends BaseLayer {\n\n    panel: cc.Node = null\n    btnClose: cc.Node = null\n    scrollNode: cc.Node = null\n    scrollItem: cc.Node = null\n\n    onLoad() {\n        this.panel = cc.find('style/panel', this.node)\n        this.btnClose = cc.find('btn_close', this.panel)\n        this.scrollNode = cc.find('scroll', this.panel)\n        this.scrollItem = PoolManager.instance.getNode('MoreItem')\n        this.btnClose.on('click', this.onCloseClick, this)\n    }\n\n    onDestroy() {\n        this.btnClose.off('click', this.onCloseClick, this)\n    }\n\n    onEnable() {\n        this.zoomIn(this.panel)\n        this.rendor()\n        SdkManager.instance.toggleCustomRowAd(true)\n    }\n\n    onDisable() {\n        SdkManager.instance.toggleCustomRowAd(false)\n    }\n\n    rendor() {\n        const games = DataManager.instance.games\n        let isScrollToTop = false\n        this.scrollNode.getComponent(UIScrollControl).init(this.scrollItem, games.length, cc.size(500, 110), 0, (node: cc.Node, index: number) => {\n            if (!isScrollToTop) {\n                isScrollToTop = true\n                this.scrollNode.getComponent(cc.ScrollView).scrollToTop()\n            }\n            const game = games[index]\n            node.getChildByName('icon').getComponent(cc.Sprite).spriteFrame = ResourceManager.instance.getSprite(`${game.icon}`)\n            node.getChildByName('title').getComponent(cc.Label).string = `${game.title}`\n            if (!node.hasEventListener('click')) {\n                node.on('click', () => { this.onItemClick(game) }, this)\n            } else {\n                node.off('click')\n                node.on('click', () => { this.onItemClick(game) }, this)\n            }\n        }, (scroll: cc.ScrollView) => {\n            scroll.scrollToTop()\n        })\n    }\n\n    onItemClick(item: any) {\n        let url: string = ''\n        if (typeof window['wx'] == 'undefined') {\n            url = item.url\n        } else {\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n            url = item.appid\n        }\n        if (url) SdkManager.instance.turnToApp(url)\n    }\n\n    onCloseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MORE, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport ToastManager from \"../manager/ToastManager\";\nimport DataManager from \"../manager/DataManager\";\nimport { formatSeconds } from \"../Utils\";\nimport HeaderLayer from \"./HeaderLayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class OverLayer extends HeaderLayer {\n\n    panel: cc.Node = null\n    btnRestart: cc.Node = null\n    btnShare: cc.Node = null\n    scoreNode: cc.Node = null\n    noticeNode: cc.Node = null\n    particles: cc.Node = null\n    btnClose: cc.Node = null\n\n    onLoad() {\n        super.onLoad()\n        this.panel = cc.find('style/panel', this.node)\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\n        this.btnRestart.on('click', this.onRestartClick, this)\n        this.btnShare.on('click', this.onShareClick, this)\n        this.scoreNode = cc.find('score', this.panel)\n        this.noticeNode = cc.find('notice', this.panel)\n        this.particles = cc.find('particles', this.panel)\n        this.btnClose = cc.find('btn_close', this.panel)\n        this.btnClose.on('click', this.onCloseClick, this)\n    }\n\n    onDestroy() {\n        this.btnRestart.off('click', this.onRestartClick, this)\n        this.btnShare.off('click', this.onShareClick, this)\n        this.btnClose.off('click', this.onCloseClick, this)\n    }\n\n    onEnable() {\n        this.zoomIn(this.panel)\n        SdkManager.instance.toggleBannerAd(true)\n        StaticInstance.uiManager.setMainTimer(false)\n        this.rendorKeys()\n        this.rendorPower()\n        this.rendorPowerTimer()\n        this.rendorScore()\n    }\n\n    onDisable() {\n        SdkManager.instance.toggleBannerAd(false)\n    }\n\n    rendorScore() {\n        this.scoreNode.getComponent(cc.Label).string = `${formatSeconds(DataManager.instance.seconds, 'h:i:s')}`\n        if (DataManager.instance.seconds < DataManager.instance.secondsRecord) {\n            // 刷新纪录\n            DataManager.instance.secondsRecord = DataManager.instance.seconds\n            DataManager.instance.save()\n            // 计入排行榜\n            SdkManager.instance.setRank(DataManager.instance.secondsRecord)\n            // 特效\n            this.noticeNode.active = true\n            this.particles.children.forEach(node => {\n                node.getComponent(cc.ParticleSystem).resetSystem()\n            })\n        } else {\n            this.noticeNode.active = false\n        }\n    }\n\n    onRestartClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.transitionsManager.play(ENUM_UI_TYPE.OVER, null, () => {\n            StaticInstance.gameManager.onGameStart()\n        })\n    }\n\n    onShareClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        if (SdkManager.instance.getPlatform()) {\n            SdkManager.instance.activeShare()\n        } else {\n            ToastManager.instance.show('仅支持小游戏平台', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n        }\n    }\n\n    onCloseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OVER, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\n    }\n}\n","// Created by carolsail\n\nexport default class PoolManager {\n\n    private static _instance: any = null\n\n    static getInstance<T>(): T {\n        if (this._instance === null) {\n            this._instance = new this()\n        }\n\n        return this._instance\n    }\n\n    static get instance() {\n        return this.getInstance<PoolManager>()\n    }\n\n    private _dictPool: any = {}\n    private _dictPrefab: any = {}\n\n    // 复制节点\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\n        let name = copynode.name;\n        this._dictPrefab[name] = copynode;\n        let node = null;\n        if (this._dictPool.hasOwnProperty(name)) {\n            let pool = this._dictPool[name];\n            if (pool.size() > 0) {\n                node = pool.get();\n            } else {\n                node = cc.instantiate(copynode);\n            }\n        } else {\n\n            let pool = new cc.NodePool();\n            this._dictPool[name] = pool;\n\n            node = cc.instantiate(copynode);\n        }\n        if (parent) {\n            node.parent = parent;\n            node.active = true;\n        }\n        return node;\n    }\n\n    // 从池子取出节点\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\n        let tempPre: any;\n        let name: any;\n        if (typeof prefab === 'string') {\n            tempPre = this._dictPrefab[prefab];\n            name = prefab;\n            if (!tempPre) {\n                console.log(\"Pool invalid prefab name = \", name);\n                return null;\n            }\n        }\n        else {\n            tempPre = prefab;\n            name = prefab.data.name;\n        }\n\n        let node = null;\n        if (this._dictPool.hasOwnProperty(name)) {\n            //已有对应的对象池\n            let pool = this._dictPool[name];\n            if (pool.size() > 0) {\n                node = pool.get();\n            } else {\n                node = cc.instantiate(tempPre);\n            }\n        } else {\n            //没有对应对象池，创建他！\n            let pool = new cc.NodePool();\n            this._dictPool[name] = pool;\n\n            node = cc.instantiate(tempPre);\n        }\n\n        if (parent) {\n            node.parent = parent;\n            node.active = true;\n            if (pos) node.position = pos;\n        }\n        return node;\n    }\n\n    // 节点放进池子\n    public putNode(node: cc.Node | null, isActive = false) {\n        if (!node) {\n            return;\n        }\n\n        //console.log(\"回收信息\",node.name,node)\n        let name = node.name;\n        let pool = null;\n        // node.active = isActive\n        if (this._dictPool.hasOwnProperty(name)) {\n            //已有对应的对象池\n            pool = this._dictPool[name];\n        } else {\n            //没有对应对象池，创建他！\n            pool = new cc.NodePool();\n            this._dictPool[name] = pool;\n        }\n\n        pool.put(node);\n    }\n\n    // 根据名字清池\n    public clearPool(name: string) {\n        if (this._dictPool.hasOwnProperty(name)) {\n            let pool = this._dictPool[name];\n            pool.clear();\n        }\n    }\n\n    // 添加预制体\n    public setPrefab(name: string, prefab: cc.Prefab): void {\n        this._dictPrefab[name] = prefab;\n    }\n\n    // 取预制体\n    public getPrefab(name: string): cc.Prefab {\n        return this._dictPrefab[name];\n    }\n}\n","// Created by carolsail \n\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\nimport BaseLayer from \"./Baselayer\";\nimport AudioManager from \"../manager/AudioManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport { StaticInstance } from './../StaticInstance';\nimport ToastManager from \"../manager/ToastManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class RankLayer extends BaseLayer {\n\n    panel: cc.Node = null\n    btnClose: cc.Node = null\n    btnShare: cc.Node = null\n\n    onLoad() {\n        this.panel = cc.find('style/panel', this.node)\n        this.btnClose = cc.find('btn_close', this.panel)\n        this.btnShare = cc.find('btn_share', this.panel)\n        this.btnClose.on('click', this.onCloseClick, this)\n        this.btnShare.on('click', this.onShareClick, this)\n    }\n\n    onDestroy() {\n        this.btnClose.off('click', this.onCloseClick, this)\n        this.btnShare.off('click', this.onShareClick, this)\n    }\n\n    onEnable() {\n        this.zoomIn(this.panel)\n        // 读取排行榜数据\n        SdkManager.instance.getRank()\n        SdkManager.instance.showInterstitialAd()\n    }\n\n    onDisable() { }\n\n    onCloseClick(e: any) {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.RANK, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\n    }\n\n    onShareClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        if (SdkManager.instance.getPlatform()) {\n            SdkManager.instance.activeShare()\n        } else {\n            ToastManager.instance.show('仅支持小游戏平台', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n        }\n    }\n}\n","// Created by carolsail\nimport DataManager from './DataManager';\nimport PoolManager from './PoolManager';\n\nexport default class ResourceManager {\n\n    public clipMap = {}\n\n    public spriteMap = {}\n\n    public jsonMap = {}\n\n    private static _instance: any = null\n\n    static getInstance<T>(): T {\n        if (this._instance === null) {\n            this._instance = new this()\n        }\n\n        return this._instance\n    }\n\n    static get instance() {\n        return this.getInstance<ResourceManager>()\n    }\n\n    public async loadRes(resource: any, ratio: number = 0) {\n        return new Promise<void>((resolve, reject) => {\n            const rate = DataManager.instance.loadingRate\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\n                // 资源加载进度\n                if (resource.ratio > 0) {\n                    // 保留两位小数\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\n                }\n            }, (err, assets: any) => {\n                if (err) reject && reject()\n                let asset: any\n                if (resource.type == 'audio') {\n                    for (let i = 0; i < assets.length; i++) {\n                        asset = assets[i];\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\n                    }\n                }\n                if (resource.type == 'prefab') {\n                    for (let i = 0; i < assets.length; i++) {\n                        asset = assets[i];\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\n                    }\n                }\n                if (resource.type == 'sprite') {\n                    for (let i = 0; i < assets.length; i++) {\n                        asset = assets[i];\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\n                    }\n                }\n                if (resource.type == 'json') {\n                    for (let i = 0; i < assets.length; i++) {\n                        asset = assets[i];\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\n                    }\n                }\n                resolve && resolve()\n            })\n        })\n    }\n\n    public getClip(name: string) {\n        return this.clipMap[name]\n    }\n\n    public getSprite(name: string) {\n        return this.spriteMap[name]\n    }\n\n    public getJson(name: string) {\n        return this.jsonMap[name];\n    }\n}\n","import AudioManager from \"./AudioManager\";\n\nexport default class SdkManager {\n    public static _instance: SdkManager = null\n\n    public static get instance() {\n        if (null == this._instance) {\n            this._instance = new SdkManager();\n        }\n        return this._instance\n    }\n\n    shareTitle: string = '好玩上头的游戏，你敢接受挑战吗？'\n    shareImg: string = 'https://download.cocos.com/CocosStore/icon/c37196c9605d453798e9592204329c75/c37196c9605d453798e9592204329c75.png'\n    // 激励视频\n    videoId: string = ''\n    private videoAd = null\n    // 插屏\n    interstitialId: string = ''\n    private interstitialAd = null\n    // 横幅\n    bannerId: string = ''\n    private bannerAd = null\n    // 原生格子: 横向（后台90%显示）\n    customRowId: string = ''\n    private customRowAd = null\n    // 原生格子: 纵向（后台90%显示）\n    customColId: string = ''\n    private customColAd = null\n\n    // 获取平台\n    getPlatform() {\n        let platform = null\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\n            platform = window['wx']\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\n            platform = window['tt']\n        }\n        return platform\n    }\n\n    // 主动分享\n    // query: string (eg: key1=val1&key2=val2)\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【主动分享】仅支持小游戏平台!')\n            return\n        }\n        options.title = options.title || this.shareTitle\n        options.imageUrl = options.imageUrl || this.shareImg\n        platform.shareAppMessage(options);\n    }\n\n    // 被动分享\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【被动分享】仅支持小游戏平台!')\n            return\n        }\n        platform.showShareMenu({\n            success: (res: any) => { },\n            fail: (res: any) => { }\n        });\n        options.title = options.title || this.shareTitle\n        options.imageUrl = options.imageUrl || this.shareImg\n        platform.onShareAppMessage(() => {\n            return options\n        });\n    }\n\n    // 获取分享参数\n    getShareQuery(key: string) {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【分享参数获取】仅支持小游戏平台!')\n            return\n        }\n        const options = platform.getLaunchOptionsSync()\n        const query = options.query\n        let data = null\n        if (query && query[key]) {\n            data = query[key]\n        }\n        return data\n    }\n\n    // 跳转\n    turnToApp(appId: string) {\n        if (appId == '') return\n        const platform = this.getPlatform()\n        if (!platform) {\n            this.turnToBrowser(appId)\n            return\n        }\n        platform.navigateToMiniProgram({\n            appId: appId\n        });\n    }\n\n    // 浏览器跳转\n    turnToBrowser(url: string) {\n        window.open(url)\n    }\n\n    // 监听音频中断（微信）\n    initAudioEndListener() {\n        if (typeof window['wx'] === 'undefined') {\n            console.log('【音频中断监听】仅支持微信平台!')\n            return\n        }\n        window['wx'].onAudioInterruptionEnd(() => {\n            console.log('音频中断，恢复播放')\n            AudioManager.instance.playMusic()\n        })\n    }\n\n    // 初始化横幅\n    initBannerAd() {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【流量主横幅初始化】仅支持小游戏平台!')\n            return\n        }\n        if (this.bannerId == '') {\n            console.log('【流量主】请配置横幅广告ID')\n            return\n        }\n        let winSize = platform.getSystemInfoSync();\n        if (this.bannerAd == null) {\n            this.bannerAd = platform.createBannerAd({\n                adUnitId: this.bannerId,\n                adIntervals: 10,\n                style: {\n                    height: winSize.windowHeight - 80,\n                    left: 0,\n                    top: 500,\n                    width: winSize.windowWidth\n                }\n            });\n            this.bannerAd.onResize((res: any) => {\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\n            });\n            this.bannerAd.onError((err: any) => {\n                console.error('【流量主横幅】初始化有误')\n            });\n        }\n    }\n\n    // 横幅展示\n    toggleBannerAd(isShow: boolean) {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log(`【流量主横幅:${isShow}】仅支持小游戏平台!`)\n            return\n        }\n        if (this.bannerAd) {\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\n        }\n    }\n\n    // 初始化插屏\n    initInterstitialAd() {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【流量主插屏初始化】仅支持小游戏平台!')\n            return\n        }\n        if (this.interstitialId == '') {\n            console.log('【流量主】请配置插屏广告ID')\n            return\n        }\n        if (this.interstitialAd == null) {\n            this.interstitialAd = platform.createInterstitialAd({\n                adUnitId: this.interstitialId\n            });\n            this.interstitialAd.onError((err: any) => {\n                console.error('【流量主插屏】初始化有误')\n            });\n        }\n    }\n\n    // 插屏展示\n    showInterstitialAd() {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【流量主插屏】仅支持小游戏平台!')\n            return\n        }\n        if (this.interstitialAd) {\n            this.interstitialAd.show().catch((err: any) => {\n                console.error('【流量主插屏】加载失败')\n            });\n        }\n    }\n\n    // 初始化激励\n    initVideoAd() {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【流量主激励初始化】仅支持小游戏平台!')\n            return\n        }\n        if (this.videoId == '') {\n            console.log('【流量主】请配置激励视频广告ID')\n            return\n        }\n        if (this.videoAd == null) {\n            this.videoAd = platform.createRewardedVideoAd({\n                adUnitId: this.videoId\n            });\n            this.videoAd.onError((err: any) => {\n                console.error('【流量主激励】初始化有误')\n            });\n        }\n    }\n\n    // 激励展示\n    showVideoAd(success: any, fail?: any) {\n        const platform = this.getPlatform()\n        if (!platform) {\n            // console.log('激励模拟成功')\n            return success && success('模拟成功，激励奖励已发放')\n        }\n        if (this.videoAd) {\n            this.videoAd.offClose();\n            this.videoAd.onClose((res: any) => {\n                this.videoAd.offClose();\n                if (res && res.isEnded || res === undefined) {\n                    return success && success('激励奖励已发放')\n                } else {\n                    return fail && fail('视频播放中断')\n                }\n            });\n            this.videoAd.show().catch(() => {\n                this.videoAd.load()\n                    .then(() => this.videoAd.show())\n                    .catch((err: any) => {\n                        console.log('广告展示失败')\n                    })\n            });\n        } else {\n            // console.log('激励模拟成功')\n            return fail && fail('该功能尚未开放')\n        }\n    }\n\n    // 初始化横向格子\n    initCustomRowAd() {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【横向格子初始化】仅支持小游戏平台!')\n            return\n        }\n        if (this.customRowId == '') {\n            console.log('【流量主】请配置横向格子广告ID')\n            return\n        }\n        let winSize = platform.getSystemInfoSync();\n        if (this.customRowAd == null) {\n            this.customRowAd = platform.createCustomAd({\n                adUnitId: this.customRowId,\n                style: {\n                    width: 320,\n                    left: (winSize.screenWidth - 320) / 2,\n                    top: winSize.screenHeight - 50,\n                    fixed: 0\n                }\n            })\n            this.customRowAd.onError((err: any) => {\n                console.error('【流量主横向格子】初始化有误')\n            });\n        }\n    }\n\n    // 横向格子广告展示\n    toggleCustomRowAd(isShow: boolean = true) {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\n            return\n        }\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\n    }\n\n    // 初始化纵向格子\n    initCustomColAd() {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log('【纵向格子初始化】仅支持小游戏平台!')\n            return\n        }\n        if (this.customColId == '') {\n            console.log('【流量主】请配置纵向格子广告ID')\n            return\n        }\n        let winSize = platform.getSystemInfoSync();\n        if (this.customColAd == null) {\n            this.customColAd = platform.createCustomAd({\n                adUnitId: this.customColId,\n                style: {\n                    width: 150,\n                    left: winSize.screenWidth - 75,\n                    top: (winSize.screenHeight - 380) / 2,\n                    fixed: 0\n                }\n            })\n            this.customColAd.onError((err: any) => {\n                console.error('【流量主纵向格子】初始化有误')\n            });\n        }\n    }\n\n    // 横向格子广告展示\n    toggleCustomColAd(isShow: boolean = true) {\n        const platform = this.getPlatform()\n        if (!platform) {\n            console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\n            return\n        }\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\n    }\n\n    // 获取排行榜\n    getRank() {\n        if (typeof window['wx'] === 'undefined') {\n            console.log('【获取排名】仅支持微信平台!')\n            return\n        }\n        window['wx'].postMessage({\n            event: 'getRank'\n        })\n    }\n\n    /**\n     * 设置排名\n     * @param data 关卡数\n     */\n    setRank(data: number) {\n        if (typeof window['wx'] === 'undefined') {\n            console.log('【设置排名】仅支持微信平台!', data)\n            return\n        }\n        window['wx'].postMessage({\n            event: 'setRank',\n            data: data\n        })\n    }\n}\n\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport BaseLayer from \"./Baselayer\";\nimport DataManager from \"../manager/DataManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport BaseLanguageLayer from \"./BaseLanguageLayer\";\nimport SpriteManager from \"../manager/SpriteManager\";\nimport { Languages, LanguageType } from \"../Languages\";\nimport BaseItem from \"./BaseItem\";\nimport EventManager, { EventType } from \"../manager/EventManager\";\n\nconst { ccclass, property } = cc._decorator;\n\nclass YuYanItem extends BaseItem {\n    label: cc.Label = null;\n    nowData: any = null;\n    init(): void {\n        this.label = this.node.getChildByName(\"label\").getComponent(cc.Label);\n        this.onTouch(this.node, this.onTouchNode, this);\n    }\n    setData(data: any): void {\n        this.nowData = data;\n        this.label.string = Languages[this.nowData][DataManager.instance.language];\n    }\n    onTouchNode() {\n        DataManager.instance.language = LanguageType[this.nowData];\n        EventManager.instance.emit(EventType.UPDATE_LANGUAGE)\n    }\n}\n@ccclass\nexport default class SettingLayer extends BaseLanguageLayer {\n\n    panel: cc.Node = null\n    btnMusic: cc.Node = null\n    btnSound: cc.Node = null\n    btnClose: cc.Node = null\n\n    btnLanguage: cc.Node = null;\n    content: cc.Node = null;\n    nowLanguage: cc.Label = null;\n    yuyanItem: cc.Node = null;\n\n    show(): void {\n        super.show();\n        this.CreateListItem(this.content, this.yuyanItem, Object.keys(LanguageType), YuYanItem)\n    }\n\n    onLoad() {\n        super.onLoad();\n        this.panel = cc.find('style/panel', this.node)\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\n        this.btnClose = cc.find('btn_close', this.panel);\n        this.btnLanguage = cc.find('btnyuyan', this.panel);\n        this.content = cc.find('content', this.btnLanguage);\n        this.yuyanItem = cc.find('yuyanItem', this.node);\n        this.nowLanguage = cc.find('nowyuyan', this.btnLanguage).getComponent(cc.Label);\n        this.btnMusic.on('click', this.onMusicClick, this)\n        this.btnSound.on('click', this.onSoundClick, this)\n        this.btnClose.on('click', this.onCloseClick, this)\n        this.onTouch(this.btnLanguage, this.onLanguageClick, this);\n    }\n\n    onDestroy() {\n        super.onDestroy();\n        this.btnMusic.off('click', this.onMusicClick, this)\n        this.btnSound.off('click', this.onSoundClick, this)\n        this.btnClose.off('click', this.onCloseClick, this)\n    }\n\n    onEnable() {\n        this.zoomIn(this.panel)\n        this.rendorMusic()\n        this.rendorSound()\n        this.content.active = false;\n        this.updateNowLanguageLabel();\n        SdkManager.instance.showInterstitialAd()\n    }\n\n    updateNowLanguageLabel() {\n        // this.nowLanguage.string=Languages[]\n    }\n    onDisable() { }\n\n    onCloseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\n        // StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\n    }\n    onLanguageClick() {\n        if (this.content.active) {\n            this.content.active = false;\n        } else {\n            this.content.active = true;\n        }\n    }\n\n    onSoundClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\n        DataManager.instance.save()\n        this.rendorSound()\n    }\n\n    onMusicClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\n        DataManager.instance.save()\n        if (DataManager.instance.isMusicOn) {\n            AudioManager.instance.playMusic()\n        } else {\n            AudioManager.instance.stopMusic()\n        }\n        this.rendorMusic()\n    }\n\n    rendorMusic() {\n        let index = DataManager.instance.isMusicOn ? 1 : 0\n        this.btnMusic.getComponent(cc.Sprite).spriteFrame = SpriteManager.settingBtn[index]\n        // this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\n        // this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\n    }\n\n    rendorSound() {\n        let index = DataManager.instance.isSoundOn ? 1 : 0\n        this.btnSound.getComponent(cc.Sprite).spriteFrame = SpriteManager.settingBtn[index]\n        // this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\n        // this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\n    }\n}\n","\nimport BaseLanguageLayer from \"./BaseLanguageLayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ShareLayer extends BaseLanguageLayer {\n\n}","import BaseLanguageLayer from \"./BaseLanguageLayer\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ShopLayer extends BaseLanguageLayer {\n\n}\n","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport DataManager from \"../manager/DataManager\";\nimport HeaderLayer from \"./HeaderLayer\";\nimport ToastManager from \"../manager/ToastManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SkillSubmitLayer extends HeaderLayer {\n\n    style: cc.Node = null\n    btnSubmit: cc.Node = null\n    btnClose: cc.Node = null\n\n    onLoad() {\n        super.onLoad()\n        this.style = cc.find('style', this.node)\n    }\n\n    onDestroy() { }\n\n    onEnable() {\n        SdkManager.instance.showInterstitialAd()\n        this.rendorPower()\n        this.rendorPowerTimer()\n        this.rendorKeys()\n        this.rendorPanel()\n    }\n\n    onDisable() { }\n\n    rendorPanel() {\n        let panel = null\n        this.style.children.forEach((node, index) => {\n            if (index == DataManager.instance.skillIndex) panel = node\n            node.active = index == DataManager.instance.skillIndex\n        })\n        this.zoomIn(panel)\n        const btnClose: cc.Node = panel.getChildByName('btn_close')\n        const btnSubmit: cc.Node = panel.getChildByName('btn_submit')\n        if (!btnClose.hasEventListener('click')) btnClose.on('click', this.onCloseClick, this)\n        let keys = 0\n        if (DataManager.instance.skillIndex > 1) keys = 1\n        btnSubmit.getChildByName('icon_key').active = !(DataManager.instance.keys <= keys)\n        btnSubmit.getChildByName('icon_video').active = (DataManager.instance.keys <= keys)\n        if (!btnSubmit.hasEventListener('click')) btnSubmit.on('click', this.onSubmitClick, this)\n    }\n\n    onCloseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.setMainTimer()\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SKILL_SUBMIT, false)\n    }\n\n    onSubmitClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        let keys = 0\n        if (DataManager.instance.skillIndex > 1) keys = 1\n        if (DataManager.instance.keys <= keys) {\n            SdkManager.instance.showVideoAd((msg: string) => {\n                if (!SdkManager.instance.getPlatform()) {\n                    ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\n                }\n                DataManager.instance.isSkilling = true\n                StaticInstance.uiManager.setMainSkillTip()\n                StaticInstance.uiManager.setMainTimer(true)\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SKILL_SUBMIT, false)\n            }, (msg: string) => {\n                ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n            })\n        } else {\n            DataManager.instance.keys -= keys + 1\n            DataManager.instance.isSkilling = true\n            StaticInstance.uiManager.setMainSkillTip()\n            StaticInstance.uiManager.setMainTimer(true)\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SKILL_SUBMIT, false)\n        }\n    }\n}\n","\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SpriteManager extends cc.Component {\n\n    @property(cc.SpriteFrame)\n    modelSpriteFrame: Array<cc.SpriteFrame> = [];\n    @property(cc.SpriteFrame)\n    taskIconSprite: Array<cc.SpriteFrame> = [];\n    @property(cc.SpriteFrame)\n    shopIconSprite: Array<cc.SpriteFrame> = [];\n    @property(cc.SpriteFrame)\n    shareIconSprite: Array<cc.SpriteFrame> = [];\n    @property(cc.SpriteFrame)\n    custemPuSprite: Array<cc.SpriteFrame> = [];\n    @property(cc.SpriteFrame)\n    custemTZSprite: Array<cc.SpriteFrame> = [];\n    @property(cc.SpriteFrame)\n    settingBtnSprite: Array<cc.SpriteFrame> = [];\n\n\n    /**模式选择按钮 */\n    static ModelSprite: Array<cc.SpriteFrame> = [];\n    /**任务按钮 */\n    static taskIcon: Array<cc.SpriteFrame> = [];\n    /**商店按钮 */\n    static shopIcon: Array<cc.SpriteFrame> = [];\n    /**邀请按钮 */\n    static shareIcon: Array<cc.SpriteFrame> = [];\n    /**普通关卡 */\n    static custemIcon: Array<cc.SpriteFrame> = [];\n    /**挑战关卡 */\n    static custemTZIcon: Array<cc.SpriteFrame> = [];\n    /**设置按钮 */\n    static settingBtn: Array<cc.SpriteFrame> = [];\n    protected onLoad(): void {\n        SpriteManager.ModelSprite = this.modelSpriteFrame;\n        SpriteManager.taskIcon = this.taskIconSprite;\n        SpriteManager.shopIcon = this.shopIconSprite;\n        SpriteManager.shareIcon = this.shareIconSprite;\n        SpriteManager.custemIcon = this.custemPuSprite;\n        SpriteManager.custemTZIcon = this.custemTZSprite;\n        SpriteManager.settingBtn = this.settingBtnSprite;\n    }\n\n    start() {\n\n    }\n\n}\n","// Created by carolsail\n\nimport GameManager from \"./manager/GameManager\";\nimport UIManager from \"./manager/UIManager\";\nimport TransitionsManager from \"./plugins/UITransitionControl\";\n\nexport class StaticInstance {\n    static uiManager: UIManager | undefined = undefined;\n    static gameManager: GameManager | undefined = undefined;\n    static transitionsManager: TransitionsManager | undefined = undefined\n\n    static setUIManager(context: UIManager){\n        StaticInstance.uiManager = context;\n    }\n\n    static setGameManager(context: GameManager){\n        StaticInstance.gameManager = context\n    }\n\n    static setTransitionManager(context: TransitionsManager){\n        StaticInstance.transitionsManager = context\n    }\n}","import BaseLanguageLayer from \"./BaseLanguageLayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TaskLayer extends BaseLanguageLayer {\n\n}","// Created by carolsail\n\nexport default class ToastManager {\n\n    private static _instance: any = null\n\n    static getInstance<T>(): T {\n        if (this._instance === null) {\n            this._instance = new this()\n        }\n\n        return this._instance\n    }\n\n    static get instance() {\n        return this.getInstance<ToastManager>()\n    }\n\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\n        // canvas\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\n        let width = canvas.node.width;\n        let height = canvas.node.height;\n\n        // 节点\n        let bgNode = new cc.Node();\n        bgNode.group = 'ui'\n\n        // Lable文本格式设置\n        let textNode = new cc.Node();\n        let textLabel = textNode.addComponent(cc.Label);\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\n        textLabel.fontSize = 30;\n        textLabel.string = text;\n\n        // 当文本宽度过长时，设置为自动换行格式\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\n            textNode.width = (width * 3) / 5;\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\n        } else {\n            textNode.width = text.length * textLabel.fontSize;\n        }\n        let lineCount =\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\n        textNode.height = textLabel.fontSize * lineCount;\n\n        // 背景设置\n        let ctx = bgNode.addComponent(cc.Graphics);\n        ctx.arc(\n            -textNode.width / 2,\n            0,\n            textNode.height / 2 + 20,\n            0.5 * Math.PI,\n            1.5 * Math.PI,\n            true\n        );\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\n        ctx.arc(\n            textNode.width / 2,\n            0,\n            textNode.height / 2 + 20,\n            1.5 * Math.PI,\n            0.5 * Math.PI,\n            true\n        );\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\n        ctx.fillColor = bg_color;\n        ctx.fill();\n\n        bgNode.addChild(textNode);\n\n        // gravity 设置Toast显示的位置\n        if (gravity === \"CENTER\") {\n            bgNode.y = 0;\n            bgNode.x = 0;\n        } else if (gravity === \"TOP\") {\n            bgNode.y = bgNode.y + (height / 5) * 2;\n        } else if (gravity === \"BOTTOM\") {\n            bgNode.y = bgNode.y - (height / 5) * 2;\n        }\n\n        canvas.node.addChild(bgNode);\n        // 执行动画\n        let finished = cc.callFunc(function() {\n            bgNode.destroy();\n        });\n        let action = cc.sequence(\n            cc.moveBy(duration, cc.v2(0, 0)),\n            cc.fadeOut(0.3),\n            finished\n        );\n        // bgNode.runAction(action); \n        cc.tween(bgNode).then(action).start()\n    }\n}\n","// Created by carolsail\n\nimport { ENUM_UI_TYPE } from './../Enum';\nimport { StaticInstance } from './../StaticInstance';\nimport BaseLayer from '../layer/Baselayer';\nimport PoolManager from './PoolManager';\nimport MainLayer from '../layer/MainLayer';\nimport MainLevelLayer from '../layer/MainLevelLayer';\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class UIManager extends cc.Component {\n\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\n\n    protected onLoad(): void {\n        StaticInstance.setUIManager(this)\n    }\n\n    init() {\n        for (let type in ENUM_UI_TYPE) {\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\n            if (node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\n                node.active = false\n                node.addComponent(ENUM_UI_TYPE[type])\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\n            }\n        }\n    }\n\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\n        if (this.uiMap.has(key)) {\n            const layer = this.uiMap.get(key)\n            status ? layer.show() : layer.hide()\n            callback && callback()\n        }\n    }\n\n    isActive(key: ENUM_UI_TYPE) {\n        if (this.uiMap.has(key)) {\n            return this.uiMap.get(key).node.active\n        }\n        return false\n    }\n\n    getActiveTypes() {\n        const types: ENUM_UI_TYPE[] = []\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE) => {\n            if (this.isActive(type)) types.push(type)\n        })\n        return types\n    }\n\n    setMainLevelUpNotice() {\n        const layer: MainLayer = this.uiMap.get(ENUM_UI_TYPE.MAIN) as MainLayer\n        layer?.setLevelUpNotice()\n    }\n\n    setMainTimer(status: boolean = true) {\n        const layer: MainLayer = this.uiMap.get(ENUM_UI_TYPE.MAIN) as MainLayer\n        if (status) {\n            layer?.onTimerStart()\n        } else {\n            layer?.onTimerStop()\n        }\n    }\n\n    setMainTimerRendor() {\n        const layer: MainLayer = this.uiMap.get(ENUM_UI_TYPE.MAIN) as MainLayer\n        layer?.setTimerRendor()\n    }\n\n    setMainSkillTip() {\n        const layer: MainLayer = this.uiMap.get(ENUM_UI_TYPE.MAIN) as MainLayer\n        layer?.setSkillTip()\n    }\n\n    setMainLevelCrash() {\n        const layer: MainLevelLayer = this.uiMap.get(ENUM_UI_TYPE.MAIN_LEVEL) as MainLevelLayer\n        layer?.setCrashRendor()\n    }\n\n    setMainLevelTip() {\n        const layer: MainLevelLayer = this.uiMap.get(ENUM_UI_TYPE.MAIN_LEVEL) as MainLevelLayer\n        layer?.setLevelTip()\n    }\n}\n","const { ccclass, property } = cc._decorator;\n\nexport enum ENUM_SCROLL_DIR { V, H }\n\n@ccclass\nexport default class UIScrollControl extends cc.Component {\n    private scrollView: cc.ScrollView = null\n    private contentSize: cc.Size = null\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\n    private totalCount: number = 0\n    private itemCount: number = 0\n    private childrenList: cc.Node[] = []\n    private itemDistance: number = 0\n    private contentSizeStart: cc.Size = null\n    private isStartFlag: boolean = false\n    private theMaxID: number = 0\n    private refreshCB: Function = null\n\n\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\n        if (callBack) this.refreshCB = callBack\n\n        if (this.isStartFlag == false) {\n            this.scrollView = this.node.getComponent(cc.ScrollView);\n            if (this.scrollView == null || this.scrollView.content == null) return\n\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\n\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\n\n            _maskWidget.isAlignLeft = true\n            _maskWidget.left = 0\n\n            _maskWidget.isAlignRight = true\n            _maskWidget.right = 0\n\n            _maskWidget.isAlignTop = true\n            _maskWidget.top = 0\n\n            _maskWidget.isAlignBottom = true\n            _maskWidget.bottom = 0\n\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\n            this.scrollView.content.setContentSize(this.contentSize)\n            this.contentSizeStart = this.scrollView.content.getContentSize();\n        }\n\n        if (_tempNode == null) return\n\n        this.scrollView.content.setContentSize(this.contentSizeStart)\n\n        this.clear()\n\n        this.totalCount = _totalCount\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\n\n        if (_dir == ENUM_SCROLL_DIR.V) {\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\n\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\n\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\n\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\n\n            this.itemCount = _tempCount + 2\n\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\n\n            this.itemDistance = _size.height\n        }\n        else if (_dir == ENUM_SCROLL_DIR.H) {\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\n\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\n\n            this.itemCount = _tempCount + 2\n\n            if (this.totalCount <= this.itemCount) {\n                this.itemCount = this.totalCount\n            }\n\n            this.itemDistance = _size.width\n        }\n\n        if (this.scrollView.scrollEvents.length <= 0) {\n            let eventHandler = new cc.Component.EventHandler();\n            eventHandler.target = this.node;\n            eventHandler.component = \"UIScrollControl\";\n            eventHandler.handler = \"OnScroll\";\n            this.scrollView.scrollEvents.push(eventHandler);\n        }\n\n        this.isStartFlag == true\n        this.theMaxID = 0\n\n        this.initShowAreaItems(_tempNode, scrollTo)\n    }\n\n    private clear() {\n        this.scrollView.content.removeAllChildren()\n        this.childrenList = []\n    }\n\n    /**初始化可见的item */\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\n        for (let i = 0; i < this.itemCount; i++) {\n            //cc.log(\" i = \" + i)\n            let curPos: cc.Vec2 = cc.v2(0, 0)\n            let node: cc.Node = cc.instantiate(_temp_node)\n            this.scrollView.content.addChild(node)\n            node.active = true\n            node.opacity = 255\n\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\n            }\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\n            }\n\n            node.name = `cell_${i}`\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\n            node.setPosition(curPos)\n\n            this.onRefresh(node, i, i)\n\n            this.childrenList.push(node)\n        }\n        // this.scrollView.scrollToTop()\n        scrollTo && scrollTo(this.scrollView)\n    }\n\n    /**滑动事件 */\n    private OnScroll() {\n        //获取滚动视图相对于左上角原点的当前滚动偏移\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\n        let offset: number = 0;\n\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\n            offset = scrollOffset.y\n        }\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\n            //水平的offset是负数，为什么会有这么sb的设计，将它取反和垂直方向的统一一下\n            offset = -scrollOffset.x\n        }\n        this.refreshLayout(offset)\n    }\n\n    /** 强行刷新布局 */\n    private refreshLayout(_curOffset: number) {\n        let offset: number = _curOffset\n\n        //最大高度，超过该高度，不刷新\n        let _max_rect_size: number = this.totalCount * this.itemDistance\n\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\n\n        let _index: number = 0 //从0开始\n        let _min_index: number = Math.floor(offset / this.itemDistance);\n\n        //miniIdx到theMaxID都会刷新\n        for (let i = 0; i < this.itemCount; i++) {\n            let node: cc.Node = this.childrenList[i];\n            _index = _min_index + i;\n            this.refreshItem(_index, i, node);\n        }\n        this.theMaxID = _min_index + this.itemCount\n    }\n\n    /**\n     * \n     * @param _index UI该刷新的第几个元素\n     * @param _node_index \n     * @param node \n     */\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\n        if (_index < 0 || _index >= this.totalCount) {\n            // cc.log(\"索引越界, _index = \" + _index + \", this.total_count = \" + this.total_count)\n            return;\n        }\n\n        if (node == null) {\n            // cc.log(\"node == null\");\n            return;\n        }\n\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\n\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\n        }\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\n        }\n\n        node.setPosition(curPosition)\n        this.onRefresh(node, _index, _node_index);\n    }\n\n    /**\n     * \n     * @param node \n     * @param _index \n     * @param nodeIndex \n     */\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\n        //cc.log(\"--------------- _index = \" + _index)\n        if (this.refreshCB != null) {\n            this.refreshCB(node, _index, nodeIndex)\n        }\n    }\n}\n","// Created by carolsail\nimport { StaticInstance } from '../StaticInstance';\nimport { ENUM_UI_TYPE } from '../Enum';\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UITransitionControl extends cc.Component {\n\n    @property\n    transitionTime: number = 0.3\n\n    mask: cc.Mask = null\n    img: cc.Node = null\n    scale: number = 0\n    \n    protected onLoad(): void {\n        StaticInstance.setTransitionManager(this)\n\n        const winSize = cc.winSize;\n        this.mask = this.node.getComponent(cc.Mask)\n        this.img = this.node.getChildByName('img')\n        this.img.width = winSize.width\n        this.img.height = winSize.height\n\n        const size = Math.max(winSize.width, winSize.height)\n        this.scale = size / this.node.width\n        this.node.scale = this.scale\n    }\n\n    play(from: ENUM_UI_TYPE = null, to: ENUM_UI_TYPE = null, changed?: () => void, finished?: () => void){\n        this.img.opacity = 255\n        const act1 = cc.scaleTo(this.transitionTime, 1)\n        const act2 = cc.callFunc(()=>{\n            if (from) StaticInstance.uiManager.toggle(from, false)\n            if (to) StaticInstance.uiManager.toggle(to)\n            changed && changed()\n        })\n        const act3 = cc.scaleTo(this.transitionTime, this.scale)\n        const act4 = cc.callFunc(()=>{\n            this.img.opacity = 0\n            finished && finished()\n        })\n        const act = cc.sequence(act1, act2, act3, act4)\n        cc.tween(this.node).then(act).start()\n    }\n\n    onStart(from: ENUM_UI_TYPE = null, to: ENUM_UI_TYPE = null, callback?: () => void){\n        this.img.opacity = 255\n        const act1 = cc.scaleTo(this.transitionTime, 1)\n        const act2 = cc.callFunc(()=>{\n            this.mask.enabled = false\n            if (from) StaticInstance.uiManager.toggle(from, false)\n            if (to) StaticInstance.uiManager.toggle(to)\n            callback && callback()\n        })\n        const act = cc.sequence(act1, act2)\n        cc.tween(this.node).then(act).start()\n    }\n\n    onEnd(){\n        this.scheduleOnce(()=>{\n            this.mask.enabled = true\n            const act1 = cc.scaleTo(this.transitionTime, this.scale)\n            const act2 = cc.callFunc(()=>{\n                this.img.opacity = 0\n            })\n            const act = cc.sequence(act1, act2)\n            cc.tween(this.node).then(act).start()\n        })\n    }\n}\n","// Created by carolsail\n\n// 随机整数\nexport function random(lower: number, upper: number): number {\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\n}\n\n// 数组打乱\nexport function shuffle(arr: any[]) {\n    let length: number = arr.length,\n        randomIndex: number,\n        temp: any;\n    while (length) {\n        randomIndex = Math.floor(Math.random() * (length--));\n        temp = arr[randomIndex];\n        arr[randomIndex] = arr[length];\n        arr[length] = temp\n    }\n    return arr\n}\n\n// 数组对象排序\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\n    if (arr instanceof Array) {\n        return arr.sort((a, b) => {\n            if (a[key] > b[key]) {\n                return flag ? 1 : -1\n            } else if (a[key] < b[key]) {\n                return flag ? -1 : 1\n            } else {\n                return 0\n            }\n        })\n    }\n}\n\n// 秒数转换\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\n    seconds = Number(seconds)\n    let obj: any = {}\n    obj.h = Number.parseInt(String(seconds / 3600));\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\n    if (obj.h < 10) obj.h = '0' + obj.h;\n    if (obj.i < 10) obj.i = '0' + obj.i;\n    if (obj.s < 10) obj.s = '0' + obj.s;\n    // 3.解析\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\n    return rs;\n}\n\n// 两点距离\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\n    return dis;\n}\n\n// 两点角度\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\n    //计算出朝向\n    const dx = end.x - start.x;\n    const dy = end.y - start.y;\n    const dir = cc.v2(dx, dy);\n    //根据朝向计算出夹角弧度\n    const angle = dir.signAngle(cc.v2(1, 0));\n    //将弧度转换为欧拉角\n    const degree = angle / Math.PI * 180;\n    return -degree\n}\n\n// 位置转棋盘xy\nexport function getXYFromPos(px: number, py: number, width: number, height: number) {\n    let x = 0, y = 0\n    x = Math.floor(px / width)\n    y = Math.floor(py / height)\n    return { x, y }\n}\n\n// 把节点1转节点2坐标\nexport function toXY(node1: cc.Node, node2: cc.Node) {\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0))\n    const pos = node2.convertToNodeSpaceAR(wpos)\n    return pos\n}","// Created by carolsail\n\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\nimport { StaticInstance } from './../StaticInstance';\nimport AudioManager from \"../manager/AudioManager\";\nimport SdkManager from \"../manager/SdkManager\";\nimport ToastManager from \"../manager/ToastManager\";\nimport DataManager from \"../manager/DataManager\";\nimport HeaderLayer from \"./HeaderLayer\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoseLayer extends HeaderLayer {\n\n    panel: cc.Node = null\n    btnNext: cc.Node = null\n    btnShare: cc.Node = null\n    btnClose: cc.Node = null\n\n    onLoad() {\n        super.onLoad()\n        this.panel = cc.find('style/panel', this.node)\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\n        this.btnNext.on('click', this.onNextClick, this)\n        this.btnShare.on('click', this.onShareClick, this)\n        this.btnClose = cc.find('btn_close', this.panel)\n        this.btnClose.on('click', this.onCloseClick, this)\n    }\n\n    onDestroy() {\n        this.btnNext.off('click', this.onNextClick, this)\n        this.btnShare.off('click', this.onShareClick, this)\n        this.btnClose.off('click', this.onCloseClick, this)\n    }\n\n    onEnable() {\n        this.zoomIn(this.panel)\n        SdkManager.instance.toggleBannerAd(true)\n        StaticInstance.uiManager.setMainTimer(false)\n        this.rendorKeys()\n        this.rendorPower()\n        this.rendorPowerTimer()\n    }\n\n    onDisable() {\n        SdkManager.instance.toggleBannerAd(false)\n    }\n\n    onNextClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        if (DataManager.instance.power <= 0) {\n            ToastManager.instance.show('能量已用完, 请先补充能量', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n            return\n        }\n        DataManager.instance.power -= 1\n        DataManager.instance.save()\n        StaticInstance.transitionsManager.play(ENUM_UI_TYPE.WIN, null, () => {\n            StaticInstance.gameManager.onGameLevelStart()\n        })\n    }\n\n    onShareClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        if (SdkManager.instance.getPlatform()) {\n            SdkManager.instance.activeShare()\n        } else {\n            ToastManager.instance.show('仅支持小游戏平台', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\n        }\n    }\n\n    onCloseClick() {\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN_LEVEL, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\n    }\n}\n","const { ccclass, property } = cc._decorator;\n\nexport interface Transaction{ amount: string, payload?: string, callBack?: (result: any)=>void}\n@ccclass('TonConnectUi')\nexport class TonConnectUi {\n    private static _instance: TonConnectUi;\n    private tonWallet: string ;\n    private constructor() {\n\n    }\n    public static get Instance(): TonConnectUi {\n        if (!TonConnectUi._instance) {\n            TonConnectUi._instance = new TonConnectUi();\n        }\n        return TonConnectUi._instance;\n    }\n\n    public toNano(ton: string) {\n\n        return (parseFloat(ton) * 1000000000).toString();\n    }\n\n    public isConnected(): boolean {\n        if (!this._tgConnect) {\n            console.error(\"ton ui not inited!\");\n            return false;\n        }\n        return this._tgConnect.connected;\n    }\n  public disconnect() {\n\n    if (!this._tgConnect) {\n        console.error(\"ton ui not inited!\");\n        return;\n    }\n    this._tgConnect.disconnect();\n    }\n    public account() {\n        if (!this._tgConnect) {\n            console.error(\"ton ui not inited!\");\n            return null;\n        }\n        return this._tgConnect.account;\n\n    }\n    public parseRaw(raw: string) {\n        return raw;\n    }\n    private _tgConnect: any = null;\n    public async init(manifestUrl: string, tonWallet: string, language?: string) : Promise<{success: boolean}> {\n        this.tonWallet = tonWallet;\n        this._tgConnect =  await new Promise<any>((resolve, reject) => {\n            // if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n                const script = document.createElement(\"script\");\n                script.src = \"https://unpkg.com/@tonconnect/ui@2.0.9/dist/tonconnect-ui.min.js\";\n                script.async = true;\n                script.onload = () => {\n                    const intervalId = setInterval(() => {\n                        if ((window as any).TON_CONNECT_UI) {\n                            console.log(\"loading telegram web app sdk success!\");\n                          const tonConnect =  new window['TON_CONNECT_UI'].TonConnectUI(\n                                {\n                                    manifestUrl: manifestUrl\n                                }\n                            )\n                            tonConnect.uiOptions = {\n                                language: language||'en',\n                            };\n                            resolve(tonConnect);\n                            clearInterval(intervalId);\n                        }\n                    }, 100);\n                };\n                script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n                document.head.appendChild(script);\n            // }\n        });\n\n        if (this._tgConnect ) {\n      \n            return Promise.resolve({success: true});\n        } else {\n            return Promise.resolve({success: false});\n        }\n\n      \n\n    }\n    public  subscribeWallet(updateConnect:()=>void) {\n        console.log(\"subscribe wallet\");\n        updateConnect();\n        if(this._tgConnect) {\n        const unsubscribeModal = this._tgConnect.onStatusChange(state => {\n            console.log(\"model state changed! : \", state);\n\n            updateConnect();\n        });\n        const unsubscribeConnectUI = this._tgConnect.onStatusChange(info => {\n            console.log(\"wallet info status changed : \", info);\n    \n            updateConnect();\n        });\n    }\n\n\n\n    }\n\n    public async openModal() {\n        if (!this._tgConnect) return;\n        console.log(\"open modal\", await this._tgConnect.getWallets());\n\n        if (this._tgConnect.connected) {\n            this._tgConnect.disconnect();\n        } else {\n            this._tgConnect.openModal();\n        }\n    }\n\n    private createPayload() {\n\n        return '';\n    }\n\n    public async sendTransaction(args:Transaction ) {\n        if(!this._tgConnect||this._tgConnect.connected==false){\n            console.error('ton connect not connected');\n            throw new Error('ton connect not connected');\n        }\n    const transaction = {\n        validUntil: Math.floor(Date.now() / 1000) + 120, // 120 sec\n        messages: [\n            {\n                address: this.tonWallet ,\n                amount: args.amount,\n                payload: args.payload // just for instance. Replace with your transaction payload or remove\n\n            }\n        ]\n    }\n    \n    try {\n        const result = await this._tgConnect.sendTransaction(transaction);\n        if(args.callBack) {\n            args.callBack({\n                success: true,\n                result: result\n            });\n        }\n        // you can use signed boc to find the transaction\n    } catch (e) {\n        console.error(e);\n        if(args.callBack) {\n            args.callBack({\n                success: false,\n                result: e.message\n            });\n        }\n    }\n}\n\n    \n}\n\n\n","const { ccclass, property } = cc._decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    // if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    console.log(\"loading telegram web app sdk success!\");\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    // }\n});\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init() : Promise<{success: boolean}> {\n        this._tgWebAppJS = await new Promise<any>((resolve, reject) => {\n            // if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n                const script = document.createElement(\"script\");\n                script.src = \"https://telegram.org/js/telegram-web-app.js\";\n                script.async = true;\n                script.onload = () => {\n                    const intervalId = setInterval(() => {\n                        if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                            console.log(\"loading telegram web app sdk success!\");\n                            resolve((window as any).Telegram.WebApp);\n                            clearInterval(intervalId);\n                        }\n                    }, 100);\n                };\n                script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n                document.head.appendChild(script);\n            // };\n        });\n\n        if (this._tgWebAppJS) {\n            return Promise.resolve({success: true});\n        } else {\n            return Promise.resolve({success: false});\n        }\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        console.log(url);\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + url + '&' + new URLSearchParams({ text: text || '' }).toString();\n        this.openTelegramLink(shareUrl);\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        } \n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        } \n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        } \n        return this._tgWebAppJS.initData;\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        } \n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n}\n\n\n","const { ccclass, property } = cc._decorator;\n\n\n@ccclass\nexport class WebTon{\n    private static _instance: WebTon;\n    private _webTon: any = null;\n    private constructor() {\n\n    }\n    public static get Instance(): WebTon {\n        if (!WebTon._instance) {\n            WebTon._instance = new WebTon();\n        }\n        return WebTon._instance;\n    }\n    public async init(): Promise<{success: boolean}> {\n\n\n        this._webTon = await new Promise<any>((resolve, reject) => {\n            const intervalId = setInterval(() => {\n                if ((window as any).TonWeb) {\n                    console.log(\"loading ton sdk success!\");\n                    resolve(new (window as any).TonWeb());\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        });\n        if (this._webTon) {\n            return Promise.resolve({success: true});\n        } else {\n            return Promise.resolve({success: false});\n        }\n    }\n\n    public async parseAddress(hexAddress: string) {\n        \n\n        const Address = this._webTon.utils.Address;\n\n        // 通过 TonWeb 创建地址对象\n        const address = new Address(hexAddress);\n        \n        // 将地址转换为 base64url 格式的用户可读格式\n        const userFriendlyAddress = address.toString(true, false, true);\n        return userFriendlyAddress;\n    }\n\n    public async createMessagePayload( message:string){\n\n        const cell =  new this._webTon.boc.Cell();\n        cell.bits.writeUint(0, 32)\n        cell.bits.writeString(message);\n        const cellBytes = await cell.toBoc(false);\n        const payload =this._webTon.utils.bytesToBase64(cellBytes);\n         return payload;\n    \n    }\n    \n\n\n\n\n}"],"file":"index.js"}